;----------------------------------------------------------------------------------------
;   Stream-based processing using a graph interpreter :                                   
;   
;   The main script receives a code for the implementation of a use-case :
;       - The adpcm decoder is pre-configured in the graph (presets)
;       - adpcm content can result in mono/stereo resulting in a need for stream conversion
;       - The modulator is activated after a delay of one second
;       - The ADC detection flag is used by a second script to toggle a GPIO
;       - The tone modulator is stopped at T0+2seconds
;
;   Interface "0"
;   +----------+     +---------+    +----------+
;   | APP      +----->ADPCM dec+---->converter +
;   +----------+     +---------+    +----------+
;                                        |
;                                        |1
;   +----------+     +---------+     +---v-----+   +--------+   +---------+
;   | CmdScript+.....>Tone Modu+----->Mixer    +---> filter0+---> line-out| Interface "2"
;   +----------+     +---------+    0+---------+2  +--------+   +---------+   
;
;
;   Interface "1"
;   +----------+     +--------+    0+--------+1    +--------+     +--------+
;   | ADC      +-----> filter1+----->split   +----->detect  +-----> GPIO   | Interface "3"
;   +----------+     +--------+     +----+---+     +--------+     +--------+
;                                        |2
;                                        +---------------------------------> Interface "4"
;
;----------------------------------------------------------------------------------------
;                          
;----------------------------------------------------------------------------------------

set_file_path           0    ./                            
set_file_path           1    ../../stream_graph/           
set_file_path           2    ../../stream_test/            
set_file_path           3    ../../stream_platform/computer/


;----------------------------------------------------------------------------------------
format_index         0
format_frame_length     8

format_index         1
format_frame_length     12

;----------------------------------------------------------------------------------------
stream_io               0
stream_io_hwid          0       ; io_platform_data_in_0.txt      
stream_io_format        0

stream_io               1
stream_io_hwid          9       ; io_platform_data_out_0.txt     

stream_io               2
stream_io_hwid          6       ; io_platform_line_out_0.txt     

stream_io               3
stream_io_hwid          2       ; io_platform_analog_sensor_0.txt

stream_io               4
stream_io_hwid          7       ; io_platform_gpio_out_0.txt     
stream_io_format        1


;
;----------------------------------------------------------------------------------------
script 0
    script_code
        2 h16; 2002 0001        movi int16 r0 1
        1 h16; e810             equ r0,#0
        1 h16; 0381             ccallsys 1
        1 h16; C000             ret
    end                       


;----------------------------------------------------------------------------------------
; Subgraph #1
;   path and filename
;   list of indexes to the top_graph_interface (or to the indexes if we are already in a subgraph)
;   list of VIDs used in the subgraph
;
;subgraph 
;    sub1                    ; subgraph name, used for name mangling
;    3   sub_graph_0.txt     ; path and file name
;    5 i16: 0 1 2 3 4        ; 5 streaming interfaces data_in_0, data_out_0 .. 
;    3 i16: 0 0 0            ; 3 partitions here assigned to VID0 : fast-working slow-working slow-static



;----------------------------------------------------------------------------------------
; arm_stream_filter
;----------------------------------------------------------------------------------------
;   Operation : receives one multichannel stream and produces one filtered multichannel stream. 
;   Filtering is identical on each channel. GUI parameters are given in float, implementation 
;   is CMSIS-DSP through Stream services
;   Parameters : biquad filters coefficients used in cascade. Implementation is 2 Biquads max.
;   (see www.w3.org/TR/audio-eq-cookbook)
;
;   presets:
;   #0 : bypass
;   #1 : LPF fc=fs/4
;   #11..42: delay-line of 1..32 samples
;
;   parameter of filter : 
;   - number of biquads in cascade (1 or 2)
;   - coefficients in Q15
;
node arm_stream_filter 0 

    node_preset       1                     ; Q15 filter
    node_malloc_add   4  1                  ; for debug
    node_map_hwblock  1  5                  ; TCM = VID5
    node_map_swap     1  3                  ; SRAM1

    node_parameters
        1  u8;  0                           TAG = "all parameters"
        1  u8;  2                           Two biquads
        1  u8;  1                           postShift
        5 s16; 9315, 14928,  9315, -25576, 11147, 
        5 s16; 9315,  5736,  9315,  -9328, 26591, 

;        1  i8;  0       0="load all parameters"
;        1  u8;  2       Two biquads
;        1  i8;  0       postShift
;        5 f32; 0.284277f 0.455582f 0.284277f 0.780535f -0.340176f  b0/b1/b2/-a1/-a2  ellip(4, 1, 40, 3600/8000, 'low')
;        5 f32; 0.284277f 0.175059f 0.284277f 0.284669f -0.811514f    
    end
end

;-----------------------------------------
node arm_stream_filter 1                     ; second instance, default VID

    node_preset       1                     ; Q15 filter
    node_parameters
        1  u8;  0                           TAG = "all parameters"
        1  u8;  2                           Two biquads
        1  u8;  1                           postShift
        5 s16; 9315, 14928,  9315, 25576, -11147, 
        5 s16; 9315,  5736,  9315,  9328, -26591, 
    end
end

;----------------------------------------------------------------------------------------
node sigp_stream_detector 0       ; arm_stream_detector
end

;----------------------------------------------------------------------------------------
node arm_stream_decompressor 1
    preset 1                        ; IADPCM 
end

;----------------------------------------------------------------------------------------
node arm_stream_converter 0         ; arm_stream_converter
end

;----------------------------------------------------------------------------------------
node 
    arm_stream_modulator 0      ; arm_stream_modulator : preset tone generation
end

;----------------------------------------------------------------------------------------
node 
    arm_stream_mixer 0          ; arm_stream_mixer
end

;----------------------------------------------------------------------------------------
node 
    arm_stream_split 0          ; arm_stream_split
end

;--------------- LAST SECTION OF THE GRAPH-------------------------------------
arc_section

    arc_input 0 arm_stream_decompressor 0 0 0  
    arc_input 1 arm_stream_filter       1 0 0  
                                        
    arc_output 2 arm_stream_filter      0 1 0  
    arc_output 2 sigp_stream_detector    0 1 0  
    arc_output 2 arm_stream_split       0 1 0  
                                        
    arc arm_stream_decompressor 0 1 0       arm_stream_converter 0 0 0     
    arc_map_hwblock     0

    arc arm_stream_converter    0 1 0       arm_stream_mixer     0 0 0     
    arc arm_stream_modulator    0 1 0       arm_stream_mixer     0 0 0     
    arc arm_stream_mixer        0 1 0       arm_stream_filter    0 0 0     
    arc arm_stream_filter       1 1 0       arm_stream_split     0 0 0     
    arc arm_stream_split        0 1 0       sigp_stream_detector  0 0 0     
