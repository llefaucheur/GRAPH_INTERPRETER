;--------------------------------------------------------------------------
;   Stream-based processing using a graph interpreter :                    
; 
;   +----------+     +-----------+      +--------+
;   | ADC      +-----> converter +------> GPIO   | 
;   +----------+     +-----------+      +--------+
;                
;----------------------------------------------------------------------
graph_locations -1 -1 -1 -1 0 0 0   ; script and linked-list stays in flash 
;----------------------------------------------------------------------
format_index            0                           ; router input
format_frame_length     20                          ; 
format_raw_data         17                          ; STREAM_S16
format_nbchan           2                           ; stereo
format_sampling_rate    hertz 16000                 ; 
format_interleaving     0                           ; raw data interleaving
;
format_index            1                           ; router output
format_frame_length     32                          ; 
format_raw_data         27                          ; STREAM_FP32
format_nbchan           2                           ; stereo
format_sampling_rate    hertz 48000                 ; 
format_interleaving     0                           ; raw data interleaving
;----------------------------------------------------------------------
stream_io_graph         0   1                       ; io_platform_data_in_1.txt
stream_io_format        0                           ; 
stream_io_setting       2 0 0                       ; see manifest : io_sampling_rate hertz {1 8e3 16e3 48e3}, '2' to set 16kHz
;
stream_io_graph         1   9                       ; io_platform_data_out_0.txt
stream_io_format        1                           ; 
stream_io_setting       3 0 0                       ; see manifest : io_sampling_rate hertz {2 16e3 44.1e3 48000}, '3' to set 48kHz
;----------------------------------------------------------------------
node arm_stream_router  0 
    node_preset         2           ; 0:just interleaving, 1:just format conversion, 2:with ASRC, 3:with SSRC
    node_parameters     0           ; TAG = "all parameters"
;
        1  u8;  2                   ; nb input lines
        1  u8;  0                   ; index of the arc used for its frame size as time reference
        1  u8;  1                   ; accuracy level
        1  u8;  0                   ; 4 bytes alignment padding
;
;   Left input 
        4  u8;  0 0  1 0   0   0 0 0    ; SRC[arc, chan]  DST[arc, chan] nbMix=0  N/A N/A N/A
;
;   Right input
        4  u8;  0 1  1 1   2   0 1 0    ; SRC[arc, chan]  DST[arc, chan] nbMix=2 ififo-mix1 ififo-imix2 N/A

;   Left input direct to Left output (Fifo0) no mixer
        4 f32;  1.0 0.0 0.0 1.0         ; Gmix1 Gmix2 Gmix3 GmixOut
;   Left+Right fifo input, mixed+gainx2 to Right output (Fifo1)
        4 f32;  0.5 0.5 0.0 2.0         ; Gmix1 Gmix2 Gmix3 GmixOut

    end
;----------------------------------------------------------------------
; arc         { inst / arc / fmtProd }     + { inst / arc / fmtCons }
; arc_input   { io / set0copy1 / fmtProd } + { node / inst / arc / fmtCons }
; arc_output  { io / set0copy1 / fmtCons } + { node / inst / arc / fmtProd }
;
arc_input   0 1 1 arm_stream_router  0 0 0          ; INPUT => router with HQoS
arc_output  1 1 0 arm_stream_router  0 1 0          ; router => OUTPUT 

end