; ------------------------------------------------------------------------------------------------------------
; list of paths for the included files

    3                                       three file paths
    ../../../stream_tools/                  "" path index 0 is local
    ../../../stream_graph/                  "" path index 1
    ../../../stream_nodes/arm/              "" path index 2

; ------------------------------------------------------------------------------------------------------------
; PLATFORM DIGITAL, MIXED-SIGNAL AND IO MANIFESTS - max 32 IOs => iomask

    1   platform_manifest_computer.txt      path index + file name

    10  number of IO streams available      aligned with struct platform_io_control platform_io []
                                           ;and stream_al/platform_computer.h

    ;   file path index + io manifests file name + index used in the graph    
    ;   index 0="decided from the caller"               

    ;Path      Manifest                    fw_io_idx
    ;    io commands from upper graph       0                 subgraph control interface, use script not the scheduler
     1   io_platform_stream_in_0.txt        1                 interface to the application processor             
     1   io_platform_imu_XYZ_0.txt          2                 3D motion sensor
     1   io_platform_microphone_0.txt       3                 audio in mono
     1   io_platform_line_in_0.txt          4                 audio in stereo
     1   io_platform_line_out_0.txt         5                 audio out stereo
     1   io_platform_analog_sensor_0.txt    6                 ADC 
     1   io_platform_gpio_out_0.txt         7                 PWM
     1   io_platform_gpio_out_1.txt         8                 LED
     1   io_platform_node_trace_0.txt       9                 trace
     1   io_platform_imu_temperature_0.txt  10                temperature sensor

; ------------------------------------------------------------------------------------------------------------
; SOFTWARE COMPONENTS MANIFESTS 

    2  nodes     path index + file name, in the same order of p_stream_node node_entry_point_table[NB_NODE_ENTRY_POINTS]

    ;  p_stream_node node_entry_point_table[NB_NODE_ENTRY_POINTS] =
    ;                                                /*  0 node disabled */
    ;2                                               /*  1 arm_script,             byte-code interpreter */
    ;2                                               /*  2 arm_stream_router,      copy input arcs and subchannel and output arcs and subchannels   */     
    ;2                                               /*  3 arm_stream_converter,   raw data format converter */
    ;2                                               /*  4 arm_stream_amplifier,   amplifier mute and un-mute with ramp and delay control */
    ;2                                               /*  5 arm_stream_mixer,       multichannel mixer with mute/unmute and ramp control */
     2       filter/swc_manifest_filter.txt          /*  6 arm_stream_filter,      cascade of DF1 filters */
     2     detector/swc_manifest_detector.txt        /*  7 arm_stream_detector,    estimates peaks/floor of the mono input and triggers a flag on high SNR */
    ;2                                               /*  8 arm_stream_rescaler,    raw data values remapping using "interp1" */
    ;2                                               /*  9 arm_stream_compressor,  raw data compression with adaptive prediction */
    ;2                                               /* 10 arm_stream_decompressor,raw data decompression */
    ;2                                               /* 11 arm_stream_modulator,   signal generator with modulation */
    ;2                                               /* 12 arm_stream_demodulator, signal demodulator, frequency estimator */
    ;2                                               /* 13 arm_stream_interpolator,asynchronous sample-rate converter */
    ;2                                               /* 14 arm_stream_synchro,     raw data interpolator with synchronization with one HQoS stream */
    ;2                                               /* 15 arm_stream_share,       let a buffer be used by several nodes */

; ------------------------------------------------------------------------------------------------------------
    ; /* replicated fw_io_dx : stream_al/platform_computer.h <=> stream_tools/files_manifests_computer.txt */
    ; #define IO_PLATFORM_STREAM_IN_0      1       /* interface to the application processor see stream_al\io_platform_stream_in_0 */
    ; #define IO_PLATFORM_IMU_0            2       /* 3D motion sensor see stream_al\io_platform_imu_0 */
    ; #define IO_PLATFORM_MICROPHONE_0     3       /* audio in mono see stream_al\io_platform_microphone_0.txt  */
    ; #define IO_PLATFORM_LINE_IN_0        4       /* audio in stereo  stream_al\io_platform_line_in_0.txt     */
    ; #define IO_PLATFORM_LINE_OUT_0       5       /* audio out stereo stream_al\io_platform_line_out_0.txt    */
    ; #define IO_PLATFORM_ANALOG_SENSOR_0  6       /* analog converter stream_al\io_platform_analog_sensor_0.txt */
    ; #define IO_PLATFORM_GPIO_OUT_0       7       /* PWM              stream_al\io_platform_gpio_out_0.txt    */
    ; #define IO_PLATFORM_GPIO_OUT_1       8       /* LED              stream_al\io_platform_gpio_out_1.txt    */
    ; #define IO_PLATFORM_DATA_IN_0        9       /* shock detector   stream_al\io_platform_imu_metadata_0.txt */
    ; #define IO_PLATFORM_DATA_IN_1       10       /* temp. sensor     stream_al\io_platform_imu_temperature_0.txt */
    ;
    ;
    ; generic graphs not originated from the GUI, the desired domains will be map to the platform 
    ;   capabilities using this assignment rule :
    ;
    ; (see stream_io_domain in "stream_type.h") and the mapped fw_io_idx for this platform :
    ; IO_PLATFORM_DATA_IN             1    1   
    ; IO_PLATFORM_DATA_OUT            2    5
    ; IO_PLATFORM_DATA_STREAM_IN      3    1
    ; IO_PLATFORM_DATA_STREAM_OUT     4    5
    ; IO_PLATFORM_AUDIO_IN            5    4
    ; IO_PLATFORM_AUDIO_OUT           6    5
    ; IO_PLATFORM_GPIO_IN             7    .
    ; IO_PLATFORM_GPIO_OUT            8    7
    ; IO_PLATFORM_MOTION_IN           9    2
    ; IO_PLATFORM_2D_IN              10    .
    ; IO_PLATFORM_2D_OUT             11    .
    ; IO_PLATFORM_USER_INTERFACE_IN  12    6
    ; IO_PLATFORM_USER_INTERFACE_OUT 13    7
    ; IO_PLATFORM_COMMAND_IN         14    1
    ; IO_PLATFORM_COMMAND_OUT        15    5
    ; IO_PLATFORM_ANALOG_SENSOR      16    6
    ; IO_PLATFORM_ANALOG_TRANSDUCER  17    5
    ; IO_PLATFORM_RTC_IN             18    .
    ; IO_PLATFORM_RTC_OUT            19    .
    ; IO_PLATFORM_STORAGE_OUT        20    .
    ; IO_PLATFORM_AV_CODEC           21    .
    ; unused 22 ..30
    ;
    ;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30   desired platform domains

     1 5 1 5 4 5 0 7 2  0  0  6  7  1  5   6  5  0  0  0  0  0  0  0  0  0  0  0  0  0 ; mapping to platform capabilities (fw_io_idx)
