;                                                                         
; ------+     +-------------+      +-------------+      +------
;  ADC  +---->+  SUBGRAPH 1 +----->|SCRIPT(GPIO) +. . .>| GPIO 
; ------+     +-------------+      +-------------+      +------
;                                                     
;----------------------------------------------------------------------------------------

graph

top_header

;   3 integers, only (x) are 
;   - format of the final binary graph file   (COPY_CONF_GRAPH0_COPY_ALL_IN_RAM) 
;   - script control option in the scheduler (S->scheduler_control[SCRIPT_SCTRL])
;   - bit-field of allowed processors (procid_allowed GR[4])

    0 0 1

    _end_


;----------------------------------------------------------------------------------------
;   file paths for sub graphs and scripts

paths
    3               three paths used for the included files
    ./              path index 0 is local
    ../stream_graph path index 1
    ../stream_test  path index 2
    _end_

;----------------------------------------------------------------------------------------
; list of HW IOs from "stream_tools_files_manifests_PLATFORMNAME.txt" + IO arc patched with this IO.
;   nb HW IO interfaces
;   - index of the interface used when building the graph 
;   - format index of this stream (for sub-graphs)
;   - ID of the interface as given "files_manifests_computer" <=> FW_IO_IDX, 0="decided from the caller"
;   - common setting (8MSB intlv/nchan/frame/FS = ARC0 producer format) + mixed-signal settings (24LSB)
    
top_graph_interface
    2               2 interfaces 
    0 0 1 0         0, format 0, application processor, default settings
    1 0 7 0         1, format 0, PWM, default settings
    _end_

; --------------------------------------------------
;   the the data stream format used in the graph are grouped here :
;   { ID; FrameSize(22b); Raw; Nchan; FS(float); Timestp; Interleaving; specific(Word2); }
format
    2   two formats
;   I F  R N    FS T I S
    0 4 17 1 16000 0 0 0    
    1 6 17 1 16000 0 0 0    formatID1; frameSize; raw; nchan; FS(float); timestp; intlv; specific(Word2);
    _end_


;----------------------------------------------------------------------------------------
subgraph  
;
    1   graph_sub1.txt     file path index + file name of subgraph to flatten before memory mapping 
    graph_sub1 0           label for name mangling and arc connexions + instance ID of the subgraph 
    0 0 0 0                + preset used by the optional top script = 8-bytes string + forced proc + arch + verbose
        _end_

;---------------
;node
;    arm_script 0        1=index of the script in the SCRIPT_LW0 table
;
;    2 6                 number of registers, stack depth, 
;    2 1 0               ARCs :  input (stream, control) output (GPIO)  provision
;;
;;   script with 2 input arcs, 1 TX arc
;;   algorithm : read 1st arc 0 (mono input arc), GPIO is connected to TX arc
;;       set the GPIO value to 0 or 1 depending if arc data is above a threshold
;;       set new parameters to node "amplitude"
;;
;    SCRIPT          
;
;    PSHL INT8  12       ; detection threshold=12
;    POPR 0              ; load R0 for this comparison
;    PSHL INT8   ARC0    ; first arc to read
;    CALS READ_ARC       ; read arc(stack(-1), implicit subchannel 0) to stack
;    OPRC GTR            ; result=stack(-1) > R0 (threshold) ?
;    PSHL INT8   ARC2    ; arc 2 (TX)
;    JMPC 0              ; yes: jump to 0 (set gpio=1)
;    PSHL INT8   0       ; no:  set gpio=0
;    JMPL 1              ; set gpio and return
;    LABL 0             ;  label 0
;    PSHL INT8   1       ; no:  set gpio=1
;    LABL 1             ;  label 1
;    CALS WRITE_ARC      ; syscall: write data(stack(-1)) to arc[stack(-2)]
;;
;    PSHL INT8   arm_stream_amplitude ; this is in the symbol table (node_entry_point_table[])
;    PSHL INT8   0       ; instance
;    PSHL PTR    amplitude_set
;    CALS SETPARAM       ; syscall: setparam(amplitude, instance0, new_param=amplitude_set)
;;
;    PSHL INT8   arm_stream_amplitude ; this is in the symbol table (node_entry_point_table[])
;    PSHL INT8   0       ; instance
;    PSHL INT8   2       ; parameter TAG_CMD
;    PSHL FP32   3.14    ; parameter data
;    CALS SETPARAM       ; syscall: setparam(amplitude, instance0, new_param=amplitude_set)
;;
;    OPRC RET            ; return to scheduler
;;    
;    parameters amplitude_set
;        1  i8; 0        ; preset=0
;        1  i8; 1        ; load only the gain (Tag=1)
;        1 i32; h10000   ; gain; 
;    parameter_end    
;
;    parameters router_set2
;        1  i8; 1        ; preset=1
;        1  i8; 1        ; load only the second index (Tag=2)
;        4 i16; 0 0 2 0  ; move arc0,chan0, to arc2,chan0
;    parameter_end    
;
;    SCRIPT_END          ; end of byte codes
;
;_end_

;----------------------------------------------------------------------------------------
arc
    0 0 0 1.0 0 0 0 0 0 0           ProdFMT ConsFMT MEM IO-Size-Mulfac  OVF, UND, CMD, REG, FLUSH, EXTD
    _graph_interface    0 0         0 = IO "interface" from application processor, second parameter is unused
    graph_sub1          0 0         [0]:instance of the subgraph, [1]:index of the arc (RX)

;    0 0 0 1.0 0 0 0 0 0 0          ProdFMT ConsFMT MEM IO-Size-Mulfac  OVF, UND, CMD, REG, FLUSH, EXTD
;     graph_sub1         0 1        [0]:instance of the subgraph, [0]:index of the arc (TX)
;    _graph_interface    1 0        1=IO "interface" of PWM, [0]:RX arc of the "IO node", second parameter is unused

;
;    arm_script reads detector internal parameters and write to GPIO directly through CALS apis 
;
     0 0 0 1.0 0 0 0 0 0 0          ProdFMT ConsFMT MEM IO-Size-Mulfac  OVF, UND, CMD, REG, FLUSH, EXTD
     graph_sub1          0 0        [0]:SCRIPT_LW0 index of the script  (dummy arc, script have direct access without the help of the scheduler)
     arm_script          1 0        1=IO "interface" of PWM, [0]:RX arc of the "IO node", second parameter is unused

     _end_
_END_
