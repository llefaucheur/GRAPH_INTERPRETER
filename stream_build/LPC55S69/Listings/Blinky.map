Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    blinky.o(.text.app_initialize) refers to blinky.o(.text.app_main) for app_main
    blinky.o(.text.app_initialize) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    blinky.o(.ARM.exidx.text.app_initialize) refers to blinky.o(.text.app_initialize) for [Anonymous Symbol]
    blinky.o(.text.app_main) refers to blinky.o(.text.thrLED) for thrLED
    blinky.o(.text.app_main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    blinky.o(.text.app_main) refers to blinky.o(.bss.tid_thrLED) for tid_thrLED
    blinky.o(.text.app_main) refers to blinky.o(.text.thrButton) for thrButton
    blinky.o(.text.app_main) refers to blinky.o(.bss.tid_thrButton) for tid_thrButton
    blinky.o(.text.app_main) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    blinky.o(.ARM.exidx.text.app_main) refers to blinky.o(.text.app_main) for [Anonymous Symbol]
    blinky.o(.text.thrLED) refers to main_lpc55s69sdk.o(.text.main_demo) for main_demo
    blinky.o(.text.thrLED) refers to vio_lpcxpresso55s69.o(.text.vioSetSignal) for vioSetSignal
    blinky.o(.text.thrLED) refers to rtx_delay.o(.text.osDelay) for osDelay
    blinky.o(.text.thrLED) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    blinky.o(.ARM.exidx.text.thrLED) refers to blinky.o(.text.thrLED) for [Anonymous Symbol]
    blinky.o(.text.thrButton) refers to blinky.o(.bss.tid_thrLED) for tid_thrLED
    blinky.o(.text.thrButton) refers to rtx_delay.o(.text.osDelay) for osDelay
    blinky.o(.text.thrButton) refers to vio_lpcxpresso55s69.o(.text.vioGetSignal) for vioGetSignal
    blinky.o(.text.thrButton) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    blinky.o(.ARM.exidx.text.thrButton) refers to blinky.o(.text.thrButton) for [Anonymous Symbol]
    main_lpc55s69sdk.o(.text.main_demo) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main_lpc55s69sdk.o(.text.main_demo) refers to main_lpc55s69sdk.o(.bss.application_callbacks) for application_callbacks
    main_lpc55s69sdk.o(.text.main_demo) refers to main_lpc55s69sdk.o(.rodata.graph_input) for graph_input
    main_lpc55s69sdk.o(.text.main_demo) refers to stream_graph_interpreter.o(.text.arm_graph_interpreter) for arm_graph_interpreter
    main_lpc55s69sdk.o(.ARM.exidx.text.main_demo) refers to main_lpc55s69sdk.o(.text.main_demo) for [Anonymous Symbol]
    main.o(.text.main) refers to peripherals.o(.text.BOARD_InitBootPeripherals) for BOARD_InitBootPeripherals
    main.o(.text.main) refers to pin_mux.o(.text.BOARD_InitBootPins) for BOARD_InitBootPins
    main.o(.text.main) refers to clock_config.o(.text.BOARD_InitBootClocks) for BOARD_InitBootClocks
    main.o(.text.main) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    main.o(.text.main) refers to system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to vio_lpcxpresso55s69.o(.text.vioInit) for vioInit
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to blinky.o(.text.app_initialize) for app_initialize
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    stream_graph_interpreter.o(.text.arm_graph_interpreter) refers to platform_al.o(.text.platform_al) for platform_al
    stream_graph_interpreter.o(.text.arm_graph_interpreter) refers to stream_scheduler.o(.text.pack2linaddr_ptr) for pack2linaddr_ptr
    stream_graph_interpreter.o(.text.arm_graph_interpreter) refers to stream_scheduler.o(.text.stream_scan_graph) for stream_scan_graph
    stream_graph_interpreter.o(.text.arm_graph_interpreter) refers to stream_services.o(.text.arm_stream_services) for arm_stream_services
    stream_graph_interpreter.o(.text.arm_graph_interpreter) refers to platform_al.o(.graph_interpreter_section) for platform_io_callback_parameter
    stream_graph_interpreter.o(.ARM.exidx.text.arm_graph_interpreter) refers to stream_graph_interpreter.o(.text.arm_graph_interpreter) for [Anonymous Symbol]
    stream_io.o(.graph_interpreter_section) refers to platform_al.o(.graph_interpreter_section) for platform_io_callback_parameter
    stream_io.o(.graph_interpreter_section) refers to stream_scheduler.o(.text.pack2linaddr_ptr) for pack2linaddr_ptr
    stream_io.o(.graph_interpreter_section) refers to stream_scheduler.o(.text.lin2pack) for lin2pack
    stream_io.o(.graph_interpreter_section) refers to platform_al.o(.text.platform_al) for platform_al
    stream_io.o(.ARM.exidx.graph_interpreter_section) refers to stream_io.o(.graph_interpreter_section) for [Anonymous Symbol]
    stream_scheduler.o(.ARM.exidx.text.pack2linaddr_int) refers to stream_scheduler.o(.text.pack2linaddr_int) for [Anonymous Symbol]
    stream_scheduler.o(.ARM.exidx.text.pack2linaddr_ptr) refers to stream_scheduler.o(.text.pack2linaddr_ptr) for [Anonymous Symbol]
    stream_scheduler.o(.ARM.exidx.text.lin2pack) refers to stream_scheduler.o(.text.lin2pack) for [Anonymous Symbol]
    stream_scheduler.o(.ARM.exidx.text.arc_data_operations) refers to stream_scheduler.o(.text.arc_data_operations) for [Anonymous Symbol]
    stream_scheduler.o(.text.stream_scan_graph) refers to stream_scheduler.o(.graph_interpreter_section) for DEBUG_CNT
    stream_scheduler.o(.text.stream_scan_graph) refers to platform_al.o(.text.platform_al) for platform_al
    stream_scheduler.o(.text.stream_scan_graph) refers to platform_lpc55s69sdk.o(.text.WR_BYTE_AND_CHECK_MP_) for WR_BYTE_AND_CHECK_MP_
    stream_scheduler.o(.text.stream_scan_graph) refers to stream_services.o(.text.arm_stream_services) for arm_stream_services
    stream_scheduler.o(.text.stream_scan_graph) refers to stream_scheduler.o(.text.arc_index_update) for arc_index_update
    stream_scheduler.o(.ARM.exidx.text.stream_scan_graph) refers to stream_scheduler.o(.text.stream_scan_graph) for [Anonymous Symbol]
    stream_scheduler.o(.ARM.exidx.text.arc_index_update) refers to stream_scheduler.o(.text.arc_index_update) for [Anonymous Symbol]
    stream_services.o(.graph_interpreter_section) refers to stream_services.o(.rodata..Lswitch.table.stream_bitsize_of_raw) for .Lswitch.table.stream_bitsize_of_raw
    stream_services.o(.ARM.exidx.graph_interpreter_section) refers to stream_services.o(.graph_interpreter_section) for [Anonymous Symbol]
    stream_services.o(.ARM.exidx.text.arm_stream_services_stdlib) refers to stream_services.o(.text.arm_stream_services_stdlib) for [Anonymous Symbol]
    stream_services.o(.ARM.exidx.text.arm_stream_services_math) refers to stream_services.o(.text.arm_stream_services_math) for [Anonymous Symbol]
    stream_services.o(.ARM.exidx.text.arm_stream_services_mm_audio) refers to stream_services.o(.text.arm_stream_services_mm_audio) for [Anonymous Symbol]
    stream_services.o(.ARM.exidx.text.arm_stream_services_mm_image) refers to stream_services.o(.text.arm_stream_services_mm_image) for [Anonymous Symbol]
    stream_services.o(.text.arm_stream_services) refers to arm_biquad_cascade_df1_fast_q15.o(.text.arm_biquad_cascade_df1_fast_q15) for arm_biquad_cascade_df1_fast_q15
    stream_services.o(.ARM.exidx.text.arm_stream_services) refers to stream_services.o(.text.arm_stream_services) for [Anonymous Symbol]
    platform_al.o(.text.platform_al) refers to platform_al.o(.bss.platform_al.stream_initialization_done) for platform_al.stream_initialization_done
    platform_al.o(.text.platform_al) refers to platform_al.o(.bss.platform_al.stream_mp_synchro) for platform_al.stream_mp_synchro
    platform_al.o(.text.platform_al) refers to platform_lpc55s69sdk.o(.bss.long_offset) for long_offset
    platform_al.o(.text.platform_al) refers to platform_lpc55s69sdk.o(.text.platform_specific_long_offset) for platform_specific_long_offset
    platform_al.o(.text.platform_al) refers to stream_nodes.o(.data.node_entry_point_table) for node_entry_point_table
    platform_al.o(.text.platform_al) refers to platform_lpc55s69sdk.o(.text.platform_specific_processor_arch_iomask) for platform_specific_processor_arch_iomask
    platform_al.o(.text.platform_al) refers to platform_lpc55s69sdk.o(.data.platform_io) for platform_io
    platform_al.o(.ARM.exidx.text.platform_al) refers to platform_al.o(.text.platform_al) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.platform_specific_long_offset) refers to platform_lpc55s69sdk.o(.bss.MEXT) for MEXT
    platform_lpc55s69sdk.o(.text.platform_specific_long_offset) refers to platform_lpc55s69sdk.o(.bss.TCM1) for TCM1
    platform_lpc55s69sdk.o(.ARM.exidx.text.platform_specific_long_offset) refers to platform_lpc55s69sdk.o(.text.platform_specific_long_offset) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.platform_specific_processor_arch_iomask) refers to platform_lpc55s69sdk.o(.bss.platform_iocontrol) for platform_iocontrol
    platform_lpc55s69sdk.o(.ARM.exidx.text.platform_specific_processor_arch_iomask) refers to platform_lpc55s69sdk.o(.text.platform_specific_processor_arch_iomask) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.ARM.exidx.text.WR_BYTE_AND_CHECK_MP_) refers to platform_lpc55s69sdk.o(.text.WR_BYTE_AND_CHECK_MP_) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.stream_in_0_set_stream) refers to platform_lpc55s69sdk.o(.bss.ptr_in_stream_in_0_data) for ptr_in_stream_in_0_data
    platform_lpc55s69sdk.o(.text.stream_in_0_set_stream) refers to platform_lpc55s69sdk.o(.bss.rx_buffer) for rx_buffer
    platform_lpc55s69sdk.o(.ARM.exidx.text.stream_in_0_set_stream) refers to platform_lpc55s69sdk.o(.text.stream_in_0_set_stream) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move) refers to platform_lpc55s69sdk.o(.bss.ptr_in_stream_in_0_data) for ptr_in_stream_in_0_data
    platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move) refers to platform_lpc55s69sdk.o(.bss.rx_buffer) for rx_buffer
    platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move) refers to platform_lpc55s69sdk.o(.rodata.ptf_in_stream_in_0_data) for ptf_in_stream_in_0_data
    platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move) refers to stream_io.o(.graph_interpreter_section) for platform_io_ack
    platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move) refers to exit.o(.text) for exit
    platform_lpc55s69sdk.o(.ARM.exidx.text.stream_in_0_start_data_move) refers to platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.ARM.exidx.text.stream_in_0_stop_stream) refers to platform_lpc55s69sdk.o(.text.stream_in_0_stop_stream) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.gpio_out_0_set_stream) refers to platform_lpc55s69sdk.o(.bss.ptr_in_gpio_out_data) for ptr_in_gpio_out_data
    platform_lpc55s69sdk.o(.text.gpio_out_0_set_stream) refers to platform_lpc55s69sdk.o(.bss.tx_buffer) for tx_buffer
    platform_lpc55s69sdk.o(.ARM.exidx.text.gpio_out_0_set_stream) refers to platform_lpc55s69sdk.o(.text.gpio_out_0_set_stream) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move) refers to platform_lpc55s69sdk.o(.bss.ptr_in_gpio_out_data) for ptr_in_gpio_out_data
    platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move) refers to platform_lpc55s69sdk.o(.bss.tx_buffer) for tx_buffer
    platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move) refers to platform_lpc55s69sdk.o(.bss.ptf_in_gpio_out_data) for ptf_in_gpio_out_data
    platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move) refers to stream_io.o(.graph_interpreter_section) for platform_io_ack
    platform_lpc55s69sdk.o(.ARM.exidx.text.gpio_out_0_start_data_move) refers to platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.ARM.exidx.text.gpio_out_0_stop_stream) refers to platform_lpc55s69sdk.o(.text.gpio_out_0_stop_stream) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.trace_set) refers to platform_lpc55s69sdk.o(.bss.ptr_trace) for ptr_trace
    platform_lpc55s69sdk.o(.ARM.exidx.text.trace_set) refers to platform_lpc55s69sdk.o(.text.trace_set) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.text.trace_start) refers to platform_lpc55s69sdk.o(.bss.ptr_trace) for ptr_trace
    platform_lpc55s69sdk.o(.ARM.exidx.text.trace_start) refers to platform_lpc55s69sdk.o(.text.trace_start) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.ARM.exidx.text.trace_stop) refers to platform_lpc55s69sdk.o(.text.trace_stop) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.ARM.exidx.text.extract_sensor_field) refers to platform_lpc55s69sdk.o(.text.extract_sensor_field) for [Anonymous Symbol]
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.stream_in_0_set_stream) for stream_in_0_set_stream
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move) for stream_in_0_start_data_move
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.stream_in_0_stop_stream) for stream_in_0_stop_stream
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.gpio_out_0_set_stream) for gpio_out_0_set_stream
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move) for gpio_out_0_start_data_move
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.gpio_out_0_stop_stream) for gpio_out_0_stop_stream
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.trace_set) for trace_set
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.trace_start) for trace_start
    platform_lpc55s69sdk.o(.data.platform_io) refers to platform_lpc55s69sdk.o(.text.trace_stop) for trace_stop
    stream_nodes.o(.data.node_entry_point_table) refers to arm_stream_filter.o(.text.arm_stream_filter) for arm_stream_filter
    stream_nodes.o(.data.node_entry_point_table) refers to arm_stream_detector.o(.text.arm_stream_detector) for arm_stream_detector
    arm_script_process.o(.ARM.exidx.text.arm_script_interpreter) refers to arm_script_process.o(.text.arm_script_interpreter) for [Anonymous Symbol]
    arm_script.o(.text.arm_script) refers to arm_script_process.o(.text.arm_script_interpreter) for arm_script_interpreter
    arm_script.o(.ARM.exidx.text.arm_script) refers to arm_script.o(.text.arm_script) for [Anonymous Symbol]
    arm_stream_detector_process.o(.ARM.exidx.text.arm_stream_detector_process) refers to arm_stream_detector_process.o(.text.arm_stream_detector_process) for [Anonymous Symbol]
    arm_stream_detector.o(.text.arm_stream_detector) refers to rt_memclr.o(.text) for __aeabi_memclr
    arm_stream_detector.o(.text.arm_stream_detector) refers to arm_stream_detector.o(.rodata.detector_preset) for detector_preset
    arm_stream_detector.o(.text.arm_stream_detector) refers to arm_stream_detector_process.o(.text.arm_stream_detector_process) for arm_stream_detector_process
    arm_stream_detector.o(.ARM.exidx.text.arm_stream_detector) refers to arm_stream_detector.o(.text.arm_stream_detector) for [Anonymous Symbol]
    arm_stream_filter.o(.text.arm_stream_filter) refers to arm_biquad_cascade_df1_init_q15.o(.text.arm_biquad_cascade_df1_init_q15) for arm_biquad_cascade_df1_init_q15
    arm_stream_filter.o(.ARM.exidx.text.arm_stream_filter) refers to arm_stream_filter.o(.text.arm_stream_filter) for [Anonymous Symbol]
    arm_biquad_cascade_df1_fast_q15.o(.ARM.exidx.text.arm_biquad_cascade_df1_fast_q15) refers to arm_biquad_cascade_df1_fast_q15.o(.text.arm_biquad_cascade_df1_fast_q15) for [Anonymous Symbol]
    arm_biquad_cascade_df1_init_q15.o(.text.arm_biquad_cascade_df1_init_q15) refers to rt_memclr.o(.text) for __aeabi_memclr
    arm_biquad_cascade_df1_init_q15.o(.ARM.exidx.text.arm_biquad_cascade_df1_init_q15) refers to arm_biquad_cascade_df1_init_q15.o(.text.arm_biquad_cascade_df1_init_q15) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_reset.o(.text.RESET_ClearPeripheralReset) for RESET_ClearPeripheralReset
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole_Core1) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    board.o(.text.BOARD_InitDebugConsole_Core1) refers to fsl_reset.o(.text.RESET_ClearPeripheralReset) for RESET_ClearPeripheralReset
    board.o(.text.BOARD_InitDebugConsole_Core1) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole_Core1) refers to board.o(.text.BOARD_InitDebugConsole_Core1) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_BootClockPLL150M) for BOARD_BootClockPLL150M
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to fsl_clock.o(.text.CLOCK_SetupExtClocking) for CLOCK_SetupExtClocking
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to fsl_clock.o(.text.CLOCK_SetPLL0Freq) for CLOCK_SetPLL0Freq
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockPLL150M) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockPLL150M) refers to clock_config.o(.text.BOARD_BootClockPLL150M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO12M) refers to clock_config.o(.text.BOARD_BootClockFRO12M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFROHF96M) refers to clock_config.o(.text.BOARD_BootClockFROHF96M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to fsl_clock.o(.text.CLOCK_SetupExtClocking) for CLOCK_SetupExtClocking
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to fsl_clock.o(.text.CLOCK_SetPLL0Freq) for CLOCK_SetPLL0Freq
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockPLL100M) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockPLL100M) refers to clock_config.o(.text.BOARD_BootClockPLL100M) for [Anonymous Symbol]
    peripherals.o(.ARM.exidx.text.BOARD_InitPeripherals_cm33_core0) refers to peripherals.o(.text.BOARD_InitPeripherals_cm33_core0) for [Anonymous Symbol]
    peripherals.o(.ARM.exidx.text.BOARD_InitBootPeripherals) refers to peripherals.o(.text.BOARD_InitBootPeripherals) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitBootPins) refers to fsl_gpio.o(.text.GPIO_PinInit) for GPIO_PinInit
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitDEBUG_UARTPins) refers to pin_mux.o(.text.BOARD_InitDEBUG_UARTPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitLEDsPins) refers to fsl_gpio.o(.text.GPIO_PinInit) for GPIO_PinInit
    pin_mux.o(.ARM.exidx.text.BOARD_InitLEDsPins) refers to pin_mux.o(.text.BOARD_InitLEDsPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitBUTTONsPins) refers to fsl_gpio.o(.text.GPIO_PinInit) for GPIO_PinInit
    pin_mux.o(.ARM.exidx.text.BOARD_InitBUTTONsPins) refers to pin_mux.o(.text.BOARD_InitBUTTONsPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins_Core0) refers to pin_mux.o(.text.BOARD_InitPins_Core0) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitSWD_DEBUGPins) refers to pin_mux.o(.text.BOARD_InitSWD_DEBUGPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitUSBPins) refers to pin_mux.o(.text.BOARD_InitUSBPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitI2SPins) refers to pin_mux.o(.text.BOARD_InitI2SPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitACCELPins) refers to fsl_gpio.o(.text.GPIO_PinInit) for GPIO_PinInit
    pin_mux.o(.ARM.exidx.text.BOARD_InitACCELPins) refers to pin_mux.o(.text.BOARD_InitACCELPins) for [Anonymous Symbol]
    irq_armv8mml.o(.text) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    irq_armv8mml.o(.text) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    irq_armv8mml.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv8mml.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv8mml.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv8mml.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv8mml.o(.ARM.exidx) refers to irq_armv8mml.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryAlloc) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialized) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetInfo) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelRestoreLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLockRestored) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelErrorNotify) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetId) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadYield) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetach) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetached) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoin) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoinPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoined) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadBlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadUnblocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPreempted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSwitched) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadExit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadEnumerate) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelay) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntil) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntilStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCallback) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStop) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStopped) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerIsRunning) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetOwner) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFree) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePut) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGet) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueReset) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueResetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv8mml.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init) refers to rtx_lib.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_release) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv8mml.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioInit) refers to vio_lpcxpresso55s69.o(.bss.vioSignalIn) for vioSignalIn
    vio_lpcxpresso55s69.o(.text.vioInit) refers to vio_lpcxpresso55s69.o(.bss.vioSignalOut) for vioSignalOut
    vio_lpcxpresso55s69.o(.text.vioInit) refers to vio_lpcxpresso55s69.o(.bss.vioPrintMem) for vioPrintMem
    vio_lpcxpresso55s69.o(.text.vioInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    vio_lpcxpresso55s69.o(.text.vioInit) refers to vio_lpcxpresso55s69.o(.bss.vioValue) for vioValue
    vio_lpcxpresso55s69.o(.text.vioInit) refers to vio_lpcxpresso55s69.o(.bss.vioValueXYZ) for vioValueXYZ
    vio_lpcxpresso55s69.o(.text.vioInit) refers to vio_lpcxpresso55s69.o(.bss.vioAddrIPv4) for vioAddrIPv4
    vio_lpcxpresso55s69.o(.text.vioInit) refers to vio_lpcxpresso55s69.o(.bss.vioAddrIPv6) for vioAddrIPv6
    vio_lpcxpresso55s69.o(.text.vioInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for GPIO_PinInit
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioInit) refers to vio_lpcxpresso55s69.o(.text.vioInit) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioPrint) refers to vio_lpcxpresso55s69.o(.bss.vioPrintMem) for vioPrintMem
    vio_lpcxpresso55s69.o(.text.vioPrint) refers to vsnprintf.o(.text) for vsnprintf
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioPrint) refers to vio_lpcxpresso55s69.o(.text.vioPrint) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioSetSignal) refers to vio_lpcxpresso55s69.o(.bss.vioSignalOut) for vioSignalOut
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetSignal) refers to vio_lpcxpresso55s69.o(.text.vioSetSignal) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioGetSignal) refers to vio_lpcxpresso55s69.o(.bss.vioSignalIn) for vioSignalIn
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetSignal) refers to vio_lpcxpresso55s69.o(.text.vioGetSignal) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioSetValue) refers to vio_lpcxpresso55s69.o(.bss.vioValue) for vioValue
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetValue) refers to vio_lpcxpresso55s69.o(.text.vioSetValue) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioGetValue) refers to vio_lpcxpresso55s69.o(.bss.vioValue) for vioValue
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetValue) refers to vio_lpcxpresso55s69.o(.text.vioGetValue) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioSetXYZ) refers to vio_lpcxpresso55s69.o(.bss.vioValueXYZ) for vioValueXYZ
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetXYZ) refers to vio_lpcxpresso55s69.o(.text.vioSetXYZ) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioGetXYZ) refers to vio_lpcxpresso55s69.o(.bss.vioValueXYZ) for vioValueXYZ
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetXYZ) refers to vio_lpcxpresso55s69.o(.text.vioGetXYZ) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioSetIPv4) refers to vio_lpcxpresso55s69.o(.bss.vioAddrIPv4) for vioAddrIPv4
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetIPv4) refers to vio_lpcxpresso55s69.o(.text.vioSetIPv4) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioGetIPv4) refers to vio_lpcxpresso55s69.o(.bss.vioAddrIPv4) for vioAddrIPv4
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetIPv4) refers to vio_lpcxpresso55s69.o(.text.vioGetIPv4) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioSetIPv6) refers to vio_lpcxpresso55s69.o(.bss.vioAddrIPv6) for vioAddrIPv6
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetIPv6) refers to vio_lpcxpresso55s69.o(.text.vioSetIPv6) for [Anonymous Symbol]
    vio_lpcxpresso55s69.o(.text.vioGetIPv6) refers to vio_lpcxpresso55s69.o(.bss.vioAddrIPv6) for vioAddrIPv6
    vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetIPv6) refers to vio_lpcxpresso55s69.o(.text.vioGetIPv6) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    startup_lpc55s69_cm33_core0.o(.text) refers to system_lpc55s69_cm33_core0.o(.text.SystemInit) for SystemInit
    startup_lpc55s69_cm33_core0.o(.text) refers to __main.o(!!!main) for __main
    startup_lpc55s69_cm33_core0.o(.text) refers to irq_armv8mml.o(.text) for SVC_Handler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_dma.o(.text.DMA0_DriverIRQHandler) for DMA0_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) for FLEXCOMM0_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) for FLEXCOMM1_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) for FLEXCOMM2_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) for FLEXCOMM3_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) for FLEXCOMM4_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) for FLEXCOMM5_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) for FLEXCOMM6_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) for FLEXCOMM7_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_dma.o(.text.DMA1_DriverIRQHandler) for DMA1_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) for FLEXCOMM8_DriverIRQHandler
    startup_lpc55s69_cm33_core0.o(.isr_vector) refers to startup_lpc55s69_cm33_core0.o(.text) for Reset_Handler
    startup_lpc55s69_cm33_core0.o(.isr_vector) refers to irq_armv8mml.o(.text) for SVC_Handler
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Init) refers to fsl_component_serial_port_uart.o(.text.Serial_UartInit) for Serial_UartInit
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_Init) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_Deinit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) for Serial_UartDeinit
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_Deinit) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) refers to fsl_component_serial_port_uart.o(.text.Serial_UartWrite) for Serial_UartWrite
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) refers to fsl_component_serial_port_uart.o(.text.Serial_UartRead) for Serial_UartRead
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) for Serial_UartEnterLowpower
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) for [Anonymous Symbol]
    fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) for Serial_UartExitLowpower
    fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartInit) refers to fsl_adapter_usart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartInit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartInit) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) refers to fsl_adapter_usart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit) refers to fsl_component_serial_port_uart.o(.text.Serial_UartDeinit) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartWrite) refers to fsl_adapter_usart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite) refers to fsl_component_serial_port_uart.o(.text.Serial_UartWrite) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartRead) refers to fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartRead) refers to fsl_component_serial_port_uart.o(.text.Serial_UartRead) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) refers to fsl_adapter_usart.o(.text.HAL_UartEnterLowpower) for HAL_UartEnterLowpower
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower) for [Anonymous Symbol]
    fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) refers to fsl_adapter_usart.o(.text.HAL_UartExitLowpower) for HAL_UartExitLowpower
    fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower) refers to fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower) for [Anonymous Symbol]
    fsl_adapter_usart.o(.text.HAL_UartInit) refers to fsl_usart.o(.text.USART_GetDefaultConfig) for USART_GetDefaultConfig
    fsl_adapter_usart.o(.text.HAL_UartInit) refers to fsl_adapter_usart.o(.rodata.cst32) for s_UsartAdapterBase
    fsl_adapter_usart.o(.text.HAL_UartInit) refers to fsl_usart.o(.text.USART_Init) for USART_Init
    fsl_adapter_usart.o(.text.HAL_UartInit) refers to fsl_adapter_usart.o(.rodata.str1.1) for .L.str
    fsl_adapter_usart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_usart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_usart.o(.text.HAL_UartDeinit) refers to fsl_adapter_usart.o(.rodata.cst32) for s_UsartAdapterBase
    fsl_adapter_usart.o(.text.HAL_UartDeinit) refers to fsl_usart.o(.text.USART_Deinit) for USART_Deinit
    fsl_adapter_usart.o(.text.HAL_UartDeinit) refers to fsl_adapter_usart.o(.rodata.str1.1) for .L.str
    fsl_adapter_usart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_usart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_usart.o(.rodata.cst32) for s_UsartAdapterBase
    fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking) refers to fsl_usart.o(.text.USART_ReadBlocking) for USART_ReadBlocking
    fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_usart.o(.rodata.str1.1) for .L.str
    fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_usart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_usart.o(.rodata.cst32) for s_UsartAdapterBase
    fsl_adapter_usart.o(.text.HAL_UartSendBlocking) refers to fsl_usart.o(.text.USART_WriteBlocking) for USART_WriteBlocking
    fsl_adapter_usart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_usart.o(.rodata.str1.1) for .L.str
    fsl_adapter_usart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_usart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_usart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_usart.o(.rodata.str1.1) for .L.str
    fsl_adapter_usart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_usart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_usart.o(.text.HAL_UartExitLowpower) refers to fsl_adapter_usart.o(.rodata.str1.1) for .L.str
    fsl_adapter_usart.o(.text.HAL_UartExitLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_usart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_AttachClk) refers to fsl_clock.o(.text.CLOCK_AttachClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockAttachId) refers to fsl_clock.o(.text.CLOCK_GetClockAttachId) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetClkDiv) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtc1khzClkDiv) refers to fsl_clock.o(.text.CLOCK_SetRtc1khzClkDiv) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtc1hzClkDiv) refers to fsl_clock.o(.text.CLOCK_SetRtc1hzClkDiv) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFROClocking) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFLASHAccessCyclesForFreq) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupExtClocking) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupExtClocking) refers to fsl_clock.o(.text.CLOCK_SetupExtClocking) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupI2SMClkClocking) refers to fsl_clock.o(.bss.s_I2S_Mclk_Freq) for s_I2S_Mclk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupI2SMClkClocking) refers to fsl_clock.o(.text.CLOCK_SetupI2SMClkClocking) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupPLUClkInClocking) refers to fsl_clock.o(.bss.s_PLU_ClkIn_Freq) for s_PLU_ClkIn_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLUClkInClocking) refers to fsl_clock.o(.text.CLOCK_SetupPLUClkInClocking) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.bss.s_Pll1_Freq) for s_Pll1_Freq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.bss.s_Pll1_Freq) for s_Pll1_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPll0OutFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0OutFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0OutFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetExtClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetExtClkFreq) refers to fsl_clock.o(.text.CLOCK_GetExtClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFroHfFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFro1MFreq) refers to fsl_clock.o(.text.CLOCK_GetFro1MFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPll1OutFreq) refers to fsl_clock.o(.bss.s_Pll1_Freq) for s_Pll1_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll1OutFreq) refers to fsl_clock.o(.text.CLOCK_GetPll1OutFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc32KFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc32KFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAdcClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.bss.s_Pll1_Freq) for s_Pll1_Freq
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb1ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetMclkClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetMclkClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetMclkClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMclkClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMclkClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.bss.s_I2S_Mclk_Freq) for s_I2S_Mclk_Freq
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.text.CLOCK_GetSctClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetI2SMClkFreq) refers to fsl_clock.o(.bss.s_I2S_Mclk_Freq) for s_I2S_Mclk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetI2SMClkFreq) refers to fsl_clock.o(.text.CLOCK_GetI2SMClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.bss.s_Pll1_Freq) for s_Pll1_Freq
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetSdioClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFro12MFreq) refers to fsl_clock.o(.text.CLOCK_GetFro12MFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetWdtClkFreq) refers to fsl_clock.o(.text.CLOCK_GetWdtClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPLUClkInFreq) refers to fsl_clock.o(.bss.s_PLU_ClkIn_Freq) for s_PLU_ClkIn_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLUClkInFreq) refers to fsl_clock.o(.text.CLOCK_GetPLUClkInFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) refers to fsl_clock.o(.bss.s_I2S_Mclk_Freq) for s_I2S_Mclk_Freq
    fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexCommInputClock) refers to fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) for CLOCK_GetFlexCommInputClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexCommClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetHsLspiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetHsLspiClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetHsLspiClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetHsLspiClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetHsLspiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetHsLspiClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.bss.s_I2S_Mclk_Freq) for s_I2S_Mclk_Freq
    fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSystickClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystickClkFreq) refers to fsl_clock.o(.text.CLOCK_GetSystickClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetFlexCommClock) refers to fsl_clock.o(.text.CLOCK_GetFlexCommInputClock) for CLOCK_GetFlexCommInputClock
    fsl_clock.o(.text.CLOCK_SetFlexCommClock) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFlexCommClock) refers to fsl_clock.o(.text.CLOCK_SetFlexCommClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) for CLOCK_GetClockOutClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.bss.s_Pll1_Freq) for s_Pll1_Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.bss.s_I2S_Mclk_Freq) for s_I2S_Mclk_Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPLL0InClockRate) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL0InClockRate) refers to fsl_clock.o(.text.CLOCK_GetPLL0InClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPLL1InClockRate) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL1InClockRate) refers to fsl_clock.o(.text.CLOCK_GetPLL1InClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPLL0OutFromSetup) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL0OutFromSetup) refers to fsl_clock.o(.text.CLOCK_GetPLL0OutFromSetup) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetStoredPLL0ClockRate) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredPLL0ClockRate) refers to fsl_clock.o(.text.CLOCK_SetStoredPLL0ClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPLL0OutClockRate) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_GetPLL0OutClockRate) refers to fsl_clock.o(.text.CLOCK_GetPLL0OutFromSetup) for CLOCK_GetPLL0OutFromSetup
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL0OutClockRate) refers to fsl_clock.o(.text.CLOCK_GetPLL0OutClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupPLL0Data) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_SetupPLL0Data) refers to fsl_clock.o(.bss.s_PllSetupCacheStruct) for s_PllSetupCacheStruct
    fsl_clock.o(.text.CLOCK_SetupPLL0Data) refers to fsl_clock.o(.bss.s_UseSSCache) for s_UseSSCache
    fsl_clock.o(.text.CLOCK_SetupPLL0Data) refers to fsl_clock.o(.bss.s_FinHzCache) for s_FinHzCache
    fsl_clock.o(.text.CLOCK_SetupPLL0Data) refers to fsl_clock.o(.bss.s_FoutHzCache) for s_FoutHzCache
    fsl_clock.o(.text.CLOCK_SetupPLL0Data) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    fsl_clock.o(.text.CLOCK_SetupPLL0Data) refers to fsl_clock.o(.bss.s_PllSetupCacheIdx) for s_PllSetupCacheIdx
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLL0Data) refers to fsl_clock.o(.text.CLOCK_SetupPLL0Data) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupPLL0Prec) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_SetupPLL0Prec) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetupPLL0Prec) refers to fsl_clock.o(.text.CLOCK_GetPLL0OutFromSetup) for CLOCK_GetPLL0OutFromSetup
    fsl_clock.o(.text.CLOCK_SetupPLL0Prec) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.text.CLOCK_SetupPLL0Prec) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLL0Prec) refers to fsl_clock.o(.text.CLOCK_SetupPLL0Prec) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPLL0Freq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_SetPLL0Freq) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetPLL0Freq) refers to fsl_clock.o(.bss.s_Pll0_Freq) for s_Pll0_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPLL0Freq) refers to fsl_clock.o(.text.CLOCK_SetPLL0Freq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPLL1Freq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_SetPLL1Freq) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetPLL1Freq) refers to fsl_clock.o(.bss.s_Pll1_Freq) for s_Pll1_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPLL1Freq) refers to fsl_clock.o(.text.CLOCK_SetPLL1Freq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLL0Mult) refers to fsl_clock.o(.text.CLOCK_SetupPLL0Mult) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.rodata.cst32) for .L__const.CLOCK_EnableUsbfs0HostClock.pll1Setup
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_SetPLL1Freq) for CLOCK_SetPLL1Freq
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.rodata.cst32) for .L__const.CLOCK_EnableUsbfs0HostClock.pll1Setup
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_SetPLL1Freq) for CLOCK_SetPLL1Freq
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to h1_alloc_threads.o(.text) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to h1_free_threads.o(.text) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_DelayAtLeastUs) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    fsl_common.o(.text.SDK_DelayAtLeastUs) refers to fsl_common.o(.rodata.str1.1) for .L.str.1
    fsl_common.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_Init) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_Init) refers to fsl_dma.o(.rodata.cst4) for s_dmaClockName
    fsl_dma.o(.text.DMA_Init) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_Init) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_dma.o(.text.DMA_Init) refers to fsl_dma.o(.rodata.s_dma_descriptor_table) for s_dma_descriptor_table
    fsl_dma.o(.ARM.exidx.text.DMA_Init) refers to fsl_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_Deinit) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_Deinit) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_Deinit) refers to fsl_dma.o(.rodata.cst4) for s_dmaClockName
    fsl_dma.o(.ARM.exidx.text.DMA_Deinit) refers to fsl_dma.o(.text.DMA_Deinit) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_ConfigureChannelTrigger) refers to fsl_dma.o(.rodata.str1.1) for .L.str
    fsl_dma.o(.text.DMA_ConfigureChannelTrigger) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_ConfigureChannelTrigger) refers to fsl_dma.o(.text.DMA_ConfigureChannelTrigger) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_GetRemainingBytes) refers to fsl_dma.o(.rodata.str1.1) for .L.str.2
    fsl_dma.o(.text.DMA_GetRemainingBytes) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_GetRemainingBytes) refers to fsl_dma.o(.text.DMA_GetRemainingBytes) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SetupDescriptor) refers to fsl_dma.o(.rodata.str1.1) for .L.str.3
    fsl_dma.o(.text.DMA_SetupDescriptor) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_SetupDescriptor) refers to fsl_dma.o(.text.DMA_SetupDescriptor) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SetupChannelDescriptor) refers to fsl_dma.o(.rodata.str1.1) for .L.str.3
    fsl_dma.o(.text.DMA_SetupChannelDescriptor) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_SetupChannelDescriptor) refers to fsl_dma.o(.text.DMA_SetupChannelDescriptor) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_CreateDescriptor) refers to fsl_dma.o(.rodata.str1.1) for .L.str.4
    fsl_dma.o(.text.DMA_CreateDescriptor) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_CreateDescriptor) refers to fsl_dma.o(.text.DMA_CreateDescriptor) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_AbortTransfer) refers to fsl_dma.o(.rodata.str1.1) for .L.str.6
    fsl_dma.o(.text.DMA_AbortTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_AbortTransfer) refers to fsl_dma.o(.text.DMA_AbortTransfer) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_CreateHandle) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_CreateHandle) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_CreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_CreateHandle) refers to fsl_dma.o(.bss.s_DMAHandle) for s_DMAHandle
    fsl_dma.o(.ARM.exidx.text.DMA_CreateHandle) refers to fsl_dma.o(.text.DMA_CreateHandle) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SetCallback) refers to fsl_dma.o(.rodata.str1.1) for .L.str.1
    fsl_dma.o(.text.DMA_SetCallback) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_SetCallback) refers to fsl_dma.o(.text.DMA_SetCallback) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_PrepareTransfer) refers to fsl_dma.o(.rodata.str1.1) for .L.str.11
    fsl_dma.o(.text.DMA_PrepareTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_PrepareTransfer) refers to fsl_dma.o(.text.DMA_PrepareTransfer) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SetChannelConfig) refers to fsl_dma.o(.rodata.str1.1) for .L.str.1
    fsl_dma.o(.text.DMA_SetChannelConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_SetChannelConfig) refers to fsl_dma.o(.text.DMA_SetChannelConfig) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_PrepareChannelTransfer) refers to fsl_dma.o(.rodata.str1.1) for .L.str.13
    fsl_dma.o(.text.DMA_PrepareChannelTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_PrepareChannelTransfer) refers to fsl_dma.o(.text.DMA_PrepareChannelTransfer) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_LoadChannelDescriptor) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_LoadChannelDescriptor) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_LoadChannelDescriptor) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_LoadChannelDescriptor) refers to fsl_dma.o(.rodata.s_dma_descriptor_table) for s_dma_descriptor_table
    fsl_dma.o(.ARM.exidx.text.DMA_LoadChannelDescriptor) refers to fsl_dma.o(.text.DMA_LoadChannelDescriptor) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_InstallDescriptorMemory) refers to fsl_dma.o(.rodata.str1.1) for .L.str.16
    fsl_dma.o(.text.DMA_InstallDescriptorMemory) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_InstallDescriptorMemory) refers to fsl_dma.o(.text.DMA_InstallDescriptorMemory) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SubmitChannelTransferParameter) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_SubmitChannelTransferParameter) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_SubmitChannelTransferParameter) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_SubmitChannelTransferParameter) refers to fsl_dma.o(.rodata.s_dma_descriptor_table) for s_dma_descriptor_table
    fsl_dma.o(.ARM.exidx.text.DMA_SubmitChannelTransferParameter) refers to fsl_dma.o(.text.DMA_SubmitChannelTransferParameter) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SubmitChannelDescriptor) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_SubmitChannelDescriptor) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_SubmitChannelDescriptor) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_SubmitChannelDescriptor) refers to fsl_dma.o(.rodata.s_dma_descriptor_table) for s_dma_descriptor_table
    fsl_dma.o(.ARM.exidx.text.DMA_SubmitChannelDescriptor) refers to fsl_dma.o(.text.DMA_SubmitChannelDescriptor) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SubmitChannelTransfer) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_SubmitChannelTransfer) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_SubmitChannelTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_SubmitChannelTransfer) refers to fsl_dma.o(.rodata.s_dma_descriptor_table) for s_dma_descriptor_table
    fsl_dma.o(.text.DMA_SubmitChannelTransfer) refers to fsl_dma.o(.text.DMA_SetupChannelDescriptor) for DMA_SetupChannelDescriptor
    fsl_dma.o(.ARM.exidx.text.DMA_SubmitChannelTransfer) refers to fsl_dma.o(.text.DMA_SubmitChannelTransfer) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_SubmitTransfer) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_SubmitTransfer) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_SubmitTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_SubmitTransfer) refers to fsl_dma.o(.rodata.s_dma_descriptor_table) for s_dma_descriptor_table
    fsl_dma.o(.text.DMA_SubmitTransfer) refers to fsl_dma.o(.text.DMA_CreateDescriptor) for DMA_CreateDescriptor
    fsl_dma.o(.ARM.exidx.text.DMA_SubmitTransfer) refers to fsl_dma.o(.text.DMA_SubmitTransfer) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_StartTransfer) refers to fsl_dma.o(.rodata.str1.1) for .L.str.6
    fsl_dma.o(.text.DMA_StartTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.ARM.exidx.text.DMA_StartTransfer) refers to fsl_dma.o(.text.DMA_StartTransfer) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA_IRQHandle) refers to fsl_dma.o(.rodata.cst8) for s_dmaBases
    fsl_dma.o(.text.DMA_IRQHandle) refers to fsl_dma.o(.rodata.str1.1) for .L.str.23
    fsl_dma.o(.text.DMA_IRQHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dma.o(.text.DMA_IRQHandle) refers to fsl_dma.o(.bss.s_DMAHandle) for s_DMAHandle
    fsl_dma.o(.ARM.exidx.text.DMA_IRQHandle) refers to fsl_dma.o(.text.DMA_IRQHandle) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA0_DriverIRQHandler) refers to fsl_dma.o(.text.DMA_IRQHandle) for DMA_IRQHandle
    fsl_dma.o(.ARM.exidx.text.DMA0_DriverIRQHandler) refers to fsl_dma.o(.text.DMA0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_dma.o(.text.DMA1_DriverIRQHandler) refers to fsl_dma.o(.text.DMA_IRQHandle) for DMA_IRQHandle
    fsl_dma.o(.ARM.exidx.text.DMA1_DriverIRQHandler) refers to fsl_dma.o(.text.DMA1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_dma.o(.rodata.s_dma_descriptor_table) refers to fsl_dma.o(.bss.s_dma_descriptor_table0) for [Anonymous Symbol]
    fsl_dma.o(.rodata.s_dma_descriptor_table) refers to fsl_dma.o(.bss.s_dma_descriptor_table1) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) refers to fsl_flexcomm.o(.rodata.s_flexcommBaseAddrs) for s_flexcommBaseAddrs
    fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str
    fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_GetInstance) refers to fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.rodata.s_flexcommBaseAddrs) for s_flexcommBaseAddrs
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.rodata.s_flexcommClocks) for s_flexcommClocks
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.rodata.s_flexcommBaseAddrs) for s_flexcommBaseAddrs
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortInit) refers to fsl_gpio.o(.rodata.cst8) for s_gpioClockName
    fsl_gpio.o(.text.GPIO_PortInit) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_gpio.o(.text.GPIO_PortInit) refers to fsl_gpio.o(.rodata.str1.1) for .L.str
    fsl_gpio.o(.text.GPIO_PortInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortInit) refers to fsl_gpio.o(.text.GPIO_PortInit) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.cst8) for s_gpioClockName
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.str1.1) for .L.str
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_GetInstance) refers to fsl_i2c.o(.rodata.cst32) for s_i2cBaseAddrs
    fsl_i2c.o(.text.I2C_GetInstance) refers to fsl_i2c.o(.rodata.str1.1) for .L.str
    fsl_i2c.o(.text.I2C_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_GetInstance) refers to fsl_i2c.o(.text.I2C_GetInstance) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterGetDefaultConfig) refers to fsl_i2c.o(.text.I2C_MasterGetDefaultConfig) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_MasterInit) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for FLEXCOMM_Init
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterInit) refers to fsl_i2c.o(.text.I2C_MasterInit) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterSetBaudRate) refers to fsl_i2c.o(.text.I2C_MasterSetBaudRate) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterDeinit) refers to fsl_i2c.o(.text.I2C_MasterDeinit) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterStart) refers to fsl_i2c.o(.text.I2C_MasterStart) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterStop) refers to fsl_i2c.o(.text.I2C_MasterStop) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_MasterWriteBlocking) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.1
    fsl_i2c.o(.text.I2C_MasterWriteBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterWriteBlocking) refers to fsl_i2c.o(.text.I2C_MasterWriteBlocking) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_MasterReadBlocking) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.3
    fsl_i2c.o(.text.I2C_MasterReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterReadBlocking) refers to fsl_i2c.o(.text.I2C_MasterReadBlocking) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_MasterTransferBlocking) refers to fsl_i2c.o(.text.I2C_MasterWriteBlocking) for I2C_MasterWriteBlocking
    fsl_i2c.o(.text.I2C_MasterTransferBlocking) refers to fsl_i2c.o(.text.I2C_MasterCheckStartResponse) for I2C_MasterCheckStartResponse
    fsl_i2c.o(.text.I2C_MasterTransferBlocking) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.4
    fsl_i2c.o(.text.I2C_MasterTransferBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferBlocking) refers to fsl_i2c.o(.text.I2C_MasterTransferBlocking) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterCheckStartResponse) refers to fsl_i2c.o(.text.I2C_MasterCheckStartResponse) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) refers to fsl_i2c.o(.rodata.cst32) for s_i2cBaseAddrs
    fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) refers to fsl_i2c.o(.rodata.str1.1) for .L.str
    fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) refers to fsl_i2c.o(.text.I2C_MasterTransferHandleIRQ) for I2C_MasterTransferHandleIRQ
    fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) for FLEXCOMM_SetIRQHandler
    fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) refers to fsl_i2c.o(.rodata.cst8) for s_i2cIRQ
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferCreateHandle) refers to fsl_i2c.o(.text.I2C_MasterTransferCreateHandle) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferHandleIRQ) refers to fsl_i2c.o(.text.I2C_MasterTransferHandleIRQ) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_MasterTransferNonBlocking) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.5
    fsl_i2c.o(.text.I2C_MasterTransferNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferNonBlocking) refers to fsl_i2c.o(.text.I2C_MasterTransferNonBlocking) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_MasterTransferGetCount) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.5
    fsl_i2c.o(.text.I2C_MasterTransferGetCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferGetCount) refers to fsl_i2c.o(.text.I2C_MasterTransferGetCount) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferAbort) refers to fsl_i2c.o(.text.I2C_MasterTransferAbort) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_SlaveSetSendBuffer) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.5
    fsl_i2c.o(.text.I2C_SlaveSetSendBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveSetSendBuffer) refers to fsl_i2c.o(.text.I2C_SlaveSetSendBuffer) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_SlaveSetReceiveBuffer) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.5
    fsl_i2c.o(.text.I2C_SlaveSetReceiveBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveSetReceiveBuffer) refers to fsl_i2c.o(.text.I2C_SlaveSetReceiveBuffer) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveSetAddress) refers to fsl_i2c.o(.text.I2C_SlaveSetAddress) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_SlaveGetDefaultConfig) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.1
    fsl_i2c.o(.text.I2C_SlaveGetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveGetDefaultConfig) refers to fsl_i2c.o(.text.I2C_SlaveGetDefaultConfig) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_SlaveInit) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for FLEXCOMM_Init
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveInit) refers to fsl_i2c.o(.text.I2C_SlaveInit) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveDeinit) refers to fsl_i2c.o(.text.I2C_SlaveDeinit) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveWriteBlocking) refers to fsl_i2c.o(.text.I2C_SlaveWriteBlocking) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveReadBlocking) refers to fsl_i2c.o(.text.I2C_SlaveReadBlocking) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) refers to fsl_i2c.o(.rodata.cst32) for s_i2cBaseAddrs
    fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) refers to fsl_i2c.o(.rodata.str1.1) for .L.str
    fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) refers to fsl_i2c.o(.text.I2C_SlaveTransferHandleIRQ) for I2C_SlaveTransferHandleIRQ
    fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) for FLEXCOMM_SetIRQHandler
    fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) refers to fsl_i2c.o(.rodata.cst8) for s_i2cIRQ
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferCreateHandle) refers to fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferHandleIRQ) refers to fsl_i2c.o(.text.I2C_SlaveTransferHandleIRQ) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_SlaveTransferNonBlocking) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.5
    fsl_i2c.o(.text.I2C_SlaveTransferNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferNonBlocking) refers to fsl_i2c.o(.text.I2C_SlaveTransferNonBlocking) for [Anonymous Symbol]
    fsl_i2c.o(.text.I2C_SlaveTransferGetCount) refers to fsl_i2c.o(.rodata.str1.1) for .L.str.5
    fsl_i2c.o(.text.I2C_SlaveTransferGetCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferGetCount) refers to fsl_i2c.o(.text.I2C_SlaveTransferGetCount) for [Anonymous Symbol]
    fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferAbort) refers to fsl_i2c.o(.text.I2C_SlaveTransferAbort) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_SetPeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_SetPeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_SetPeripheralReset) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_ClearPeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_ClearPeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_ClearPeripheralReset) refers to fsl_reset.o(.text.RESET_ClearPeripheralReset) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_PeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_PeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_PeripheralReset) refers to fsl_reset.o(.text.RESET_PeripheralReset) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_GetInstance) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_GetInstance) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_GetInstance) refers to fsl_spi.o(.text.SPI_GetInstance) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_SetDummyData) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_SetDummyData) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_SetDummyData) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_SetDummyData) refers to fsl_spi.o(.bss.s_dummyData) for s_dummyData
    fsl_spi.o(.ARM.exidx.text.SPI_SetDummyData) refers to fsl_spi.o(.text.SPI_SetDummyData) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_GetConfig) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_GetConfig) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_GetConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_GetConfig) refers to fsl_spi.o(.bss.g_configs) for g_configs
    fsl_spi.o(.ARM.exidx.text.SPI_GetConfig) refers to fsl_spi.o(.text.SPI_GetConfig) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterGetDefaultConfig) refers to fsl_spi.o(.rodata.str1.1) for .L.str.2
    fsl_spi.o(.text.SPI_MasterGetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_MasterGetDefaultConfig) refers to fsl_spi.o(.text.SPI_MasterGetDefaultConfig) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterInit) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for FLEXCOMM_Init
    fsl_spi.o(.text.SPI_MasterInit) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_MasterInit) refers to fsl_spi.o(.bss.g_configs) for g_configs
    fsl_spi.o(.text.SPI_MasterInit) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_MasterInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_MasterInit) refers to fsl_spi.o(.bss.s_dummyData) for s_dummyData
    fsl_spi.o(.ARM.exidx.text.SPI_MasterInit) refers to fsl_spi.o(.text.SPI_MasterInit) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterSetBaud) refers to fsl_spi.o(.rodata.str1.1) for .L.str.6
    fsl_spi.o(.text.SPI_MasterSetBaud) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_MasterSetBaud) refers to fsl_spi.o(.text.SPI_MasterSetBaud) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_SlaveGetDefaultConfig) refers to fsl_spi.o(.rodata.str1.1) for .L.str.2
    fsl_spi.o(.text.SPI_SlaveGetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_SlaveGetDefaultConfig) refers to fsl_spi.o(.text.SPI_SlaveGetDefaultConfig) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_SlaveInit) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for FLEXCOMM_Init
    fsl_spi.o(.text.SPI_SlaveInit) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_SlaveInit) refers to fsl_spi.o(.bss.g_configs) for g_configs
    fsl_spi.o(.text.SPI_SlaveInit) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_SlaveInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_SlaveInit) refers to fsl_spi.o(.bss.s_dummyData) for s_dummyData
    fsl_spi.o(.ARM.exidx.text.SPI_SlaveInit) refers to fsl_spi.o(.text.SPI_SlaveInit) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_Deinit) refers to fsl_spi.o(.rodata.str1.1) for .L.str.5
    fsl_spi.o(.text.SPI_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_Deinit) refers to fsl_spi.o(.text.SPI_Deinit) for [Anonymous Symbol]
    fsl_spi.o(.ARM.exidx.text.SPI_EnableTxDMA) refers to fsl_spi.o(.text.SPI_EnableTxDMA) for [Anonymous Symbol]
    fsl_spi.o(.ARM.exidx.text.SPI_EnableRxDMA) refers to fsl_spi.o(.text.SPI_EnableRxDMA) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_WriteData) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_WriteData) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_WriteData) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_WriteData) refers to fsl_spi.o(.bss.g_configs) for g_configs
    fsl_spi.o(.ARM.exidx.text.SPI_WriteData) refers to fsl_spi.o(.text.SPI_WriteData) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to fsl_spi.o(.text.SPI_MasterTransferHandleIRQ) for SPI_MasterTransferHandleIRQ
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to fsl_spi.o(.text.SPI_SlaveTransferHandleIRQ) for SPI_SlaveTransferHandleIRQ
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) for FLEXCOMM_SetIRQHandler
    fsl_spi.o(.text.SPI_MasterTransferCreateHandle) refers to fsl_spi.o(.bss.g_configs) for g_configs
    fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferCreateHandle) refers to fsl_spi.o(.text.SPI_MasterTransferCreateHandle) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterTransferHandleIRQ) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_MasterTransferHandleIRQ) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_MasterTransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_MasterTransferHandleIRQ) refers to fsl_spi.o(.bss.s_dummyData) for s_dummyData
    fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferHandleIRQ) refers to fsl_spi.o(.text.SPI_MasterTransferHandleIRQ) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_SlaveTransferHandleIRQ) refers to fsl_spi.o(.text.SPI_MasterTransferHandleIRQ) for SPI_MasterTransferHandleIRQ
    fsl_spi.o(.ARM.exidx.text.SPI_SlaveTransferHandleIRQ) refers to fsl_spi.o(.text.SPI_SlaveTransferHandleIRQ) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterTransferBlocking) refers to fsl_spi.o(.rodata.s_spiBaseAddrs) for s_spiBaseAddrs
    fsl_spi.o(.text.SPI_MasterTransferBlocking) refers to fsl_spi.o(.rodata.str1.1) for .L.str
    fsl_spi.o(.text.SPI_MasterTransferBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.text.SPI_MasterTransferBlocking) refers to fsl_spi.o(.bss.g_configs) for g_configs
    fsl_spi.o(.text.SPI_MasterTransferBlocking) refers to fsl_spi.o(.bss.s_dummyData) for s_dummyData
    fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferBlocking) refers to fsl_spi.o(.text.SPI_MasterTransferBlocking) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterTransferNonBlocking) refers to fsl_spi.o(.rodata.str1.1) for .L.str.10
    fsl_spi.o(.text.SPI_MasterTransferNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferNonBlocking) refers to fsl_spi.o(.text.SPI_MasterTransferNonBlocking) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterHalfDuplexTransferBlocking) refers to fsl_spi.o(.text.SPI_MasterTransferBlocking) for SPI_MasterTransferBlocking
    fsl_spi.o(.text.SPI_MasterHalfDuplexTransferBlocking) refers to fsl_spi.o(.rodata.str1.1) for .L.str.12
    fsl_spi.o(.text.SPI_MasterHalfDuplexTransferBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_MasterHalfDuplexTransferBlocking) refers to fsl_spi.o(.text.SPI_MasterHalfDuplexTransferBlocking) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterHalfDuplexTransferNonBlocking) refers to fsl_spi.o(.text.SPI_MasterTransferBlocking) for SPI_MasterTransferBlocking
    fsl_spi.o(.text.SPI_MasterHalfDuplexTransferNonBlocking) refers to fsl_spi.o(.text.SPI_MasterTransferNonBlocking) for SPI_MasterTransferNonBlocking
    fsl_spi.o(.text.SPI_MasterHalfDuplexTransferNonBlocking) refers to fsl_spi.o(.rodata.str1.1) for .L.str.12
    fsl_spi.o(.text.SPI_MasterHalfDuplexTransferNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_MasterHalfDuplexTransferNonBlocking) refers to fsl_spi.o(.text.SPI_MasterHalfDuplexTransferNonBlocking) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterTransferGetCount) refers to fsl_spi.o(.rodata.str1.1) for .L.str.8
    fsl_spi.o(.text.SPI_MasterTransferGetCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferGetCount) refers to fsl_spi.o(.text.SPI_MasterTransferGetCount) for [Anonymous Symbol]
    fsl_spi.o(.text.SPI_MasterTransferAbort) refers to fsl_spi.o(.rodata.str1.1) for .L.str.8
    fsl_spi.o(.text.SPI_MasterTransferAbort) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferAbort) refers to fsl_spi.o(.text.SPI_MasterTransferAbort) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_GetInstance) refers to fsl_usart.o(.rodata.cst32) for s_usartBaseAddrs
    fsl_usart.o(.text.USART_GetInstance) refers to fsl_usart.o(.rodata.str1.1) for .L.str
    fsl_usart.o(.text.USART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_GetInstance) refers to fsl_usart.o(.text.USART_GetInstance) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferGetRxRingBufferLength) refers to fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferStartRingBuffer) refers to fsl_usart.o(.rodata.str1.1) for .L.str.3
    fsl_usart.o(.text.USART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferStartRingBuffer) refers to fsl_usart.o(.text.USART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferStopRingBuffer) refers to fsl_usart.o(.rodata.str1.1) for .L.str.3
    fsl_usart.o(.text.USART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferStopRingBuffer) refers to fsl_usart.o(.text.USART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_Init) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for FLEXCOMM_Init
    fsl_usart.o(.text.USART_Init) refers to fsl_usart.o(.text.USART_SetBaudRate) for USART_SetBaudRate
    fsl_usart.o(.text.USART_Init) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_Init) refers to fsl_usart.o(.text.USART_Init) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_SetBaudRate) refers to fsl_usart.o(.rodata.str1.1) for .L.str.7
    fsl_usart.o(.text.USART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_SetBaudRate) refers to fsl_usart.o(.text.USART_SetBaudRate) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_Deinit) refers to fsl_usart.o(.rodata.str1.1) for .L.str.3
    fsl_usart.o(.text.USART_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_Deinit) refers to fsl_usart.o(.text.USART_Deinit) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_GetDefaultConfig) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_GetDefaultConfig) refers to fsl_usart.o(.text.USART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_Enable32kMode) refers to fsl_usart.o(.text.USART_SetBaudRate) for USART_SetBaudRate
    fsl_usart.o(.ARM.exidx.text.USART_Enable32kMode) refers to fsl_usart.o(.text.USART_Enable32kMode) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_Enable9bitMode) refers to fsl_usart.o(.rodata.str1.1) for .L.str.8
    fsl_usart.o(.text.USART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_Enable9bitMode) refers to fsl_usart.o(.text.USART_Enable9bitMode) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_SendAddress) refers to fsl_usart.o(.rodata.str1.1) for .L.str.8
    fsl_usart.o(.text.USART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_SendAddress) refers to fsl_usart.o(.text.USART_SendAddress) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_WriteBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.9
    fsl_usart.o(.text.USART_WriteBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_WriteBlocking) refers to fsl_usart.o(.text.USART_WriteBlocking) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_ReadBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.9
    fsl_usart.o(.text.USART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_ReadBlocking) refers to fsl_usart.o(.text.USART_ReadBlocking) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_usart.o(.rodata.cst32) for s_usartBaseAddrs
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_usart.o(.rodata.str1.1) for .L.str
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_usart.o(.text.USART_TransferHandleIRQ) for USART_TransferHandleIRQ
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) for FLEXCOMM_SetIRQHandler
    fsl_usart.o(.ARM.exidx.text.USART_TransferCreateHandle) refers to fsl_usart.o(.text.USART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferHandleIRQ) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferHandleIRQ) refers to fsl_usart.o(.text.USART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferSendNonBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.12
    fsl_usart.o(.text.USART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferSendNonBlocking) refers to fsl_usart.o(.text.USART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferAbortSend) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferAbortSend) refers to fsl_usart.o(.text.USART_TransferAbortSend) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferGetSendCount) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferGetSendCount) refers to fsl_usart.o(.text.USART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferReceiveNonBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.12
    fsl_usart.o(.text.USART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferReceiveNonBlocking) refers to fsl_usart.o(.text.USART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferAbortReceive) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferAbortReceive) refers to fsl_usart.o(.text.USART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferGetReceiveCount) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferGetReceiveCount) refers to fsl_usart.o(.text.USART_TransferGetReceiveCount) for [Anonymous Symbol]
    system_lpc55s69_cm33_core0.o(.text.SystemInit) refers to startup_lpc55s69_cm33_core0.o(.isr_vector) for __Vectors
    system_lpc55s69_cm33_core0.o(.text.SystemInit) refers to system_lpc55s69_cm33_core0.o(.text.SystemInitHook) for SystemInitHook
    system_lpc55s69_cm33_core0.o(.ARM.exidx.text.SystemInit) refers to system_lpc55s69_cm33_core0.o(.text.SystemInit) for [Anonymous Symbol]
    system_lpc55s69_cm33_core0.o(.ARM.exidx.text.SystemInitHook) refers to system_lpc55s69_cm33_core0.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate) refers to system_lpc55s69_cm33_core0.o(.text.findPll0PostDiv) for findPll0PostDiv
    system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate) refers to system_lpc55s69_cm33_core0.o(.text.findPll0MMult) for findPll0MMult
    system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate) refers to ffixull.o(x$fpl$llufromf) for __aeabi_f2ulz
    system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate) refers to system_lpc55s69_cm33_core0.o(.data.SystemCoreClock) for SystemCoreClock
    system_lpc55s69_cm33_core0.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_lpc55s69_cm33_core0.o(.ARM.exidx.text.findPll0PostDiv) refers to system_lpc55s69_cm33_core0.o(.text.findPll0PostDiv) for [Anonymous Symbol]
    system_lpc55s69_cm33_core0.o(.ARM.exidx.text.findPll0MMult) refers to system_lpc55s69_cm33_core0.o(.text.findPll0MMult) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData) refers to fsl_debug_console.o(.text.DbgConsole_SendData) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.text.DbgConsole_ReadLine) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_Init) for SerialManager_Init
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle) for SerialManager_OpenWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle) for SerialManager_OpenReadHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower) for SerialManager_EnterLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.text.DbgConsole_EnterLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower) for SerialManager_ExitLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.text.DbgConsole_ExitLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle) for SerialManager_CloseWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle) for SerialManager_CloseReadHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_component_serial_manager.o(.text.SerialManager_Deinit) for SerialManager_Deinit
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush) refers to fsl_debug_console.o(.text.DbgConsole_Flush) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_PrintCallback) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.fputc) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.fputc) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.fputc) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.fputc) refers to fsl_debug_console.o(.text.fputc) for [Anonymous Symbol]
    fsl_debug_console.o(.text.fgetc) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.fgetc) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.fgetc) refers to fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.text.fgetc) refers to fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore) for s_debugConsoleReadWaitSemaphore
    fsl_debug_console.o(.ARM.exidx.text.fgetc) refers to fsl_debug_console.o(.text.fgetc) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text._sys_exit) refers to fsl_debug_console.o(.text._sys_exit) for [Anonymous Symbol]
    fsl_debug_console.o(.text._ttywrch) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text._ttywrch) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text._ttywrch) refers to fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text._ttywrch) refers to fsl_debug_console.o(.text._ttywrch) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text._sys_command_string) refers to fsl_debug_console.o(.text._sys_command_string) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanf) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.text.StrFormatScanf) refers to strlen.o(.text) for strlen
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_CycleCpuAndFlash) refers to fsl_power_lib.o(.text.POWER_CycleCpuAndFlash) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_EnterDeepSleep) refers to rt_memclr_w.o(.text) for __aeabi_memclr8
    fsl_power_lib.o(.text.POWER_EnterDeepSleep) refers to fsl_power_lib.o(.text.lf_set_ldo_ao_ldo_mem_voltage) for lf_set_ldo_ao_ldo_mem_voltage
    fsl_power_lib.o(.text.POWER_EnterDeepSleep) refers to fsl_power_lib.o(.text.POWER_EnterLowPower) for POWER_EnterLowPower
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepSleep) refers to fsl_power_lib.o(.text.POWER_EnterDeepSleep) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.lf_set_ldo_ao_ldo_mem_voltage) refers to fsl_power_lib.o(.text.lf_set_ldo_ao_ldo_mem_voltage) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_EnterLowPower) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    fsl_power_lib.o(.text.POWER_EnterLowPower) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterLowPower) refers to fsl_power_lib.o(.text.POWER_EnterLowPower) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_EnterPowerDown) refers to rt_memclr_w.o(.text) for __aeabi_memclr8
    fsl_power_lib.o(.text.POWER_EnterPowerDown) refers to fsl_power_lib.o(.text.lf_set_ldo_ao_ldo_mem_voltage) for lf_set_ldo_ao_ldo_mem_voltage
    fsl_power_lib.o(.text.POWER_EnterPowerDown) refers to fsl_power_lib.o(.text.POWER_EnterLowPower) for POWER_EnterLowPower
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterPowerDown) refers to fsl_power_lib.o(.text.POWER_EnterPowerDown) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_EnterDeepPowerDown) refers to rt_memclr_w.o(.text) for __aeabi_memclr8
    fsl_power_lib.o(.text.POWER_EnterDeepPowerDown) refers to fsl_power_lib.o(.text.lf_set_ldo_ao_ldo_mem_voltage) for lf_set_ldo_ao_ldo_mem_voltage
    fsl_power_lib.o(.text.POWER_EnterDeepPowerDown) refers to fsl_power_lib.o(.text.POWER_EnterLowPower) for POWER_EnterLowPower
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepPowerDown) refers to fsl_power_lib.o(.text.POWER_EnterDeepPowerDown) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterSleep) refers to fsl_power_lib.o(.text.POWER_EnterSleep) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_GetLibVersion) refers to fsl_power_lib.o(.text.POWER_GetLibVersion) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_SetVoltageForFreq) refers to fsl_power_lib.o(.text.lowpower_set_dcdc_power_profile) for lowpower_set_dcdc_power_profile
    fsl_power_lib.o(.text.POWER_SetVoltageForFreq) refers to fsl_power_lib.o(.text.lowpower_set_voltage_for_process) for lowpower_set_voltage_for_process
    fsl_power_lib.o(.ARM.exidx.text.POWER_SetVoltageForFreq) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.lowpower_set_dcdc_power_profile) refers to fsl_power_lib.o(.text.lowpower_set_dcdc_power_profile) for [Anonymous Symbol]
    fsl_power_lib.o(.text.lowpower_set_voltage_for_process) refers to fsl_power_lib.o(.text.lowpower_set_system_voltage) for lowpower_set_system_voltage
    fsl_power_lib.o(.ARM.exidx.text.lowpower_set_voltage_for_process) refers to fsl_power_lib.o(.text.lowpower_set_voltage_for_process) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_Xtal16mhzCapabankTrim) refers to fsl_power_lib.o(.text.POWER_SetXtal16mhzLdo) for POWER_SetXtal16mhzLdo
    fsl_power_lib.o(.ARM.exidx.text.POWER_Xtal16mhzCapabankTrim) refers to fsl_power_lib.o(.text.POWER_Xtal16mhzCapabankTrim) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_SetXtal16mhzLdo) refers to fsl_power_lib.o(.text.POWER_SetXtal16mhzLdo) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_Xtal32khzCapabankTrim) refers to fsl_power_lib.o(.text.POWER_Xtal32khzCapabankTrim) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_SetXtal16mhzTrim) refers to fsl_power_lib.o(.text.POWER_SetXtal16mhzTrim) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_GetWakeUpCause) refers to fsl_power_lib.o(.text.POWER_GetWakeUpCause) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.lowpower_set_system_voltage) refers to fsl_power_lib.o(.text.lowpower_set_system_voltage) for [Anonymous Symbol]
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text.__user_perthread_libspace) for __user_perthread_libspace
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_threads.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_free_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free_threads.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc_threads.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free_threads.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc_threads.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    vsnprintf.o(.text) refers (Special) to _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) for _printf_a
    vsnprintf.o(.text) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    vsnprintf.o(.text) refers (Special) to _printf_charcount.o(.text) for _printf_charcount
    vsnprintf.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    vsnprintf.o(.text) refers (Special) to _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) for _printf_e
    vsnprintf.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    vsnprintf.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    vsnprintf.o(.text) refers (Special) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    vsnprintf.o(.text) refers (Special) to _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) for _printf_g
    vsnprintf.o(.text) refers (Special) to _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) for _printf_i
    vsnprintf.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    vsnprintf.o(.text) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    vsnprintf.o(.text) refers (Special) to _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) for _printf_lc
    vsnprintf.o(.text) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    vsnprintf.o(.text) refers (Special) to _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) for _printf_lld
    vsnprintf.o(.text) refers (Special) to _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) for _printf_lli
    vsnprintf.o(.text) refers (Special) to _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) for _printf_llo
    vsnprintf.o(.text) refers (Special) to _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) for _printf_llu
    vsnprintf.o(.text) refers (Special) to _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) for _printf_llx
    vsnprintf.o(.text) refers (Special) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    vsnprintf.o(.text) refers (Special) to _printf_hex_int_ll_ptr.o(.text) for _printf_longlong_hex
    vsnprintf.o(.text) refers (Special) to _printf_oct_int_ll.o(.text) for _printf_longlong_oct
    vsnprintf.o(.text) refers (Special) to _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) for _printf_ls
    vsnprintf.o(.text) refers (Special) to _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) for _printf_n
    vsnprintf.o(.text) refers (Special) to _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) for _printf_o
    vsnprintf.o(.text) refers (Special) to _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) for _printf_p
    vsnprintf.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    vsnprintf.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_post_padding
    vsnprintf.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    vsnprintf.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    vsnprintf.o(.text) refers (Special) to _printf_truncate.o(.text) for _printf_truncate_signed
    vsnprintf.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    vsnprintf.o(.text) refers (Special) to _printf_wctomb.o(.text) for _printf_wctomb
    vsnprintf.o(.text) refers (Special) to _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) for _printf_x
    vsnprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    vsnprintf.o(.text) refers to _snputc.o(.text) for _snputc
    strtoul.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    strtoul.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    ffixull.o(x$fpl$llufromf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixull.o(x$fpl$llufromf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffixull.o(x$fpl$llufromfr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixull.o(x$fpl$llufromfr) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for __rt_entry_sh
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_ctype_table.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit5.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_threads.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_threads.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_signed
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_char_common.o(.text) refers to __printf_flags_ss_wp.o(.text) for __printf
    _printf_wctomb.o(.text) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_wctomb.o(.text) refers to _c16rtomb.o(.text) for _wcrtomb
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_wctomb.o(.text) refers to _printf_wctomb.o(.constdata) for .constdata
    _printf_wctomb.o(.constdata) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_longlong_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_longlong_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_oct_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll.o(.text) refers to _printf_hex_ll.o(.constdata) for .constdata
    _printf_hex_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int.o(.text) refers to _printf_hex_int.o(.constdata) for .constdata
    _printf_hex_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll.o(.text) refers to _printf_hex_int_ll.o(.constdata) for .constdata
    _printf_hex_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ptr.o(.text) refers to _printf_hex_ptr.o(.constdata) for .constdata
    _printf_hex_int_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ptr.o(.text) refers to _printf_hex_int_ptr.o(.constdata) for .constdata
    _printf_hex_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll_ptr.o(.text) refers to _printf_hex_ll_ptr.o(.constdata) for .constdata
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_hex_int_ll_ptr.o(.constdata) for .constdata
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) refers (Weak) to _printf_char.o(.text) for _printf_char
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) refers (Weak) to _printf_charcount.o(.text) for _printf_charcount
    _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_int_hex
    _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_hex_ptr
    _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_int_oct
    _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) refers (Weak) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Weak) to _printf_wchar.o(.text) for _printf_wchar
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Weak) to _printf_wchar.o(.text) for _printf_wstring
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_ll_oct
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_ll_hex
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to fsl_debug_console.o(.text._sys_command_string) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to rtx_lib.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000011) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    printf2.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    printf2b.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    __rtentry7.o(.ARM.Collect$$rtentry$$00000007) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for __lit__00000000
    __rtentry7.o(__vectab_stack_and_reset_2_area) refers to __main.o(!!!main) for __main
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for .ARM.Collect$$rtentry$$00000007
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for .ARM.Collect$$rtentry$$00002718
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to fsl_debug_console.o(.text._sys_exit) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_threads.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_d2e) for _btod_d2e
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec_accurate.o(.text) refers to btod_accurate.o(.text) for _btod_main
    _printf_fp_dec_accurate.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec_accurate.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_hex.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_hex.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers to _printf_fp_hex.o(.constdata) for .constdata
    _printf_fp_hex.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_wchar.o(.text) refers (Weak) to _printf_wctomb.o(.text) for _printf_wctomb
    _c16rtomb.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv8m_maindsp.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to sys_stackheap.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to fsl_debug_console.o(.text._sys_exit) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_threads.o(.text) for __Heap_Finalize
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    bigflt0.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers to btod.o(CL$$btod_d2e_norm_op1) for _d2e_norm_op1
    btod.o(CL$$btod_d2e_norm_op1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e_norm_op1) refers to btod.o(CL$$btod_d2e_denorm_low) for _d2e_denorm_low
    btod.o(CL$$btod_d2e_denorm_low) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_ediv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_emuld) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_edivd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_e2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_mult_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_div_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_common
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv8m_maindsp.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    defsig_exit.o(.text) refers to fsl_debug_console.o(.text._sys_exit) for _sys_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to fsl_debug_console.o(.text._sys_command_string) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    istatus.o(x$fpl$ieeestatus) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sys_stackheap.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    sys_stackheap_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_hlt.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    h1_final_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    btod_accurate_common.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to fsl_debug_console.o(.text._ttywrch) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit5.o(.ARM.Collect$$libinit$$0000000A) refers to libinit5.o(.ARM.Collect$$libinit$$0000271B) for __lit__00000000
    libinit5.o(.ARM.Collect$$libinit$$0000000A) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit5.o(.ARM.Collect$$libinit$$0000002C) refers to libinit5.o(.ARM.Collect$$libinit$$0000273D) for __lit__00000002
    libinit5.o(.ARM.Collect$$libinit$$0000002C) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing blinky.o(.text), (0 bytes).
    Removing blinky.o(.ARM.exidx.text.app_initialize), (8 bytes).
    Removing blinky.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing blinky.o(.ARM.exidx.text.thrLED), (8 bytes).
    Removing blinky.o(.ARM.exidx.text.thrButton), (8 bytes).
    Removing main_lpc55s69sdk.o(.text), (0 bytes).
    Removing main_lpc55s69sdk.o(.ARM.exidx.text.main_demo), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stream_graph_interpreter.o(.text), (0 bytes).
    Removing stream_graph_interpreter.o(.ARM.exidx.text.arm_graph_interpreter), (8 bytes).
    Removing stream_io.o(.text), (0 bytes).
    Removing stream_io.o(.ARM.exidx.graph_interpreter_section), (8 bytes).
    Removing stream_scheduler.o(.text), (0 bytes).
    Removing stream_scheduler.o(.text.pack2linaddr_int), (30 bytes).
    Removing stream_scheduler.o(.ARM.exidx.text.pack2linaddr_int), (8 bytes).
    Removing stream_scheduler.o(.ARM.exidx.text.pack2linaddr_ptr), (8 bytes).
    Removing stream_scheduler.o(.ARM.exidx.text.lin2pack), (8 bytes).
    Removing stream_scheduler.o(.text.arc_data_operations), (256 bytes).
    Removing stream_scheduler.o(.ARM.exidx.text.arc_data_operations), (8 bytes).
    Removing stream_scheduler.o(.ARM.exidx.text.stream_scan_graph), (8 bytes).
    Removing stream_scheduler.o(.ARM.exidx.text.arc_index_update), (8 bytes).
    Removing stream_services.o(.text), (0 bytes).
    Removing stream_services.o(.graph_interpreter_section), (28 bytes).
    Removing stream_services.o(.ARM.exidx.graph_interpreter_section), (8 bytes).
    Removing stream_services.o(.text.arm_stream_services_stdlib), (2 bytes).
    Removing stream_services.o(.ARM.exidx.text.arm_stream_services_stdlib), (8 bytes).
    Removing stream_services.o(.text.arm_stream_services_math), (2 bytes).
    Removing stream_services.o(.ARM.exidx.text.arm_stream_services_math), (8 bytes).
    Removing stream_services.o(.text.arm_stream_services_mm_audio), (2 bytes).
    Removing stream_services.o(.ARM.exidx.text.arm_stream_services_mm_audio), (8 bytes).
    Removing stream_services.o(.text.arm_stream_services_mm_image), (2 bytes).
    Removing stream_services.o(.ARM.exidx.text.arm_stream_services_mm_image), (8 bytes).
    Removing stream_services.o(.ARM.exidx.text.arm_stream_services), (8 bytes).
    Removing stream_services.o(.rodata..Lswitch.table.stream_bitsize_of_raw), (152 bytes).
    Removing platform_al.o(.text), (0 bytes).
    Removing platform_al.o(.ARM.exidx.text.platform_al), (8 bytes).
    Removing platform_lpc55s69sdk.o(.text), (0 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.platform_specific_long_offset), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.platform_specific_processor_arch_iomask), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.WR_BYTE_AND_CHECK_MP_), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.stream_in_0_set_stream), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.stream_in_0_start_data_move), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.stream_in_0_stop_stream), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.gpio_out_0_set_stream), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.gpio_out_0_start_data_move), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.gpio_out_0_stop_stream), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.trace_set), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.trace_start), (8 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.trace_stop), (8 bytes).
    Removing platform_lpc55s69sdk.o(.text.extract_sensor_field), (4 bytes).
    Removing platform_lpc55s69sdk.o(.ARM.exidx.text.extract_sensor_field), (8 bytes).
    Removing platform_lpc55s69sdk.o(.rodata.platform_audio_out_bit_fields), (13 bytes).
    Removing platform_lpc55s69sdk.o(.bss.ptf_trace), (36 bytes).
    Removing platform_lpc55s69sdk.o(.bss.frame_size_audio_render), (4 bytes).
    Removing stream_nodes.o(.text), (0 bytes).
    Removing arm_script_process.o(.text), (0 bytes).
    Removing arm_script_process.o(.text.arm_script_interpreter), (2 bytes).
    Removing arm_script_process.o(.ARM.exidx.text.arm_script_interpreter), (8 bytes).
    Removing arm_script.o(.text), (0 bytes).
    Removing arm_script.o(.text.arm_script), (60 bytes).
    Removing arm_script.o(.ARM.exidx.text.arm_script), (8 bytes).
    Removing arm_stream_detector_process.o(.text), (0 bytes).
    Removing arm_stream_detector_process.o(.ARM.exidx.text.arm_stream_detector_process), (8 bytes).
    Removing arm_stream_detector.o(.text), (0 bytes).
    Removing arm_stream_detector.o(.ARM.exidx.text.arm_stream_detector), (8 bytes).
    Removing arm_stream_detector.o(.bss.dbg), (100 bytes).
    Removing arm_stream_detector.o(.bss.x), (4 bytes).
    Removing arm_stream_filter.o(.text), (0 bytes).
    Removing arm_stream_filter.o(.ARM.exidx.text.arm_stream_filter), (8 bytes).
    Removing arm_biquad_cascade_df1_fast_q15.o(.text), (0 bytes).
    Removing arm_biquad_cascade_df1_fast_q15.o(.ARM.exidx.text.arm_biquad_cascade_df1_fast_q15), (8 bytes).
    Removing arm_biquad_cascade_df1_init_q15.o(.text), (0 bytes).
    Removing arm_biquad_cascade_df1_init_q15.o(.ARM.exidx.text.arm_biquad_cascade_df1_init_q15), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing board.o(.text.BOARD_InitDebugConsole_Core1), (44 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole_Core1), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockPLL150M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFRO12M), (80 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO12M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFROHF96M), (94 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFROHF96M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockPLL100M), (240 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockPLL100M), (8 bytes).
    Removing peripherals.o(.text), (0 bytes).
    Removing peripherals.o(.text.BOARD_InitPeripherals_cm33_core0), (2 bytes).
    Removing peripherals.o(.ARM.exidx.text.BOARD_InitPeripherals_cm33_core0), (8 bytes).
    Removing peripherals.o(.ARM.exidx.text.BOARD_InitBootPeripherals), (8 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitDEBUG_UARTPins), (32 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitDEBUG_UARTPins), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitLEDsPins), (108 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitLEDsPins), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitBUTTONsPins), (128 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBUTTONsPins), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitPins_Core0), (2 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins_Core0), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitSWD_DEBUGPins), (70 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitSWD_DEBUGPins), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitUSBPins), (90 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitUSBPins), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitI2SPins), (72 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitI2SPins), (8 bytes).
    Removing pin_mux.o(.text.BOARD_InitACCELPins), (74 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitACCELPins), (8 bytes).
    Removing irq_armv8mml.o(.rodata), (1 bytes).
    Removing irq_armv8mml.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (54 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (70 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (44 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (112 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (106 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (60 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (70 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (224 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (164 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (190 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (284 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (264 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (114 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (48 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetId), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (32 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (32 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (32 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (32 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNew), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquire), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquired), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreRelease), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreReleased), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNew), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (122 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (54 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (20 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (100 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (152 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (110 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (158 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (192 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (78 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (46 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (474 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (164 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (252 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (44 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (78 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (46 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (358 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (128 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (38 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (42 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreNew), (64 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (44 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreAcquire), (128 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreRelease), (140 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (70 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (56 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreNew), (208 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphorePostProcess), (70 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreAcquire), (140 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreRelease), (136 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (114 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (302 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (120 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (318 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (158 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (114 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (296 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (522 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (126 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (74 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (60 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (210 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (38 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (194 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (94 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text), (0 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioInit), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioPrint), (56 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioPrint), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetSignal), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetSignal), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioSetValue), (18 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetValue), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioGetValue), (20 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetValue), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioSetXYZ), (38 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetXYZ), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioGetXYZ), (42 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetXYZ), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioSetIPv4), (18 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetIPv4), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioGetIPv4), (20 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetIPv4), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioSetIPv6), (44 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioSetIPv6), (8 bytes).
    Removing vio_lpcxpresso55s69.o(.text.vioGetIPv6), (54 bytes).
    Removing vio_lpcxpresso55s69.o(.ARM.exidx.text.vioGetIPv6), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerSetup), (36 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetFreq), (12 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderInitialize), (730 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderEnable), (108 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStart), (326 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderDisable), (108 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (326 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (346 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (1586 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (68 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (58 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (76 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (108 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_serial_manager.o(.text), (0 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Init), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_Deinit), (68 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_Deinit), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_CloseWriteHandle), (42 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_CloseReadHandle), (42 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle), (8 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_ReadBlocking), (42 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_EnterLowpower), (22 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower), (8 bytes).
    Removing fsl_component_serial_manager.o(.text.SerialManager_ExitLowpower), (22 bytes).
    Removing fsl_component_serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text), (0 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartInit), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartDeinit), (14 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartRead), (22 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartRead), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartEnterLowpower), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower), (8 bytes).
    Removing fsl_component_serial_port_uart.o(.text.Serial_UartExitLowpower), (26 bytes).
    Removing fsl_component_serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower), (8 bytes).
    Removing fsl_adapter_usart.o(.text), (0 bytes).
    Removing fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_usart.o(.text.HAL_UartDeinit), (50 bytes).
    Removing fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking), (108 bytes).
    Removing fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_usart.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_usart.o(.text.HAL_UartExitLowpower), (32 bytes).
    Removing fsl_adapter_usart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_AttachClk), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClockAttachId), (90 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockAttachId), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetClkDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetRtc1khzClkDiv), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtc1khzClkDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetRtc1hzClkDiv), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtc1hzClkDiv), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFROClocking), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFLASHAccessCyclesForFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupExtClocking), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupI2SMClkClocking), (16 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupI2SMClkClocking), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupPLUClkInClocking), (16 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLUClkInClocking), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClockOutClkFreq), (214 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockOutClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq), (216 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPll0OutFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0OutFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetExtClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetExtClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFroHfFreq), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFroHfFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFro1MFreq), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFro1MFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPll1OutFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll1OutFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetOsc32KFreq), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc32KFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAdcClkFreq), (112 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAdcClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq), (124 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb0ClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb1ClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetMclkClkFreq), (100 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMclkClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSctClkFreq), (152 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSctClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetI2SMClkFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetI2SMClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSdioClkFreq), (124 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSdioClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFro12MFreq), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFro12MFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetWdtClkFreq), (46 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetWdtClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPLUClkInFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLUClkInFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlexCommInputClock), (230 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexCommInputClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq), (46 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexCommClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetHsLspiClkFreq), (208 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetHsLspiClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetCTimerClkFreq), (182 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCTimerClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSystickClkFreq), (116 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystickClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFlexCommClock), (118 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFlexCommClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFreq), (286 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPLL0InClockRate), (126 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL0InClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPLL1InClockRate), (132 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL1InClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPLL0OutFromSetup), (372 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL0OutFromSetup), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetStoredPLL0ClockRate), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredPLL0ClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPLL0OutClockRate), (60 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPLL0OutClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupPLL0Data), (904 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLL0Data), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupPLL0Prec), (336 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLL0Prec), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPLL0Freq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPLL1Freq), (294 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPLL1Freq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupPLL0Mult), (140 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLL0Mult), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock), (270 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0DeviceClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock), (308 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0HostClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock), (284 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0DeviceClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0HostClock), (8 bytes).
    Removing fsl_clock.o(.bss.s_I2S_Mclk_Freq), (4 bytes).
    Removing fsl_clock.o(.bss.s_PLU_ClkIn_Freq), (4 bytes).
    Removing fsl_clock.o(.rodata.str1.1), (92 bytes).
    Removing fsl_clock.o(.bss.s_Pll1_Freq), (4 bytes).
    Removing fsl_clock.o(.rodata.cst32), (32 bytes).
    Removing fsl_clock.o(.bss.s_FinHzCache), (8 bytes).
    Removing fsl_clock.o(.bss.s_FoutHzCache), (8 bytes).
    Removing fsl_clock.o(.bss.s_UseSSCache), (2 bytes).
    Removing fsl_clock.o(.bss.s_PllSetupCacheStruct), (64 bytes).
    Removing fsl_clock.o(.bss.s_PllSetupCacheIdx), (4 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (72 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (24 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_dma.o(.text), (0 bytes).
    Removing fsl_dma.o(.text.DMA_Init), (168 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing fsl_dma.o(.text.DMA_Deinit), (92 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_Deinit), (8 bytes).
    Removing fsl_dma.o(.text.DMA_ConfigureChannelTrigger), (64 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_ConfigureChannelTrigger), (8 bytes).
    Removing fsl_dma.o(.text.DMA_GetRemainingBytes), (78 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_GetRemainingBytes), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SetupDescriptor), (140 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SetupDescriptor), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SetupChannelDescriptor), (308 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SetupChannelDescriptor), (8 bytes).
    Removing fsl_dma.o(.text.DMA_CreateDescriptor), (584 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_CreateDescriptor), (8 bytes).
    Removing fsl_dma.o(.text.DMA_AbortTransfer), (134 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_AbortTransfer), (8 bytes).
    Removing fsl_dma.o(.text.DMA_CreateHandle), (216 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_CreateHandle), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SetCallback), (44 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SetCallback), (8 bytes).
    Removing fsl_dma.o(.text.DMA_PrepareTransfer), (364 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_PrepareTransfer), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SetChannelConfig), (140 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SetChannelConfig), (8 bytes).
    Removing fsl_dma.o(.text.DMA_PrepareChannelTransfer), (110 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_PrepareChannelTransfer), (8 bytes).
    Removing fsl_dma.o(.text.DMA_LoadChannelDescriptor), (176 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_LoadChannelDescriptor), (8 bytes).
    Removing fsl_dma.o(.text.DMA_InstallDescriptorMemory), (68 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_InstallDescriptorMemory), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SubmitChannelTransferParameter), (316 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SubmitChannelTransferParameter), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SubmitChannelDescriptor), (204 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SubmitChannelDescriptor), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SubmitChannelTransfer), (310 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SubmitChannelTransfer), (8 bytes).
    Removing fsl_dma.o(.text.DMA_SubmitTransfer), (230 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_SubmitTransfer), (8 bytes).
    Removing fsl_dma.o(.text.DMA_StartTransfer), (104 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_StartTransfer), (8 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA_IRQHandle), (8 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA0_DriverIRQHandler), (8 bytes).
    Removing fsl_dma.o(.ARM.exidx.text.DMA1_DriverIRQHandler), (8 bytes).
    Removing fsl_dma.o(.rodata.cst4), (4 bytes).
    Removing fsl_dma.o(.rodata.s_dma_descriptor_table), (8 bytes).
    Removing fsl_dma.o(.bss.s_dma_descriptor_table0), (368 bytes).
    Removing fsl_dma.o(.bss.s_dma_descriptor_table1), (368 bytes).
    Removing fsl_flexcomm.o(.text), (0 bytes).
    Removing fsl_flexcomm.o(.text.FLEXCOMM_GetInstance), (50 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_GetInstance), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_Init), (8 bytes).
    Removing fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler), (82 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_SetIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM0_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM1_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM2_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM3_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM4_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM5_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM6_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM7_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM8_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.rodata.kFlexcommIrqs), (9 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text.GPIO_PortInit), (92 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortInit), (8 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_i2c.o(.text), (0 bytes).
    Removing fsl_i2c.o(.text.I2C_GetInstance), (50 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_GetInstance), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterGetDefaultConfig), (24 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterGetDefaultConfig), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterInit), (244 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterInit), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterSetBaudRate), (222 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterSetBaudRate), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterDeinit), (14 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterDeinit), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterStart), (54 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterStart), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterStop), (34 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterStop), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterWriteBlocking), (236 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterWriteBlocking), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterReadBlocking), (174 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterReadBlocking), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterTransferBlocking), (604 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferBlocking), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterCheckStartResponse), (72 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterCheckStartResponse), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterTransferCreateHandle), (160 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferCreateHandle), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterTransferHandleIRQ), (526 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferHandleIRQ), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterTransferNonBlocking), (296 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferNonBlocking), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterTransferGetCount), (52 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferGetCount), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_MasterTransferAbort), (64 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_MasterTransferAbort), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveSetSendBuffer), (98 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveSetSendBuffer), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveSetReceiveBuffer), (98 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveSetReceiveBuffer), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveSetAddress), (14 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveSetAddress), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveGetDefaultConfig), (68 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveGetDefaultConfig), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveInit), (186 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveInit), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveDeinit), (8 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveDeinit), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveWriteBlocking), (150 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveWriteBlocking), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveReadBlocking), (150 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveReadBlocking), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveTransferCreateHandle), (170 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferCreateHandle), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveTransferHandleIRQ), (832 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferHandleIRQ), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveTransferNonBlocking), (106 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferNonBlocking), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveTransferGetCount), (54 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferGetCount), (8 bytes).
    Removing fsl_i2c.o(.text.I2C_SlaveTransferAbort), (24 bytes).
    Removing fsl_i2c.o(.ARM.exidx.text.I2C_SlaveTransferAbort), (8 bytes).
    Removing fsl_i2c.o(.rodata.cst32), (32 bytes).
    Removing fsl_i2c.o(.rodata.str1.1), (167 bytes).
    Removing fsl_i2c.o(.rodata.cst8), (8 bytes).
    Removing fsl_power.o(.text), (0 bytes).
    Removing fsl_reset.o(.text), (0 bytes).
    Removing fsl_reset.o(.text.RESET_SetPeripheralReset), (64 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_SetPeripheralReset), (8 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_ClearPeripheralReset), (8 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_PeripheralReset), (8 bytes).
    Removing fsl_spi.o(.text), (0 bytes).
    Removing fsl_spi.o(.text.SPI_GetInstance), (50 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_GetInstance), (8 bytes).
    Removing fsl_spi.o(.text.SPI_SetDummyData), (60 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_SetDummyData), (8 bytes).
    Removing fsl_spi.o(.text.SPI_GetConfig), (60 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_GetConfig), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterGetDefaultConfig), (72 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterGetDefaultConfig), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterInit), (508 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterInit), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterSetBaud), (106 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterSetBaud), (8 bytes).
    Removing fsl_spi.o(.text.SPI_SlaveGetDefaultConfig), (44 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_SlaveGetDefaultConfig), (8 bytes).
    Removing fsl_spi.o(.text.SPI_SlaveInit), (316 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_SlaveInit), (8 bytes).
    Removing fsl_spi.o(.text.SPI_Deinit), (58 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_Deinit), (8 bytes).
    Removing fsl_spi.o(.text.SPI_EnableTxDMA), (18 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_EnableTxDMA), (8 bytes).
    Removing fsl_spi.o(.text.SPI_EnableRxDMA), (18 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_EnableRxDMA), (8 bytes).
    Removing fsl_spi.o(.text.SPI_WriteData), (142 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_WriteData), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterTransferCreateHandle), (248 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferCreateHandle), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterTransferHandleIRQ), (696 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferHandleIRQ), (8 bytes).
    Removing fsl_spi.o(.text.SPI_SlaveTransferHandleIRQ), (4 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_SlaveTransferHandleIRQ), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterTransferBlocking), (512 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferBlocking), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterTransferNonBlocking), (208 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferNonBlocking), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterHalfDuplexTransferBlocking), (158 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterHalfDuplexTransferBlocking), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterHalfDuplexTransferNonBlocking), (192 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterHalfDuplexTransferNonBlocking), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterTransferGetCount), (62 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferGetCount), (8 bytes).
    Removing fsl_spi.o(.text.SPI_MasterTransferAbort), (64 bytes).
    Removing fsl_spi.o(.ARM.exidx.text.SPI_MasterTransferAbort), (8 bytes).
    Removing fsl_spi.o(.bss.s_dummyData), (9 bytes).
    Removing fsl_spi.o(.rodata.s_spiBaseAddrs), (36 bytes).
    Removing fsl_spi.o(.rodata.str1.1), (614 bytes).
    Removing fsl_spi.o(.bss.g_configs), (18 bytes).
    Removing fsl_usart.o(.text), (0 bytes).
    Removing fsl_usart.o(.text.USART_GetInstance), (50 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_GetInstance), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferGetRxRingBufferLength), (40 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferStartRingBuffer), (104 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferStopRingBuffer), (74 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_SetBaudRate), (8 bytes).
    Removing fsl_usart.o(.text.USART_Deinit), (62 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_Deinit), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_GetDefaultConfig), (8 bytes).
    Removing fsl_usart.o(.text.USART_Enable32kMode), (84 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_Enable32kMode), (8 bytes).
    Removing fsl_usart.o(.text.USART_Enable9bitMode), (56 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_Enable9bitMode), (8 bytes).
    Removing fsl_usart.o(.text.USART_SendAddress), (38 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_SendAddress), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_WriteBlocking), (8 bytes).
    Removing fsl_usart.o(.text.USART_ReadBlocking), (166 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_ReadBlocking), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferCreateHandle), (232 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferCreateHandle), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferHandleIRQ), (636 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferHandleIRQ), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferSendNonBlocking), (124 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferAbortSend), (54 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferAbortSend), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferGetSendCount), (86 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferGetSendCount), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferReceiveNonBlocking), (284 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferAbortReceive), (60 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferAbortReceive), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_usart.o(.rodata.cst32), (32 bytes).
    Removing system_lpc55s69_cm33_core0.o(.text), (0 bytes).
    Removing system_lpc55s69_cm33_core0.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_lpc55s69_cm33_core0.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_lpc55s69_cm33_core0.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_lpc55s69_cm33_core0.o(.ARM.exidx.text.findPll0PostDiv), (8 bytes).
    Removing system_lpc55s69_cm33_core0.o(.ARM.exidx.text.findPll0MMult), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter), (44 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_SendData), (46 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_SendDataReliable), (66 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadLine), (128 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadCharacter), (60 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_EnterLowpower), (26 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ExitLowpower), (26 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (76 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Flush), (4 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Putchar), (58 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (156 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_BlockingPrintf), (98 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Getchar), (76 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_debug_console.o(.text.fputc), (58 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing fsl_debug_console.o(.text.fgetc), (56 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing fsl_debug_console.o(.text._ttywrch), (44 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing fsl_debug_console.o(.text._sys_command_string), (2 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text._sys_command_string), (8 bytes).
    Removing fsl_debug_console.o(.bss.__stdout), (84 bytes).
    Removing fsl_debug_console.o(.bss.__stdin), (84 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (760 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).
    Removing fsl_power_lib.o(.text), (0 bytes).
    Removing fsl_power_lib.o(.text.POWER_CycleCpuAndFlash), (36 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_CycleCpuAndFlash), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterDeepSleep), (220 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepSleep), (8 bytes).
    Removing fsl_power_lib.o(.text.lf_set_ldo_ao_ldo_mem_voltage), (88 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.lf_set_ldo_ao_ldo_mem_voltage), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterLowPower), (140 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterLowPower), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterPowerDown), (332 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterPowerDown), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterDeepPowerDown), (488 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepPowerDown), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterSleep), (32 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterSleep), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_GetLibVersion), (6 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_GetLibVersion), (8 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_SetVoltageForFreq), (8 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.lowpower_set_dcdc_power_profile), (8 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.lowpower_set_voltage_for_process), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_Xtal16mhzCapabankTrim), (244 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_Xtal16mhzCapabankTrim), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_SetXtal16mhzLdo), (40 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_SetXtal16mhzLdo), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_Xtal32khzCapabankTrim), (196 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_Xtal32khzCapabankTrim), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_SetXtal16mhzTrim), (28 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_SetXtal16mhzTrim), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_GetWakeUpCause), (168 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_GetWakeUpCause), (8 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.lowpower_set_system_voltage), (8 bytes).

1291 unused section(s) (total 53921 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry7.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_hlt.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.s                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate_common.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit5.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/locale.c                         0x00000000   Number         0  _c16rtomb.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv8m_maindsp.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  vsnprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_truncate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_charcount.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wctomb.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_longlong_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec_accurate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_hex.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wchar.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_c.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_n.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_x.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_p.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_o.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_i.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_e.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_g.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_a.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lli.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lld.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llu.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ll.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_l.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lc.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ls.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llo.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llx.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/ffixull.s                       0x00000000   Number         0  ffixull.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/istatus.s                       0x00000000   Number         0  istatus.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/printf2.s                       0x00000000   Number         0  printf2.o ABSOLUTE
    ../fplib/printf2a.s                      0x00000000   Number         0  printf2a.o ABSOLUTE
    ../fplib/printf2b.s                      0x00000000   Number         0  printf2b.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    Blinky.c                                 0x00000000   Number         0  blinky.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    MVE_USED                                 0x00000000   Number         0  irq_armv8mml.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    arm_biquad_cascade_df1_fast_q15.c        0x00000000   Number         0  arm_biquad_cascade_df1_fast_q15.o ABSOLUTE
    arm_biquad_cascade_df1_init_q15.c        0x00000000   Number         0  arm_biquad_cascade_df1_init_q15.o ABSOLUTE
    arm_script.c                             0x00000000   Number         0  arm_script.o ABSOLUTE
    arm_script_process.c                     0x00000000   Number         0  arm_script_process.o ABSOLUTE
    arm_stream_detector.c                    0x00000000   Number         0  arm_stream_detector.o ABSOLUTE
    arm_stream_detector_process.c            0x00000000   Number         0  arm_stream_detector_process.o ABSOLUTE
    arm_stream_filter.c                      0x00000000   Number         0  arm_stream_filter.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    fsl_adapter_usart.c                      0x00000000   Number         0  fsl_adapter_usart.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_component_serial_manager.c           0x00000000   Number         0  fsl_component_serial_manager.o ABSOLUTE
    fsl_component_serial_port_uart.c         0x00000000   Number         0  fsl_component_serial_port_uart.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_dma.c                                0x00000000   Number         0  fsl_dma.o ABSOLUTE
    fsl_flexcomm.c                           0x00000000   Number         0  fsl_flexcomm.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_i2c.c                                0x00000000   Number         0  fsl_i2c.o ABSOLUTE
    fsl_power.c                              0x00000000   Number         0  fsl_power.o ABSOLUTE
    fsl_power_lib.c                          0x00000000   Number         0  fsl_power_lib.o ABSOLUTE
    fsl_reset.c                              0x00000000   Number         0  fsl_reset.o ABSOLUTE
    fsl_spi.c                                0x00000000   Number         0  fsl_spi.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    fsl_usart.c                              0x00000000   Number         0  fsl_usart.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main_LPC55S69SDK.c                       0x00000000   Number         0  main_lpc55s69sdk.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    peripherals.c                            0x00000000   Number         0  peripherals.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    platform_LPC55S69SDK.c                   0x00000000   Number         0  platform_lpc55s69sdk.o ABSOLUTE
    platform_al.c                            0x00000000   Number         0  platform_al.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stream_graph_interpreter.c               0x00000000   Number         0  stream_graph_interpreter.o ABSOLUTE
    stream_io.c                              0x00000000   Number         0  stream_io.o ABSOLUTE
    stream_nodes.c                           0x00000000   Number         0  stream_nodes.o ABSOLUTE
    stream_scheduler.c                       0x00000000   Number         0  stream_scheduler.o ABSOLUTE
    stream_services.c                        0x00000000   Number         0  stream_services.o ABSOLUTE
    system_LPC55S69_cm33_core0.c             0x00000000   Number         0  system_lpc55s69_cm33_core0.o ABSOLUTE
    vio_LPCXpresso55S69.c                    0x00000000   Number         0  vio_lpcxpresso55s69.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv8mml.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv8mml.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv8mml.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv8mml.o ABSOLUTE
    TCB_SM_OFS                               0x00000030   Number         0  irq_armv8mml.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv8mml.o ABSOLUTE
    TCB_TZM_OFS                              0x00000040   Number         0  irq_armv8mml.o ABSOLUTE
    !!!main                                  0x00000200   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000208   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x0000023c   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x00000278   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000294   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x00000296   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0000029a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0000029a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x0000029c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000029e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000029e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000029e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000029e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000029e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000029e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000029e   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002a0   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002a0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000007          0x000002a0   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    .ARM.Collect$$rtentry$$00000008          0x000002a4   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x000002ac   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002b0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002b0   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __lit__00000000                          0x000002b8   Data           4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtentry$$00002718          0x000002b8   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtexit$$00000000           0x000002bc   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x000002be   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x000002be   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x000002c2   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    [Anonymous Symbol]                       0x000002c8   Section        0  stream_io.o(.graph_interpreter_section)
    [Anonymous Symbol]                       0x000004fc   Section        0  irq_armv8mml.o(.text)
    SVC_Context                              0x00000524   Number         0  irq_armv8mml.o(.text)
    SVC_FP_LazyState                         0x00000534   Number         0  irq_armv8mml.o(.text)
    SVC_ContextSave                          0x00000546   Number         0  irq_armv8mml.o(.text)
    SVC_ContextSave_NS                       0x00000546   Number         0  irq_armv8mml.o(.text)
    SVC_ContextSaveSP                        0x00000554   Number         0  irq_armv8mml.o(.text)
    SVC_ContextSaveRegs                      0x0000057e   Number         0  irq_armv8mml.o(.text)
    SVC_ContextRestore                       0x00000594   Number         0  irq_armv8mml.o(.text)
    SVC_ContextRestore_NS                    0x00000594   Number         0  irq_armv8mml.o(.text)
    SVC_ContextRestoreSP                     0x000005b2   Number         0  irq_armv8mml.o(.text)
    SVC_Exit                                 0x000005b6   Number         0  irq_armv8mml.o(.text)
    SVC_User                                 0x000005b8   Number         0  irq_armv8mml.o(.text)
    [Anonymous Symbol]                       0x00000604   Section        0  startup_lpc55s69_cm33_core0.o(.text)
    .text                                    0x00000830   Section      240  lludivv7m.o(.text)
    .text                                    0x00000920   Section        0  exit.o(.text)
    .text                                    0x00000932   Section        0  strlen.o(.text)
    .text                                    0x00000970   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000009fa   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000a0a   Section       68  rt_memclr.o(.text)
    .text                                    0x00000a4e   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000a9c   Section      100  rt_memcpy_w.o(.text)
    [Anonymous Symbol]                       0x00000b00   Section        0  rtx_lib.o(.text.$Sub$$_fp_init)
    [Anonymous Symbol]                       0x00000b18   Section        0  clock_config.o(.text.BOARD_BootClockPLL150M)
    [Anonymous Symbol]                       0x00000c08   Section        0  clock_config.o(.text.BOARD_InitBootClocks)
    [Anonymous Symbol]                       0x00000c0c   Section        0  peripherals.o(.text.BOARD_InitBootPeripherals)
    [Anonymous Symbol]                       0x00000c10   Section        0  pin_mux.o(.text.BOARD_InitBootPins)
    [Anonymous Symbol]                       0x00000ce8   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x00000d14   Section        0  fsl_clock.o(.text.CLOCK_AttachClk)
    [Anonymous Symbol]                       0x00000d70   Section        0  fsl_clock.o(.text.CLOCK_SetClkDiv)
    [Anonymous Symbol]                       0x00000da8   Section        0  fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq)
    [Anonymous Symbol]                       0x00000eac   Section        0  fsl_clock.o(.text.CLOCK_SetPLL0Freq)
    [Anonymous Symbol]                       0x00000ff0   Section        0  fsl_clock.o(.text.CLOCK_SetupExtClocking)
    [Anonymous Symbol]                       0x00001030   Section        0  fsl_clock.o(.text.CLOCK_SetupFROClocking)
    [Anonymous Symbol]                       0x00001094   Section        0  fsl_dma.o(.text.DMA0_DriverIRQHandler)
    [Anonymous Symbol]                       0x000010a0   Section        0  fsl_dma.o(.text.DMA1_DriverIRQHandler)
    [Anonymous Symbol]                       0x000010ac   Section        0  fsl_dma.o(.text.DMA_IRQHandle)
    [Anonymous Symbol]                       0x00001194   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_PrintCallback                 0x00001231   Thumb Code   114  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x00001230   Section        0  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x000012a4   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x00001310   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x000014a8   Section        0  eventrecorder.o(.text.EventRecord4)
    [Anonymous Symbol]                       0x00001754   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x00001760   Section        0  rtx_evr.o(.text.EvrRtxDelay)
    [Anonymous Symbol]                       0x00001770   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x00001780   Section        0  rtx_evr.o(.text.EvrRtxDelayError)
    [Anonymous Symbol]                       0x0000178c   Section        0  rtx_evr.o(.text.EvrRtxDelayStarted)
    [Anonymous Symbol]                       0x0000179c   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x000017ac   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x000017b8   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x000017c4   Section        0  rtx_evr.o(.text.EvrRtxKernelGetState)
    [Anonymous Symbol]                       0x000017d4   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x000017e4   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x000017f4   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x00001804   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x00001814   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00001834   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x00001844   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x00001868   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x00001888   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x000018ac   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x000018cc   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x000018dc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x000018ec   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x000018f8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00001918   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x0000193c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x0000194c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x0000195c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x0000196c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x0000197c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x0000198c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x000019ac   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x000019d0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x000019e0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x000019f0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001a00   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x00001a10   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x00001a20   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x00001a30   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x00001a40   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x00001a50   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x00001a60   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x00001a6c   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x00001a7c   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x00001a8c   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x00001a9c   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x00001aac   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x00001abc   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x00001acc   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x00001ae4   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x00001af4   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x00001b00   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x00001b10   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    [Anonymous Symbol]                       0x00001b1c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x00001b2c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    [Anonymous Symbol]                       0x00001b3c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x00001b60   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x00001b80   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    [Anonymous Symbol]                       0x00001b90   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    [Anonymous Symbol]                       0x00001bb4   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x00001bc4   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x00001bd4   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x00001bf8   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x00001c08   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x00001c18   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x00001c28   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x00001c38   Section        0  fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001c80   Section        0  fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001cc8   Section        0  fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d10   Section        0  fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d58   Section        0  fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001da0   Section        0  fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001de8   Section        0  fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001e30   Section        0  fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001e78   Section        0  fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001ec4   Section        0  fsl_flexcomm.o(.text.FLEXCOMM_Init)
    s_flexcommResets                         0x00001f6c   Number         0  fsl_flexcomm.o(.text.FLEXCOMM_Init)
    [Anonymous Symbol]                       0x00001f90   Section        0  fsl_gpio.o(.text.GPIO_PinInit)
    [Anonymous Symbol]                       0x00002014   Section        0  fsl_adapter_usart.o(.text.HAL_UartInit)
    [Anonymous Symbol]                       0x000020e8   Section        0  fsl_adapter_usart.o(.text.HAL_UartSendBlocking)
    [Anonymous Symbol]                       0x00002150   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0000215c   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00002190   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x00002198   Section        0  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x000021e0   Section        0  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    __arm_cp.8_0                             0x00002204   Number         4  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    __arm_cp.8_1                             0x00002208   Number         4  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    [Anonymous Symbol]                       0x0000220c   Section        0  fsl_reset.o(.text.RESET_ClearPeripheralReset)
    [Anonymous Symbol]                       0x00002250   Section        0  fsl_reset.o(.text.RESET_PeripheralReset)
    [Anonymous Symbol]                       0x000022a4   Section        0  fsl_common.o(.text.SDK_DelayAtLeastUs)
    loop                                     0x000022c8   Number         0  fsl_common.o(.text.SDK_DelayAtLeastUs)
    [Anonymous Symbol]                       0x0000231c   Section        0  fsl_component_serial_manager.o(.text.SerialManager_Init)
    [Anonymous Symbol]                       0x0000234c   Section        0  fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle)
    [Anonymous Symbol]                       0x00002378   Section        0  fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle)
    [Anonymous Symbol]                       0x0000239c   Section        0  fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking)
    [Anonymous Symbol]                       0x000023c8   Section        0  fsl_component_serial_port_uart.o(.text.Serial_UartInit)
    [Anonymous Symbol]                       0x000023e8   Section        0  fsl_component_serial_port_uart.o(.text.Serial_UartWrite)
    [Anonymous Symbol]                       0x00002400   Section        0  fsl_str.o(.text.StrFormatPrintf)
    [Anonymous Symbol]                       0x000026d8   Section        0  system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x000029b4   Section        0  system_lpc55s69_cm33_core0.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000029f8   Section        0  system_lpc55s69_cm33_core0.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x000029fc   Section        0  fsl_usart.o(.text.USART_GetDefaultConfig)
    [Anonymous Symbol]                       0x00002a44   Section        0  fsl_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x00002bc0   Section        0  fsl_usart.o(.text.USART_SetBaudRate)
    [Anonymous Symbol]                       0x00002ca8   Section        0  fsl_usart.o(.text.USART_WriteBlocking)
    [Anonymous Symbol]                       0x00002cf4   Section        0  platform_lpc55s69sdk.o(.text.WR_BYTE_AND_CHECK_MP_)
    [Anonymous Symbol]                       0x00002d04   Section        0  fsl_assert.o(.text.__aeabi_assert)
    __tagsym$$used.1                         0x00002d40   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x00002d40   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x00002d74   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x00002d74   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x00002d7c   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x00002d7c   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x00002d9c   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x00002d9c   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x00002dcc   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x00002dd0   Section        0  fsl_debug_console.o(.text._sys_exit)
    [Anonymous Symbol]                       0x00002dd4   Section        0  blinky.o(.text.app_initialize)
    app_main                                 0x00002de5   Thumb Code    56  blinky.o(.text.app_main)
    [Anonymous Symbol]                       0x00002de4   Section        0  blinky.o(.text.app_main)
    arc_index_update                         0x00002e1d   Thumb Code   620  stream_scheduler.o(.text.arc_index_update)
    [Anonymous Symbol]                       0x00002e1c   Section        0  stream_scheduler.o(.text.arc_index_update)
    [Anonymous Symbol]                       0x00003088   Section        0  arm_biquad_cascade_df1_fast_q15.o(.text.arm_biquad_cascade_df1_fast_q15)
    [Anonymous Symbol]                       0x0000311c   Section        0  arm_biquad_cascade_df1_init_q15.o(.text.arm_biquad_cascade_df1_init_q15)
    [Anonymous Symbol]                       0x00003138   Section        0  stream_graph_interpreter.o(.text.arm_graph_interpreter)
    [Anonymous Symbol]                       0x00003430   Section        0  arm_stream_detector.o(.text.arm_stream_detector)
    [Anonymous Symbol]                       0x000034f8   Section        0  arm_stream_detector_process.o(.text.arm_stream_detector_process)
    [Anonymous Symbol]                       0x000036e0   Section        0  arm_stream_filter.o(.text.arm_stream_filter)
    [Anonymous Symbol]                       0x00003788   Section        0  stream_services.o(.text.arm_stream_services)
    findPll0MMult                            0x000037a1   Thumb Code    96  system_lpc55s69_cm33_core0.o(.text.findPll0MMult)
    [Anonymous Symbol]                       0x000037a0   Section        0  system_lpc55s69_cm33_core0.o(.text.findPll0MMult)
    findPll0PostDiv                          0x00003801   Thumb Code    44  system_lpc55s69_cm33_core0.o(.text.findPll0PostDiv)
    [Anonymous Symbol]                       0x00003800   Section        0  system_lpc55s69_cm33_core0.o(.text.findPll0PostDiv)
    [Anonymous Symbol]                       0x0000382c   Section        0  platform_lpc55s69sdk.o(.text.gpio_out_0_set_stream)
    [Anonymous Symbol]                       0x0000384c   Section        0  platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move)
    [Anonymous Symbol]                       0x00003890   Section        0  platform_lpc55s69sdk.o(.text.gpio_out_0_stop_stream)
    [Anonymous Symbol]                       0x00003894   Section        0  stream_scheduler.o(.text.lin2pack)
    lowpower_set_dcdc_power_profile          0x000038c5   Thumb Code    72  fsl_power_lib.o(.text.lowpower_set_dcdc_power_profile)
    [Anonymous Symbol]                       0x000038c4   Section        0  fsl_power_lib.o(.text.lowpower_set_dcdc_power_profile)
    __arm_cp.9_0                             0x00003900   Number         4  fsl_power_lib.o(.text.lowpower_set_dcdc_power_profile)
    __arm_cp.9_2                             0x00003904   Number         4  fsl_power_lib.o(.text.lowpower_set_dcdc_power_profile)
    __arm_cp.9_3                             0x00003908   Number         4  fsl_power_lib.o(.text.lowpower_set_dcdc_power_profile)
    lowpower_set_system_voltage              0x0000390d   Thumb Code   204  fsl_power_lib.o(.text.lowpower_set_system_voltage)
    [Anonymous Symbol]                       0x0000390c   Section        0  fsl_power_lib.o(.text.lowpower_set_system_voltage)
    __arm_cp.16_0                            0x000039d4   Number         4  fsl_power_lib.o(.text.lowpower_set_system_voltage)
    lowpower_set_voltage_for_process         0x000039d9   Thumb Code   148  fsl_power_lib.o(.text.lowpower_set_voltage_for_process)
    [Anonymous Symbol]                       0x000039d8   Section        0  fsl_power_lib.o(.text.lowpower_set_voltage_for_process)
    __arm_cp.10_0                            0x00003a60   Number         4  fsl_power_lib.o(.text.lowpower_set_voltage_for_process)
    __arm_cp.10_1                            0x00003a64   Number         4  fsl_power_lib.o(.text.lowpower_set_voltage_for_process)
    __arm_cp.10_2                            0x00003a68   Number         4  fsl_power_lib.o(.text.lowpower_set_voltage_for_process)
    [Anonymous Symbol]                       0x00003a6c   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00003a94   Section        0  main_lpc55s69sdk.o(.text.main_demo)
    [Anonymous Symbol]                       0x00003aec   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00003b24   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00003b60   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00003b98   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00003bcc   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00003ca0   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00003d44   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00003d80   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00003db8   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00003df0   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00003e28   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x00003e2c   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x00003e30   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x00003e48   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x00003e4c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00003ecc   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00003f28   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00003f68   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00003fac   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00004004   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x00004065   Thumb Code   442  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00004064   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00004220   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x0000424c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x000042b4   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x00004304   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x000043b0   Section        0  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00004428   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x0000458c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x00004679   Thumb Code    98  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00004678   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x000046dc   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x000046f0   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0000471c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00004738   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x000047a9   Thumb Code   158  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000047a8   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00004848   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00004884   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00004898   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x000048b8   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00004904   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00004918   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x000049f0   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00004a94   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00004b18   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x00004b40   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x00004b6d   Thumb Code   200  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00004b6c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00004c34   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00004c50   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x00004cd4   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x00004d14   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00004d54   Section        0  stream_scheduler.o(.text.pack2linaddr_ptr)
    [Anonymous Symbol]                       0x00004d74   Section        0  platform_al.o(.text.platform_al)
    [Anonymous Symbol]                       0x00004e40   Section        0  platform_lpc55s69sdk.o(.text.platform_specific_long_offset)
    [Anonymous Symbol]                       0x00004e5c   Section        0  platform_lpc55s69sdk.o(.text.platform_specific_processor_arch_iomask)
    [Anonymous Symbol]                       0x00004e78   Section        0  platform_lpc55s69sdk.o(.text.stream_in_0_set_stream)
    [Anonymous Symbol]                       0x00004e94   Section        0  platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move)
    [Anonymous Symbol]                       0x00004eec   Section        0  platform_lpc55s69sdk.o(.text.stream_in_0_stop_stream)
    [Anonymous Symbol]                       0x00004ef0   Section        0  stream_scheduler.o(.text.stream_scan_graph)
    svcRtxDelay                              0x00005581   Thumb Code    52  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x00005580   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x000055b5   Thumb Code    22  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x000055b4   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x000055cd   Thumb Code   336  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x000055cc   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x0000571d   Thumb Code   176  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x0000571c   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x000057cd   Thumb Code   446  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x000057cc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x0000598d   Thumb Code   400  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x0000598c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x00005b1d   Thumb Code   326  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00005b1c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x00005c65   Thumb Code   226  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00005c64   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x00005d49   Thumb Code   204  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00005d48   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x00005e15   Thumb Code   168  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00005e14   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x00005ebd   Thumb Code   244  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00005ebc   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x00005fb1   Thumb Code   178  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00005fb0   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x00006065   Thumb Code   338  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x00006064   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x000061b9   Thumb Code   266  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x000061b8   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadNew                          0x000062c5   Thumb Code   578  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x000062c4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    thrButton                                0x00006509   Thumb Code    46  blinky.o(.text.thrButton)
    [Anonymous Symbol]                       0x00006508   Section        0  blinky.o(.text.thrButton)
    thrLED                                   0x00006539   Thumb Code    96  blinky.o(.text.thrLED)
    [Anonymous Symbol]                       0x00006538   Section        0  blinky.o(.text.thrLED)
    [Anonymous Symbol]                       0x00006598   Section        0  platform_lpc55s69sdk.o(.text.trace_set)
    [Anonymous Symbol]                       0x000065a8   Section        0  platform_lpc55s69sdk.o(.text.trace_start)
    [Anonymous Symbol]                       0x000065b8   Section        0  platform_lpc55s69sdk.o(.text.trace_stop)
    [Anonymous Symbol]                       0x000065bc   Section        0  vio_lpcxpresso55s69.o(.text.vioGetSignal)
    [Anonymous Symbol]                       0x00006620   Section        0  vio_lpcxpresso55s69.o(.text.vioInit)
    [Anonymous Symbol]                       0x00006744   Section        0  vio_lpcxpresso55s69.o(.text.vioSetSignal)
    $v0                                      0x000067a0   Number         0  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fnaninf                            0x000067a0   Section      140  fnaninf.o(x$fpl$fnaninf)
    $v0                                      0x0000682c   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0000682c   Section       26  fpinit.o(x$fpl$fpinit)
    $v0                                      0x00006848   Number         0  ffixull.o(x$fpl$llufromf)
    x$fpl$llufromf                           0x00006848   Section       92  ffixull.o(x$fpl$llufromf)
    __tagsym$$used.4                         0x000068a4   Number         0  rtx_lib.o(.rodata)
    x$fpl$usenofp                            0x000068a4   Section        0  usenofp.o(x$fpl$usenofp)
    __tagsym$$used.5                         0x00006914   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x0000694c   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    s_UsartAdapterBase                       0x00006964   Data          32  fsl_adapter_usart.o(.rodata.cst32)
    [Anonymous Symbol]                       0x00006964   Section        0  fsl_adapter_usart.o(.rodata.cst32)
    s_dmaBases                               0x00006984   Data           8  fsl_dma.o(.rodata.cst8)
    [Anonymous Symbol]                       0x00006984   Section        0  fsl_dma.o(.rodata.cst8)
    s_gpioClockName                          0x0000698c   Data           8  fsl_gpio.o(.rodata.cst8)
    [Anonymous Symbol]                       0x0000698c   Section        0  fsl_gpio.o(.rodata.cst8)
    os_idle_thread_attr                      0x00006c30   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x00006c30   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x00006c54   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x00006c54   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x00006c6c   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x00006c6c   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    s_flexcommBaseAddrs                      0x00006c98   Data          36  fsl_flexcomm.o(.rodata.s_flexcommBaseAddrs)
    [Anonymous Symbol]                       0x00006c98   Section        0  fsl_flexcomm.o(.rodata.s_flexcommBaseAddrs)
    s_flexcommClocks                         0x00006cbc   Data          18  fsl_flexcomm.o(.rodata.s_flexcommClocks)
    [Anonymous Symbol]                       0x00006cbc   Section        0  fsl_flexcomm.o(.rodata.s_flexcommClocks)
    .L.str.3                                 0x00006cce   Data          71  fsl_adapter_usart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006cce   Section        0  fsl_adapter_usart.o(.rodata.str1.1)
    .L.str.5                                 0x00006d15   Data           5  fsl_adapter_usart.o(.rodata.str1.1)
    .L.str.1                                 0x00006d1a   Data         102  fsl_adapter_usart.o(.rodata.str1.1)
    .L.str                                   0x00006d80   Data           7  fsl_adapter_usart.o(.rodata.str1.1)
    .L.str.6                                 0x00006d87   Data           7  fsl_adapter_usart.o(.rodata.str1.1)
    .L.str.1                                 0x00006d8e   Data          87  fsl_common.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006d8e   Section        0  fsl_common.o(.rodata.str1.1)
    .L.str                                   0x00006de5   Data          85  fsl_dma.o(.rodata.str1.1)
    .L.str.23                                0x00006de5   Data          34  fsl_dma.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006de5   Section        0  fsl_dma.o(.rodata.str1.1)
    .L.str.1                                 0x00006e07   Data          84  fsl_dma.o(.rodata.str1.1)
    .L.str                                   0x00006e5b   Data          45  fsl_flexcomm.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006e5b   Section        0  fsl_flexcomm.o(.rodata.str1.1)
    .L.str.1                                 0x00006e88   Data          89  fsl_flexcomm.o(.rodata.str1.1)
    .L.str.2                                 0x00006e8e   Data          62  fsl_dma.o(.rodata.str1.1)
    .L.str.3                                 0x00006ecc   Data         105  fsl_dma.o(.rodata.str1.1)
    .L.str                                   0x00006ee1   Data          35  fsl_gpio.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006ee1   Section        0  fsl_gpio.o(.rodata.str1.1)
    .L.str.1                                 0x00006f04   Data          85  fsl_gpio.o(.rodata.str1.1)
    .L.str.4                                 0x00006f35   Data          83  fsl_dma.o(.rodata.str1.1)
    .L.str.1                                 0x00006f59   Data          86  fsl_reset.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006f59   Section        0  fsl_reset.o(.rodata.str1.1)
    .L.str.5                                 0x00006f88   Data          83  fsl_dma.o(.rodata.str1.1)
    .L.str                                   0x00006faf   Data          13  fsl_reset.o(.rodata.str1.1)
    .L.str                                   0x00006fbc   Data          42  fsl_usart.o(.rodata.str1.1)
    .L.str.9                                 0x00006fbc   Data          36  fsl_usart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006fbc   Section        0  fsl_usart.o(.rodata.str1.1)
    .L.str.6                                 0x00006fdb   Data          15  fsl_dma.o(.rodata.str1.1)
    .L.str.7                                 0x00006fe0   Data          65  fsl_usart.o(.rodata.str1.1)
    .L.str.7                                 0x00006fea   Data          84  fsl_dma.o(.rodata.str1.1)
    .L.str.1                                 0x00007021   Data          86  fsl_usart.o(.rodata.str1.1)
    .L.str.2                                 0x0000703c   Data          15  fsl_usart.o(.rodata.str1.1)
    .L.str.11                                0x0000703e   Data          77  fsl_dma.o(.rodata.str1.1)
    .L.str.3                                 0x0000704b   Data          13  fsl_usart.o(.rodata.str1.1)
    .L.str                                   0x00007078   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x00007078   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str.13                                0x0000708b   Data          69  fsl_dma.o(.rodata.str1.1)
    .L.str.8                                 0x00007099   Data          13  fsl_usart.o(.rodata.str1.1)
    .L.str.11                                0x000070ca   Data          56  fsl_usart.o(.rodata.str1.1)
    .L.str.16                                0x000070d0   Data          95  fsl_dma.o(.rodata.str1.1)
    .L.str.12                                0x00007102   Data          50  fsl_usart.o(.rodata.str1.1)
    .L.str.18                                0x0000712f   Data          77  fsl_dma.o(.rodata.str1.1)
    .L.str.13                                0x00007134   Data          14  fsl_usart.o(.rodata.str1.1)
    .L.str.20                                0x0000717c   Data          37  fsl_dma.o(.rodata.str1.1)
    .L.str.21                                0x000071a1   Data          78  fsl_dma.o(.rodata.str1.1)
    .L.str.22                                0x000071ef   Data          70  fsl_dma.o(.rodata.str1.1)
    .L.str.24                                0x00007257   Data          84  fsl_dma.o(.rodata.str1.1)
    .L.str.26                                0x000072ab   Data         123  fsl_dma.o(.rodata.str1.1)
    s_Ext_Clk_Freq                           0x2000017c   Data           4  fsl_clock.o(.data.s_Ext_Clk_Freq)
    [Anonymous Symbol]                       0x2000017c   Section        0  fsl_clock.o(.data.s_Ext_Clk_Freq)
    DEBUG_CNT                                0x20000180   Data           4  stream_scheduler.o(.graph_interpreter_section)
    [Anonymous Symbol]                       0x20000180   Section        0  stream_scheduler.o(.graph_interpreter_section)
    MEXT                                     0x200001b0   Data        1024  platform_lpc55s69sdk.o(.bss.MEXT)
    [Anonymous Symbol]                       0x200001b0   Section        0  platform_lpc55s69sdk.o(.bss.MEXT)
    TCM1                                     0x200005b0   Data         128  platform_lpc55s69sdk.o(.bss.TCM1)
    [Anonymous Symbol]                       0x200005b0   Section        0  platform_lpc55s69sdk.o(.bss.TCM1)
    TS_OverflowLock                          0x20000630   Data           1  eventrecorder.o(.bss.TS_OverflowLock)
    [Anonymous Symbol]                       0x20000630   Section        0  eventrecorder.o(.bss.TS_OverflowLock)
    os_isr_queue                             0x20000650   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000650   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000690   Data       24000  rtx_lib.o(.bss.os)
    PendST                                   0x20006450   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20006450   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x20006454   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20006454   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20006488   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20006488   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200064d8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200064d8   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x2000651c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20006560   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20006560   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20006760   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20006760   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20006960   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20006960   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    platform_al.stream_initialization_done   0x20006961   Data           1  platform_al.o(.bss.platform_al.stream_initialization_done)
    [Anonymous Symbol]                       0x20006961   Section        0  platform_al.o(.bss.platform_al.stream_initialization_done)
    platform_al.stream_mp_synchro            0x20006962   Data           4  platform_al.o(.bss.platform_al.stream_mp_synchro)
    [Anonymous Symbol]                       0x20006962   Section        0  platform_al.o(.bss.platform_al.stream_mp_synchro)
    rx_buffer                                0x20006984   Data           4  platform_lpc55s69sdk.o(.bss.rx_buffer)
    [Anonymous Symbol]                       0x20006984   Section        0  platform_lpc55s69sdk.o(.bss.rx_buffer)
    s_DMAHandle                              0x20006988   Data         184  fsl_dma.o(.bss.s_DMAHandle)
    [Anonymous Symbol]                       0x20006988   Section        0  fsl_dma.o(.bss.s_DMAHandle)
    s_Pll0_Freq                              0x20006a40   Data           4  fsl_clock.o(.bss.s_Pll0_Freq)
    [Anonymous Symbol]                       0x20006a40   Section        0  fsl_clock.o(.bss.s_Pll0_Freq)
    s_debugConsoleReadWaitSemaphore          0x20006a44   Data           1  fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore)
    [Anonymous Symbol]                       0x20006a44   Section        0  fsl_debug_console.o(.bss.s_debugConsoleReadWaitSemaphore)
    s_debugConsoleState                      0x20006a48   Data          32  fsl_debug_console.o(.bss.s_debugConsoleState)
    [Anonymous Symbol]                       0x20006a48   Section        0  fsl_debug_console.o(.bss.s_debugConsoleState)
    s_flexcommHandle                         0x20006a68   Data          36  fsl_flexcomm.o(.bss.s_flexcommHandle)
    [Anonymous Symbol]                       0x20006a68   Section        0  fsl_flexcomm.o(.bss.s_flexcommHandle)
    s_flexcommIrqHandler                     0x20006a8c   Data          36  fsl_flexcomm.o(.bss.s_flexcommIrqHandler)
    [Anonymous Symbol]                       0x20006a8c   Section        0  fsl_flexcomm.o(.bss.s_flexcommIrqHandler)
    tid_thrButton                            0x20006ab0   Data           4  blinky.o(.bss.tid_thrButton)
    [Anonymous Symbol]                       0x20006ab0   Section        0  blinky.o(.bss.tid_thrButton)
    tid_thrLED                               0x20006ab4   Data           4  blinky.o(.bss.tid_thrLED)
    [Anonymous Symbol]                       0x20006ab4   Section        0  blinky.o(.bss.tid_thrLED)
    tx_buffer                                0x20006ab8   Data           4  platform_lpc55s69sdk.o(.bss.tx_buffer)
    [Anonymous Symbol]                       0x20006ab8   Section        0  platform_lpc55s69sdk.o(.bss.tx_buffer)
    __tagsym$$used.5                         0x20006ac0   Number         0  vio_lpcxpresso55s69.o(.bss.vioAddrIPv4)
    __tagsym$$used.6                         0x20006ac8   Number         0  vio_lpcxpresso55s69.o(.bss.vioAddrIPv6)
    __tagsym$$used.2                         0x20006ae8   Number         0  vio_lpcxpresso55s69.o(.bss.vioPrintMem)
    __tagsym$$used.0                         0x20006be8   Number         0  vio_lpcxpresso55s69.o(.bss.vioSignalIn)
    __tagsym$$used.1                         0x20006bec   Number         0  vio_lpcxpresso55s69.o(.bss.vioSignalOut)
    __tagsym$$used.3                         0x20006bf0   Number         0  vio_lpcxpresso55s69.o(.bss.vioValue)
    __tagsym$$used.4                         0x20006bfc   Number         0  vio_lpcxpresso55s69.o(.bss.vioValueXYZ)
    EventBuffer                              0x20006c40   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20006c40   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20007040   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x200070c0   Data          36  eventrecorder.o(.bss.noinit)
    FPCCR                                    0xe000ef34   Number         0  irq_armv8mml.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$8M$VFPi5$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Number       304  startup_lpc55s69_cm33_core0.o(.isr_vector)
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    Image$$ZI$$Limit                          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_wc                                - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x00000201   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000209   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000209   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000209   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000217   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x0000023d   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x0000023d   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x00000279   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000295   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000297   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0000029b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x0000029d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000029f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000029f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000029f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000029f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000029f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000029f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000029f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002a1   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002a1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002a1   Thumb Code     0  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    __rt_entry_postsh_1                      0x000002a5   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x000002ad   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x000002b1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002b1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002bd   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x000002bf   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x000002bf   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x000002c3   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    platform_io_ack                          0x000002c9   Thumb Code   564  stream_io.o(.graph_interpreter_section)
    SVC_Handler                              0x000004fd   Thumb Code   216  irq_armv8mml.o(.text)
    PendSV_Handler                           0x000005d5   Thumb Code    16  irq_armv8mml.o(.text)
    SysTick_Handler                          0x000005e5   Thumb Code    16  irq_armv8mml.o(.text)
    Reset_Handler                            0x00000605   Thumb Code    32  startup_lpc55s69_cm33_core0.o(.text)
    ACMP_DriverIRQHandler                    0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    ADC0_DriverIRQHandler                    0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    BusFault_Handler                         0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CASER_DriverIRQHandler                   0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER0_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER1_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER2_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER3_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER4_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    DebugMon_Handler                         0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    DefaultISR                               0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    GINT0_DriverIRQHandler                   0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    GINT1_DriverIRQHandler                   0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    HASHCRYPT_DriverIRQHandler               0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    MAILBOX_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    MRT0_DriverIRQHandler                    0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    MemManage_Handler                        0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    OS_EVENT_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT0_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT1_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT2_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT3_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT4_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT5_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT6_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT7_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PLU_DriverIRQHandler                     0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PQ_DriverIRQHandler                      0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PUF_DriverIRQHandler                     0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    RTC_DriverIRQHandler                     0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved39_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved41_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved42_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved46_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved55_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved56_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved57_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved59_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved60_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved61_DriverIRQHandler              0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SCT0_DriverIRQHandler                    0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SDIO_DriverIRQHandler                    0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_GPIO_INT0_IRQ0_DriverIRQHandler      0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_GPIO_INT0_IRQ1_DriverIRQHandler      0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_HYPERVISOR_CALL_DriverIRQHandler     0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_VIO_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SecureFault_Handler                      0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB0_DriverIRQHandler                    0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB0_NEEDCLK_DriverIRQHandler            0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB1_DriverIRQHandler                    0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB1_NEEDCLK_DriverIRQHandler            0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB1_PHY_DriverIRQHandler                0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    UTICK0_DriverIRQHandler                  0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    UsageFault_Handler                       0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    WDT_BOD_DriverIRQHandler                 0x00000625   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    NMI_Handler                              0x00000629   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    HardFault_Handler                        0x0000062d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    WDT_BOD_IRQHandler                       0x0000063d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    DMA0_IRQHandler                          0x00000641   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    GINT0_IRQHandler                         0x00000645   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    GINT1_IRQHandler                         0x00000649   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT0_IRQHandler                      0x0000064d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT1_IRQHandler                      0x00000651   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT2_IRQHandler                      0x00000655   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT3_IRQHandler                      0x00000659   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    UTICK0_IRQHandler                        0x0000065d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    MRT0_IRQHandler                          0x00000661   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER0_IRQHandler                       0x00000665   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER1_IRQHandler                       0x00000669   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SCT0_IRQHandler                          0x0000066d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER3_IRQHandler                       0x00000671   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM0_IRQHandler                     0x00000675   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM1_IRQHandler                     0x00000679   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM2_IRQHandler                     0x0000067d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM3_IRQHandler                     0x00000681   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM4_IRQHandler                     0x00000685   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM5_IRQHandler                     0x00000689   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM6_IRQHandler                     0x0000068d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM7_IRQHandler                     0x00000691   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    ADC0_IRQHandler                          0x00000695   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved39_IRQHandler                    0x00000699   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    ACMP_IRQHandler                          0x0000069d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved41_IRQHandler                    0x000006a1   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved42_IRQHandler                    0x000006a5   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB0_NEEDCLK_IRQHandler                  0x000006a9   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB0_IRQHandler                          0x000006ad   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    RTC_IRQHandler                           0x000006b1   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved46_IRQHandler                    0x000006b5   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    MAILBOX_IRQHandler                       0x000006b9   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT4_IRQHandler                      0x000006bd   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT5_IRQHandler                      0x000006c1   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT6_IRQHandler                      0x000006c5   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PIN_INT7_IRQHandler                      0x000006c9   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER2_IRQHandler                       0x000006cd   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CTIMER4_IRQHandler                       0x000006d1   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    OS_EVENT_IRQHandler                      0x000006d5   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved55_IRQHandler                    0x000006d9   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved56_IRQHandler                    0x000006dd   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved57_IRQHandler                    0x000006e1   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SDIO_IRQHandler                          0x000006e5   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved59_IRQHandler                    0x000006e9   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved60_IRQHandler                    0x000006ed   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    Reserved61_IRQHandler                    0x000006f1   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB1_PHY_IRQHandler                      0x000006f5   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB1_IRQHandler                          0x000006f9   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    USB1_NEEDCLK_IRQHandler                  0x000006fd   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_HYPERVISOR_CALL_IRQHandler           0x00000701   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_GPIO_INT0_IRQ0_IRQHandler            0x00000705   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_GPIO_INT0_IRQ1_IRQHandler            0x00000709   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PLU_IRQHandler                           0x0000070d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    SEC_VIO_IRQHandler                       0x00000711   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    HASHCRYPT_IRQHandler                     0x00000715   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    CASER_IRQHandler                         0x00000719   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PUF_IRQHandler                           0x0000071d   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    PQ_IRQHandler                            0x00000721   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    DMA1_IRQHandler                          0x00000725   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    FLEXCOMM8_IRQHandler                     0x00000729   Thumb Code     4  startup_lpc55s69_cm33_core0.o(.text)
    __aeabi_uldivmod                         0x00000831   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x00000831   Thumb Code   240  lludivv7m.o(.text)
    exit                                     0x00000921   Thumb Code    18  exit.o(.text)
    strlen                                   0x00000933   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x00000971   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000971   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000009d7   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000009fb   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000009fb   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x00000a0b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000a0b   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x00000a0f   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x00000a4f   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000a4f   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000a4f   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x00000a53   Thumb Code    74  rt_memclr_w.o(.text)
    __aeabi_memcpy4                          0x00000a9d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000a9d   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000a9d   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000ae5   Thumb Code     0  rt_memcpy_w.o(.text)
    _fp_init                                 0x00000b01   Thumb Code    22  rtx_lib.o(.text.$Sub$$_fp_init)
    BOARD_BootClockPLL150M                   0x00000b19   Thumb Code   240  clock_config.o(.text.BOARD_BootClockPLL150M)
    BOARD_InitBootClocks                     0x00000c09   Thumb Code     4  clock_config.o(.text.BOARD_InitBootClocks)
    BOARD_InitBootPeripherals                0x00000c0d   Thumb Code     2  peripherals.o(.text.BOARD_InitBootPeripherals)
    BOARD_InitBootPins                       0x00000c11   Thumb Code   216  pin_mux.o(.text.BOARD_InitBootPins)
    BOARD_InitDebugConsole                   0x00000ce9   Thumb Code    44  board.o(.text.BOARD_InitDebugConsole)
    CLOCK_AttachClk                          0x00000d15   Thumb Code    90  fsl_clock.o(.text.CLOCK_AttachClk)
    CLOCK_SetClkDiv                          0x00000d71   Thumb Code    56  fsl_clock.o(.text.CLOCK_SetClkDiv)
    CLOCK_SetFLASHAccessCyclesForFreq        0x00000da9   Thumb Code   258  fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq)
    CLOCK_SetPLL0Freq                        0x00000ead   Thumb Code   322  fsl_clock.o(.text.CLOCK_SetPLL0Freq)
    CLOCK_SetupExtClocking                   0x00000ff1   Thumb Code    64  fsl_clock.o(.text.CLOCK_SetupExtClocking)
    CLOCK_SetupFROClocking                   0x00001031   Thumb Code   100  fsl_clock.o(.text.CLOCK_SetupFROClocking)
    DMA0_DriverIRQHandler                    0x00001095   Thumb Code    12  fsl_dma.o(.text.DMA0_DriverIRQHandler)
    DMA1_DriverIRQHandler                    0x000010a1   Thumb Code    12  fsl_dma.o(.text.DMA1_DriverIRQHandler)
    DMA_IRQHandle                            0x000010ad   Thumb Code   232  fsl_dma.o(.text.DMA_IRQHandle)
    DbgConsole_Init                          0x00001195   Thumb Code   154  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x000012a5   Thumb Code   108  fsl_debug_console.o(.text.DbgConsole_Printf)
    EventRecord2                             0x00001311   Thumb Code   406  eventrecorder.o(.text.EventRecord2)
    EventRecord4                             0x000014a9   Thumb Code   682  eventrecorder.o(.text.EventRecord4)
    EventRecorderTimerGetCount               0x00001755   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EvrRtxDelay                              0x00001761   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelay)
    EvrRtxDelayCompleted                     0x00001771   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxDelayError                         0x00001781   Thumb Code    12  rtx_evr.o(.text.EvrRtxDelayError)
    EvrRtxDelayStarted                       0x0000178d   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayStarted)
    EvrRtxEventFlagsWaitTimeout              0x0000179d   Thumb Code    16  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x000017ad   Thumb Code    12  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelErrorNotify                  0x000017b9   Thumb Code    12  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxKernelGetState                     0x000017c5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelGetState)
    EvrRtxKernelInitialize                   0x000017d5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x000017e5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x000017f5   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x00001805   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x00001815   Thumb Code    32  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x00001835   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x00001845   Thumb Code    34  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x00001869   Thumb Code    32  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x00001889   Thumb Code    34  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x000018ad   Thumb Code    30  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x000018cd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x000018dd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x000018ed   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x000018f9   Thumb Code    32  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x00001919   Thumb Code    34  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x0000193d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x0000194d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x0000195d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNotInserted            0x0000196d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x0000197d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x0000198d   Thumb Code    32  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x000019ad   Thumb Code    34  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x000019d1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x000019e1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x000019f1   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x00001a01   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x00001a11   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x00001a21   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x00001a31   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x00001a41   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x00001a51   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x00001a61   Thumb Code    12  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x00001a6d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x00001a7d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x00001a8d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x00001a9d   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquireTimeout            0x00001aad   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x00001abd   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x00001acd   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x00001ae5   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x00001af5   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x00001b01   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsError                   0x00001b11   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    EvrRtxThreadFlagsSet                     0x00001b1d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    EvrRtxThreadFlagsSetDone                 0x00001b2d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    EvrRtxThreadFlagsWait                    0x00001b3d   Thumb Code    34  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    EvrRtxThreadFlagsWaitCompleted           0x00001b61   Thumb Code    32  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitNotCompleted        0x00001b81   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    EvrRtxThreadFlagsWaitPending             0x00001b91   Thumb Code    34  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    EvrRtxThreadFlagsWaitTimeout             0x00001bb5   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadJoined                       0x00001bc5   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x00001bd5   Thumb Code    34  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x00001bf9   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x00001c09   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x00001c19   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x00001c29   Thumb Code    16  rtx_evr.o(.text.EvrRtxTimerCallback)
    FLEXCOMM0_DriverIRQHandler               0x00001c39   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler)
    FLEXCOMM1_DriverIRQHandler               0x00001c81   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler)
    FLEXCOMM2_DriverIRQHandler               0x00001cc9   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler)
    FLEXCOMM3_DriverIRQHandler               0x00001d11   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler)
    FLEXCOMM4_DriverIRQHandler               0x00001d59   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler)
    FLEXCOMM5_DriverIRQHandler               0x00001da1   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler)
    FLEXCOMM6_DriverIRQHandler               0x00001de9   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler)
    FLEXCOMM7_DriverIRQHandler               0x00001e31   Thumb Code    48  fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler)
    FLEXCOMM8_DriverIRQHandler               0x00001e79   Thumb Code    52  fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler)
    FLEXCOMM_Init                            0x00001ec5   Thumb Code   168  fsl_flexcomm.o(.text.FLEXCOMM_Init)
    GPIO_PinInit                             0x00001f91   Thumb Code   130  fsl_gpio.o(.text.GPIO_PinInit)
    HAL_UartInit                             0x00002015   Thumb Code   204  fsl_adapter_usart.o(.text.HAL_UartInit)
    HAL_UartSendBlocking                     0x000020e9   Thumb Code   102  fsl_adapter_usart.o(.text.HAL_UartSendBlocking)
    OS_Tick_AcknowledgeIRQ                   0x00002151   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0000215d   Thumb Code    50  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00002191   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x00002199   Thumb Code    72  os_systick.o(.text.OS_Tick_Setup)
    POWER_SetVoltageForFreq                  0x000021e1   Thumb Code    44  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    RESET_ClearPeripheralReset               0x0000220d   Thumb Code    66  fsl_reset.o(.text.RESET_ClearPeripheralReset)
    RESET_PeripheralReset                    0x00002251   Thumb Code    82  fsl_reset.o(.text.RESET_PeripheralReset)
    SDK_DelayAtLeastUs                       0x000022a5   Thumb Code    80  fsl_common.o(.text.SDK_DelayAtLeastUs)
    SerialManager_Init                       0x0000231d   Thumb Code    46  fsl_component_serial_manager.o(.text.SerialManager_Init)
    SerialManager_OpenReadHandle             0x0000234d   Thumb Code    42  fsl_component_serial_manager.o(.text.SerialManager_OpenReadHandle)
    SerialManager_OpenWriteHandle            0x00002379   Thumb Code    34  fsl_component_serial_manager.o(.text.SerialManager_OpenWriteHandle)
    SerialManager_WriteBlocking              0x0000239d   Thumb Code    42  fsl_component_serial_manager.o(.text.SerialManager_WriteBlocking)
    Serial_UartInit                          0x000023c9   Thumb Code    30  fsl_component_serial_port_uart.o(.text.Serial_UartInit)
    Serial_UartWrite                         0x000023e9   Thumb Code    22  fsl_component_serial_port_uart.o(.text.Serial_UartWrite)
    StrFormatPrintf                          0x00002401   Thumb Code   728  fsl_str.o(.text.StrFormatPrintf)
    SystemCoreClockUpdate                    0x000026d9   Thumb Code   730  system_lpc55s69_cm33_core0.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x000029b5   Thumb Code    68  system_lpc55s69_cm33_core0.o(.text.SystemInit)
    SystemInitHook                           0x000029f9   Thumb Code     2  system_lpc55s69_cm33_core0.o(.text.SystemInitHook)
    USART_GetDefaultConfig                   0x000029fd   Thumb Code    56  fsl_usart.o(.text.USART_GetDefaultConfig)
    USART_Init                               0x00002a45   Thumb Code   316  fsl_usart.o(.text.USART_Init)
    USART_SetBaudRate                        0x00002bc1   Thumb Code   232  fsl_usart.o(.text.USART_SetBaudRate)
    USART_WriteBlocking                      0x00002ca9   Thumb Code    74  fsl_usart.o(.text.USART_WriteBlocking)
    WR_BYTE_AND_CHECK_MP_                    0x00002cf5   Thumb Code    14  platform_lpc55s69sdk.o(.text.WR_BYTE_AND_CHECK_MP_)
    __aeabi_assert                           0x00002d05   Thumb Code    16  fsl_assert.o(.text.__aeabi_assert)
    _mutex_acquire                           0x00002d41   Thumb Code    50  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x00002d75   Thumb Code     6  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x00002d7d   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x00002d9d   Thumb Code    46  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x00002dcd   Thumb Code     4  rtx_lib.o(.text._platform_post_stackheap_init)
    _sys_exit                                0x00002dd1   Thumb Code     2  fsl_debug_console.o(.text._sys_exit)
    app_initialize                           0x00002dd5   Thumb Code    16  blinky.o(.text.app_initialize)
    arm_biquad_cascade_df1_fast_q15          0x00003089   Thumb Code   146  arm_biquad_cascade_df1_fast_q15.o(.text.arm_biquad_cascade_df1_fast_q15)
    arm_biquad_cascade_df1_init_q15          0x0000311d   Thumb Code    26  arm_biquad_cascade_df1_init_q15.o(.text.arm_biquad_cascade_df1_init_q15)
    arm_graph_interpreter                    0x00003139   Thumb Code   758  stream_graph_interpreter.o(.text.arm_graph_interpreter)
    arm_stream_detector                      0x00003431   Thumb Code   200  arm_stream_detector.o(.text.arm_stream_detector)
    arm_stream_detector_process              0x000034f9   Thumb Code   488  arm_stream_detector_process.o(.text.arm_stream_detector_process)
    arm_stream_filter                        0x000036e1   Thumb Code   168  arm_stream_filter.o(.text.arm_stream_filter)
    arm_stream_services                      0x00003789   Thumb Code    22  stream_services.o(.text.arm_stream_services)
    gpio_out_0_set_stream                    0x0000382d   Thumb Code    32  platform_lpc55s69sdk.o(.text.gpio_out_0_set_stream)
    gpio_out_0_start_data_move               0x0000384d   Thumb Code    68  platform_lpc55s69sdk.o(.text.gpio_out_0_start_data_move)
    gpio_out_0_stop_stream                   0x00003891   Thumb Code     4  platform_lpc55s69sdk.o(.text.gpio_out_0_stop_stream)
    lin2pack                                 0x00003895   Thumb Code    48  stream_scheduler.o(.text.lin2pack)
    main                                     0x00003a6d   Thumb Code    38  main.o(.text.main)
    main_demo                                0x00003a95   Thumb Code    88  main_lpc55s69sdk.o(.text.main_demo)
    osDelay                                  0x00003aed   Thumb Code    54  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x00003b25   Thumb Code    60  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x00003b61   Thumb Code    54  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00003b99   Thumb Code    50  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00003bcd   Thumb Code   212  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x00003ca1   Thumb Code   162  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00003d45   Thumb Code    60  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00003d81   Thumb Code    56  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00003db9   Thumb Code    56  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00003df1   Thumb Code    56  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x00003e29   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x00003e2d   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x00003e31   Thumb Code    22  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x00003e49   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x00003e4d   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00003ecd   Thumb Code    90  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00003f29   Thumb Code    64  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00003f69   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00003fad   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00004005   Thumb Code    96  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x00004221   Thumb Code    44  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x0000424d   Thumb Code   102  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x000042b5   Thumb Code    80  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x00004305   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x000043b1   Thumb Code   118  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00004429   Thumb Code   356  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x0000458d   Thumb Code   234  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x000046dd   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x000046f1   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0000471d   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00004739   Thumb Code   112  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00004849   Thumb Code    60  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00004885   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x00004899   Thumb Code    32  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x000048b9   Thumb Code    76  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00004905   Thumb Code    18  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00004919   Thumb Code   216  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x000049f1   Thumb Code   164  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00004a95   Thumb Code   132  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x00004b19   Thumb Code    38  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x00004b41   Thumb Code    42  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x00004c35   Thumb Code    26  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x00004c51   Thumb Code   130  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x00004cd5   Thumb Code    64  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadNew                              0x00004d15   Thumb Code    64  rtx_thread.o(.text.osThreadNew)
    pack2linaddr_ptr                         0x00004d55   Thumb Code    30  stream_scheduler.o(.text.pack2linaddr_ptr)
    platform_al                              0x00004d75   Thumb Code   202  platform_al.o(.text.platform_al)
    platform_specific_long_offset            0x00004e41   Thumb Code    26  platform_lpc55s69sdk.o(.text.platform_specific_long_offset)
    platform_specific_processor_arch_iomask  0x00004e5d   Thumb Code    26  platform_lpc55s69sdk.o(.text.platform_specific_processor_arch_iomask)
    stream_in_0_set_stream                   0x00004e79   Thumb Code    26  platform_lpc55s69sdk.o(.text.stream_in_0_set_stream)
    stream_in_0_start_data_move              0x00004e95   Thumb Code    88  platform_lpc55s69sdk.o(.text.stream_in_0_start_data_move)
    stream_in_0_stop_stream                  0x00004eed   Thumb Code     4  platform_lpc55s69sdk.o(.text.stream_in_0_stop_stream)
    stream_scan_graph                        0x00004ef1   Thumb Code  1680  stream_scheduler.o(.text.stream_scan_graph)
    trace_set                                0x00006599   Thumb Code    16  platform_lpc55s69sdk.o(.text.trace_set)
    trace_start                              0x000065a9   Thumb Code    16  platform_lpc55s69sdk.o(.text.trace_start)
    trace_stop                               0x000065b9   Thumb Code     4  platform_lpc55s69sdk.o(.text.trace_stop)
    vioGetSignal                             0x000065bd   Thumb Code    98  vio_lpcxpresso55s69.o(.text.vioGetSignal)
    vioInit                                  0x00006621   Thumb Code   292  vio_lpcxpresso55s69.o(.text.vioInit)
    vioSetSignal                             0x00006745   Thumb Code    92  vio_lpcxpresso55s69.o(.text.vioSetSignal)
    __fpl_fnaninf                            0x000067a1   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    $Super$$_fp_init                         0x0000682d   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00006845   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00006845   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __aeabi_f2ulz                            0x00006849   Thumb Code     0  ffixull.o(x$fpl$llufromf)
    _ll_ufrom_f                              0x00006849   Thumb Code    92  ffixull.o(x$fpl$llufromf)
    __I$use$fp                               0x000068a4   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxConfig                              0x000068a4   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x00006914   Data          56  rtx_lib.o(.rodata)
    EventRecorderInfo                        0x0000694c   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    detector_preset                          0x00006994   Data          40  arm_stream_detector.o(.rodata.detector_preset)
    graph_input                              0x000069bc   Data         624  main_lpc55s69sdk.o(.rodata.graph_input)
    osRtxUserSVC                             0x00006c2c   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    ptf_in_stream_in_0_data                  0x00006c90   Data           6  platform_lpc55s69sdk.o(.rodata.ptf_in_stream_in_0_data)
    Region$$Table$$Base                      0x00007084   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000070a4   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_lpc55s69_cm33_core0.o(.data.SystemCoreClock)
    node_entry_point_table                   0x20000004   Data          80  stream_nodes.o(.data.node_entry_point_table)
    osRtxInfo                                0x20000054   Data         164  rtx_kernel.o(.data.os)
    platform_io                              0x200000f8   Data         132  platform_lpc55s69sdk.o(.data.platform_io)
    platform_io_callback_parameter           0x20000184   Data          44  platform_al.o(.graph_interpreter_section)
    application_callbacks                    0x20000634   Data          16  main_lpc55s69sdk.o(.bss.application_callbacks)
    g_serialHandle                           0x20000644   Data           4  fsl_debug_console.o(.bss.g_serialHandle)
    long_offset                              0x20000648   Data           8  platform_lpc55s69sdk.o(.bss.long_offset)
    .bss.os.msgqueue.cb$$Base                0x20006454   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20006488   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200064d8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20006560   Number         0  rtx_lib.o(.bss.os.thread.cb)
    platform_iocontrol                       0x20006966   Data          11  platform_lpc55s69sdk.o(.bss.platform_iocontrol)
    ptf_in_gpio_out_data                     0x20006972   Data           6  platform_lpc55s69sdk.o(.bss.ptf_in_gpio_out_data)
    ptr_in_gpio_out_data                     0x20006978   Data           4  platform_lpc55s69sdk.o(.bss.ptr_in_gpio_out_data)
    ptr_in_stream_in_0_data                  0x2000697c   Data           4  platform_lpc55s69sdk.o(.bss.ptr_in_stream_in_0_data)
    ptr_trace                                0x20006980   Data           4  platform_lpc55s69sdk.o(.bss.ptr_trace)
    vioAddrIPv4                              0x20006ac0   Data           8  vio_lpcxpresso55s69.o(.bss.vioAddrIPv4)
    vioAddrIPv6                              0x20006ac8   Data          32  vio_lpcxpresso55s69.o(.bss.vioAddrIPv6)
    vioPrintMem                              0x20006ae8   Data         256  vio_lpcxpresso55s69.o(.bss.vioPrintMem)
    vioSignalIn                              0x20006be8   Data           4  vio_lpcxpresso55s69.o(.bss.vioSignalIn)
    vioSignalOut                             0x20006bec   Data           4  vio_lpcxpresso55s69.o(.bss.vioSignalOut)
    vioValue                                 0x20006bf0   Data          12  vio_lpcxpresso55s69.o(.bss.vioValue)
    vioValueXYZ                              0x20006bfc   Data          36  vio_lpcxpresso55s69.o(.bss.vioValueXYZ)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x200070e4   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x200080e4   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Base           0x20043c00   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20044000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000201

  Load Region LR_m_text (Base: 0x00000000, Size: 0x00007258, Max: 0x00072000, ABSOLUTE, COMPRESSED[0x000070e0])

    Execution Region VECTOR_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000130, Max: 0x00000200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000130   Data   RO         1294    .isr_vector         startup_lpc55s69_cm33_core0.o


    Execution Region ER_m_text (Exec base: 0x00000200, Load base: 0x00000200, Size: 0x00006ea4, Max: 0x00071e00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000200   0x00000200   0x00000008   Code   RO         2060  * !!!main             c_w.l(__main.o)
    0x00000208   0x00000208   0x00000034   Code   RO         2465    !!!scatter          c_w.l(__scatter.o)
    0x0000023c   0x0000023c   0x0000003a   Code   RO         2463    !!dczerorl          c_w.l(__dczerorl.o)
    0x00000276   0x00000276   0x00000002   PAD
    0x00000278   0x00000278   0x0000001c   Code   RO         2467    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000294   0x00000294   0x00000002   Code   RO         2398    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000296   0x00000296   0x00000004   Code   RO         2203    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2206    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2208    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2211    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2213    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2215    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2218    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2220    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2222    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2224    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2226    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2228    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2230    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2232    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2234    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2236    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2238    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2242    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2244    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2246    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000000   Code   RO         2248    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0000029a   0x0000029a   0x00000002   Code   RO         2249    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x0000029c   0x0000029c   0x00000002   Code   RO         2399    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000029e   0x0000029e   0x00000000   Code   RO         2425    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000029e   0x0000029e   0x00000000   Code   RO         2427    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000029e   0x0000029e   0x00000000   Code   RO         2430    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000029e   0x0000029e   0x00000000   Code   RO         2433    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000029e   0x0000029e   0x00000000   Code   RO         2435    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000029e   0x0000029e   0x00000000   Code   RO         2438    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000029e   0x0000029e   0x00000002   Code   RO         2439    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002a0   0x000002a0   0x00000000   Code   RO         2071    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002a0   0x000002a0   0x00000000   Code   RO         2262    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002a0   0x000002a0   0x00000004   Code   RO         2276    .ARM.Collect$$rtentry$$00000007  c_w.l(__rtentry7.o)
    0x000002a4   0x000002a4   0x00000008   Code   RO         2263    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x000002ac   0x000002ac   0x00000004   Code   RO         2265    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002b0   0x000002b0   0x00000000   Code   RO         2267    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002b0   0x000002b0   0x00000008   Code   RO         2268    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002b8   0x000002b8   0x00000004   Code   RO         2277    .ARM.Collect$$rtentry$$00002718  c_w.l(__rtentry7.o)
    0x000002bc   0x000002bc   0x00000002   Code   RO         2072    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x000002be   0x000002be   0x00000000   Code   RO         2282    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x000002be   0x000002be   0x00000004   Code   RO         2283    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x000002c2   0x000002c2   0x00000006   Code   RO         2284    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x000002c8   0x000002c8   0x00000234   Code   RO           52    .graph_interpreter_section  stream_io.o
    0x000004fc   0x000004fc   0x00000108   Code   RO          301    .text               irq_armv8mml.o
    0x00000604   0x00000604   0x0000022c   Code   RO         1293    .text               startup_lpc55s69_cm33_core0.o
    0x00000830   0x00000830   0x000000f0   Code   RO         2042    .text               c_w.l(lludivv7m.o)
    0x00000920   0x00000920   0x00000012   Code   RO         2048    .text               c_w.l(exit.o)
    0x00000932   0x00000932   0x0000003e   Code   RO         2050    .text               c_w.l(strlen.o)
    0x00000970   0x00000970   0x0000008a   Code   RO         2052    .text               c_w.l(rt_memcpy_v6.o)
    0x000009fa   0x000009fa   0x00000010   Code   RO         2054    .text               c_w.l(aeabi_memset4.o)
    0x00000a0a   0x00000a0a   0x00000044   Code   RO         2056    .text               c_w.l(rt_memclr.o)
    0x00000a4e   0x00000a4e   0x0000004e   Code   RO         2058    .text               c_w.l(rt_memclr_w.o)
    0x00000a9c   0x00000a9c   0x00000064   Code   RO         2199    .text               c_w.l(rt_memcpy_w.o)
    0x00000b00   0x00000b00   0x00000016   Code   RO          785    .text.$Sub$$_fp_init  rtx_lib.o
    0x00000b16   0x00000b16   0x00000002   PAD
    0x00000b18   0x00000b18   0x000000f0   Code   RO          250    .text.BOARD_BootClockPLL150M  clock_config.o
    0x00000c08   0x00000c08   0x00000004   Code   RO          248    .text.BOARD_InitBootClocks  clock_config.o
    0x00000c0c   0x00000c0c   0x00000002   Code   RO          267    .text.BOARD_InitBootPeripherals  peripherals.o
    0x00000c0e   0x00000c0e   0x00000002   PAD
    0x00000c10   0x00000c10   0x000000d8   Code   RO          276    .text.BOARD_InitBootPins  pin_mux.o
    0x00000ce8   0x00000ce8   0x0000002c   Code   RO          236    .text.BOARD_InitDebugConsole  board.o
    0x00000d14   0x00000d14   0x0000005a   Code   RO         1402    .text.CLOCK_AttachClk  fsl_clock.o
    0x00000d6e   0x00000d6e   0x00000002   PAD
    0x00000d70   0x00000d70   0x00000038   Code   RO         1406    .text.CLOCK_SetClkDiv  fsl_clock.o
    0x00000da8   0x00000da8   0x00000102   Code   RO         1414    .text.CLOCK_SetFLASHAccessCyclesForFreq  fsl_clock.o
    0x00000eaa   0x00000eaa   0x00000002   PAD
    0x00000eac   0x00000eac   0x00000142   Code   RO         1486    .text.CLOCK_SetPLL0Freq  fsl_clock.o
    0x00000fee   0x00000fee   0x00000002   PAD
    0x00000ff0   0x00000ff0   0x00000040   Code   RO         1416    .text.CLOCK_SetupExtClocking  fsl_clock.o
    0x00001030   0x00001030   0x00000064   Code   RO         1412    .text.CLOCK_SetupFROClocking  fsl_clock.o
    0x00001094   0x00001094   0x0000000c   Code   RO         1579    .text.DMA0_DriverIRQHandler  fsl_dma.o
    0x000010a0   0x000010a0   0x0000000c   Code   RO         1581    .text.DMA1_DriverIRQHandler  fsl_dma.o
    0x000010ac   0x000010ac   0x000000e8   Code   RO         1577    .text.DMA_IRQHandle  fsl_dma.o
    0x00001194   0x00001194   0x0000009a   Code   RO         1870    .text.DbgConsole_Init  fsl_debug_console.o
    0x0000122e   0x0000122e   0x00000002   PAD
    0x00001230   0x00001230   0x00000072   Code   RO         1882    .text.DbgConsole_PrintCallback  fsl_debug_console.o
    0x000012a2   0x000012a2   0x00000002   PAD
    0x000012a4   0x000012a4   0x0000006c   Code   RO         1880    .text.DbgConsole_Printf  fsl_debug_console.o
    0x00001310   0x00001310   0x00000196   Code   RO         1279    .text.EventRecord2  eventrecorder.o
    0x000014a6   0x000014a6   0x00000002   PAD
    0x000014a8   0x000014a8   0x000002aa   Code   RO         1281    .text.EventRecord4  eventrecorder.o
    0x00001752   0x00001752   0x00000002   PAD
    0x00001754   0x00001754   0x0000000c   Code   RO         1263    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x00001760   0x00001760   0x00000010   Code   RO          505    .text.EvrRtxDelay   rtx_evr.o
    0x00001770   0x00001770   0x00000010   Code   RO          513    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x00001780   0x00001780   0x0000000c   Code   RO          503    .text.EvrRtxDelayError  rtx_evr.o
    0x0000178c   0x0000178c   0x00000010   Code   RO          509    .text.EvrRtxDelayStarted  rtx_evr.o
    0x0000179c   0x0000179c   0x00000010   Code   RO          561    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x000017ac   0x000017ac   0x0000000c   Code   RO          375    .text.EvrRtxKernelError  rtx_evr.o
    0x000017b8   0x000017b8   0x0000000c   Code   RO          419    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x000017c4   0x000017c4   0x00000010   Code   RO          385    .text.EvrRtxKernelGetState  rtx_evr.o
    0x000017d4   0x000017d4   0x00000010   Code   RO          377    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x000017e4   0x000017e4   0x00000010   Code   RO          379    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x000017f4   0x000017f4   0x00000010   Code   RO          387    .text.EvrRtxKernelStart  rtx_evr.o
    0x00001804   0x00001804   0x00000010   Code   RO          389    .text.EvrRtxKernelStarted  rtx_evr.o
    0x00001814   0x00001814   0x00000020   Code   RO          365    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x00001834   0x00001834   0x00000010   Code   RO          371    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x00001844   0x00001844   0x00000022   Code   RO          373    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x00001866   0x00001866   0x00000002   PAD
    0x00001868   0x00001868   0x00000020   Code   RO          369    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x00001888   0x00001888   0x00000022   Code   RO          367    .text.EvrRtxMemoryFree  rtx_evr.o
    0x000018aa   0x000018aa   0x00000002   PAD
    0x000018ac   0x000018ac   0x0000001e   Code   RO          363    .text.EvrRtxMemoryInit  rtx_evr.o
    0x000018ca   0x000018ca   0x00000002   PAD
    0x000018cc   0x000018cc   0x00000010   Code   RO          639    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x000018dc   0x000018dc   0x00000010   Code   RO          667    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x000018ec   0x000018ec   0x0000000c   Code   RO          663    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x000018f8   0x000018f8   0x00000020   Code   RO          683    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x00001918   0x00001918   0x00000022   Code   RO          685    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x0000193a   0x0000193a   0x00000002   PAD
    0x0000193c   0x0000193c   0x00000010   Code   RO          687    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x0000194c   0x0000194c   0x00000010   Code   RO          677    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x0000195c   0x0000195c   0x00000010   Code   RO          679    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x0000196c   0x0000196c   0x00000010   Code   RO          681    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x0000197c   0x0000197c   0x00000010   Code   RO          691    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x0000198c   0x0000198c   0x00000020   Code   RO          671    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x000019ac   0x000019ac   0x00000022   Code   RO          673    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x000019ce   0x000019ce   0x00000002   PAD
    0x000019d0   0x000019d0   0x00000010   Code   RO          675    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x000019e0   0x000019e0   0x00000010   Code   RO          689    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x000019f0   0x000019f0   0x00000010   Code   RO          579    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x00001a00   0x00001a00   0x00000010   Code   RO          581    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x00001a10   0x00001a10   0x00000010   Code   RO          583    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x00001a20   0x00001a20   0x00000010   Code   RO          585    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x00001a30   0x00001a30   0x00000010   Code   RO          575    .text.EvrRtxMutexCreated  rtx_evr.o
    0x00001a40   0x00001a40   0x00000010   Code   RO          595    .text.EvrRtxMutexDelete  rtx_evr.o
    0x00001a50   0x00001a50   0x00000010   Code   RO          597    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x00001a60   0x00001a60   0x0000000c   Code   RO          571    .text.EvrRtxMutexError  rtx_evr.o
    0x00001a6c   0x00001a6c   0x00000010   Code   RO          573    .text.EvrRtxMutexNew  rtx_evr.o
    0x00001a7c   0x00001a7c   0x00000010   Code   RO          587    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x00001a8c   0x00001a8c   0x00000010   Code   RO          589    .text.EvrRtxMutexRelease  rtx_evr.o
    0x00001a9c   0x00001a9c   0x00000010   Code   RO          591    .text.EvrRtxMutexReleased  rtx_evr.o
    0x00001aac   0x00001aac   0x00000010   Code   RO          611    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x00001abc   0x00001abc   0x00000010   Code   RO          463    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x00001acc   0x00001acc   0x00000018   Code   RO          425    .text.EvrRtxThreadCreated  rtx_evr.o
    0x00001ae4   0x00001ae4   0x00000010   Code   RO          475    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x00001af4   0x00001af4   0x0000000c   Code   RO          421    .text.EvrRtxThreadError  rtx_evr.o
    0x00001b00   0x00001b00   0x00000010   Code   RO          471    .text.EvrRtxThreadExit  rtx_evr.o
    0x00001b10   0x00001b10   0x0000000c   Code   RO          481    .text.EvrRtxThreadFlagsError  rtx_evr.o
    0x00001b1c   0x00001b1c   0x00000010   Code   RO          483    .text.EvrRtxThreadFlagsSet  rtx_evr.o
    0x00001b2c   0x00001b2c   0x00000010   Code   RO          485    .text.EvrRtxThreadFlagsSetDone  rtx_evr.o
    0x00001b3c   0x00001b3c   0x00000022   Code   RO          493    .text.EvrRtxThreadFlagsWait  rtx_evr.o
    0x00001b5e   0x00001b5e   0x00000002   PAD
    0x00001b60   0x00001b60   0x00000020   Code   RO          499    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x00001b80   0x00001b80   0x00000010   Code   RO          501    .text.EvrRtxThreadFlagsWaitNotCompleted  rtx_evr.o
    0x00001b90   0x00001b90   0x00000022   Code   RO          495    .text.EvrRtxThreadFlagsWaitPending  rtx_evr.o
    0x00001bb2   0x00001bb2   0x00000002   PAD
    0x00001bb4   0x00001bb4   0x00000010   Code   RO          497    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x00001bc4   0x00001bc4   0x00000010   Code   RO          461    .text.EvrRtxThreadJoined  rtx_evr.o
    0x00001bd4   0x00001bd4   0x00000022   Code   RO          423    .text.EvrRtxThreadNew  rtx_evr.o
    0x00001bf6   0x00001bf6   0x00000002   PAD
    0x00001bf8   0x00001bf8   0x00000010   Code   RO          467    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x00001c08   0x00001c08   0x00000010   Code   RO          469    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x00001c18   0x00001c18   0x00000010   Code   RO          465    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x00001c28   0x00001c28   0x00000010   Code   RO          517    .text.EvrRtxTimerCallback  rtx_evr.o
    0x00001c38   0x00001c38   0x00000048   Code   RO         1604    .text.FLEXCOMM0_DriverIRQHandler  fsl_flexcomm.o
    0x00001c80   0x00001c80   0x00000048   Code   RO         1606    .text.FLEXCOMM1_DriverIRQHandler  fsl_flexcomm.o
    0x00001cc8   0x00001cc8   0x00000048   Code   RO         1608    .text.FLEXCOMM2_DriverIRQHandler  fsl_flexcomm.o
    0x00001d10   0x00001d10   0x00000048   Code   RO         1610    .text.FLEXCOMM3_DriverIRQHandler  fsl_flexcomm.o
    0x00001d58   0x00001d58   0x00000048   Code   RO         1612    .text.FLEXCOMM4_DriverIRQHandler  fsl_flexcomm.o
    0x00001da0   0x00001da0   0x00000048   Code   RO         1614    .text.FLEXCOMM5_DriverIRQHandler  fsl_flexcomm.o
    0x00001de8   0x00001de8   0x00000048   Code   RO         1616    .text.FLEXCOMM6_DriverIRQHandler  fsl_flexcomm.o
    0x00001e30   0x00001e30   0x00000048   Code   RO         1618    .text.FLEXCOMM7_DriverIRQHandler  fsl_flexcomm.o
    0x00001e78   0x00001e78   0x0000004c   Code   RO         1620    .text.FLEXCOMM8_DriverIRQHandler  fsl_flexcomm.o
    0x00001ec4   0x00001ec4   0x000000cc   Code   RO         1600    .text.FLEXCOMM_Init  fsl_flexcomm.o
    0x00001f90   0x00001f90   0x00000082   Code   RO         1638    .text.GPIO_PinInit  fsl_gpio.o
    0x00002012   0x00002012   0x00000002   PAD
    0x00002014   0x00002014   0x000000d4   Code   RO         1380    .text.HAL_UartInit  fsl_adapter_usart.o
    0x000020e8   0x000020e8   0x00000066   Code   RO         1386    .text.HAL_UartSendBlocking  fsl_adapter_usart.o
    0x0000214e   0x0000214e   0x00000002   PAD
    0x00002150   0x00002150   0x0000000c   Code   RO         1188    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x0000215c   0x0000215c   0x00000032   Code   RO         1184    .text.OS_Tick_Enable  os_systick.o
    0x0000218e   0x0000218e   0x00000002   PAD
    0x00002190   0x00002190   0x00000006   Code   RO         1190    .text.OS_Tick_GetIRQn  os_systick.o
    0x00002196   0x00002196   0x00000002   PAD
    0x00002198   0x00002198   0x00000048   Code   RO         1182    .text.OS_Tick_Setup  os_systick.o
    0x000021e0   0x000021e0   0x0000002c   Code   RO         1952    .text.POWER_SetVoltageForFreq  keil_lib_power_cm33_core0.lib(fsl_power_lib.o)
    0x0000220c   0x0000220c   0x00000042   Code   RO         1722    .text.RESET_ClearPeripheralReset  fsl_reset.o
    0x0000224e   0x0000224e   0x00000002   PAD
    0x00002250   0x00002250   0x00000052   Code   RO         1724    .text.RESET_PeripheralReset  fsl_reset.o
    0x000022a2   0x000022a2   0x00000002   PAD
    0x000022a4   0x000022a4   0x00000078   Code   RO         1526    .text.SDK_DelayAtLeastUs  fsl_common.o
    0x0000231c   0x0000231c   0x0000002e   Code   RO         1332    .text.SerialManager_Init  fsl_component_serial_manager.o
    0x0000234a   0x0000234a   0x00000002   PAD
    0x0000234c   0x0000234c   0x0000002a   Code   RO         1340    .text.SerialManager_OpenReadHandle  fsl_component_serial_manager.o
    0x00002376   0x00002376   0x00000002   PAD
    0x00002378   0x00002378   0x00000022   Code   RO         1336    .text.SerialManager_OpenWriteHandle  fsl_component_serial_manager.o
    0x0000239a   0x0000239a   0x00000002   PAD
    0x0000239c   0x0000239c   0x0000002a   Code   RO         1344    .text.SerialManager_WriteBlocking  fsl_component_serial_manager.o
    0x000023c6   0x000023c6   0x00000002   PAD
    0x000023c8   0x000023c8   0x0000001e   Code   RO         1360    .text.Serial_UartInit  fsl_component_serial_port_uart.o
    0x000023e6   0x000023e6   0x00000002   PAD
    0x000023e8   0x000023e8   0x00000016   Code   RO         1364    .text.Serial_UartWrite  fsl_component_serial_port_uart.o
    0x000023fe   0x000023fe   0x00000002   PAD
    0x00002400   0x00002400   0x000002d8   Code   RO         1924    .text.StrFormatPrintf  fsl_str.o
    0x000026d8   0x000026d8   0x000002da   Code   RO         1845    .text.SystemCoreClockUpdate  system_lpc55s69_cm33_core0.o
    0x000029b2   0x000029b2   0x00000002   PAD
    0x000029b4   0x000029b4   0x00000044   Code   RO         1841    .text.SystemInit    system_lpc55s69_cm33_core0.o
    0x000029f8   0x000029f8   0x00000002   Code   RO         1843    .text.SystemInitHook  system_lpc55s69_cm33_core0.o
    0x000029fa   0x000029fa   0x00000002   PAD
    0x000029fc   0x000029fc   0x00000048   Code   RO         1803    .text.USART_GetDefaultConfig  fsl_usart.o
    0x00002a44   0x00002a44   0x0000017c   Code   RO         1797    .text.USART_Init    fsl_usart.o
    0x00002bc0   0x00002bc0   0x000000e8   Code   RO         1799    .text.USART_SetBaudRate  fsl_usart.o
    0x00002ca8   0x00002ca8   0x0000004a   Code   RO         1811    .text.USART_WriteBlocking  fsl_usart.o
    0x00002cf2   0x00002cf2   0x00000002   PAD
    0x00002cf4   0x00002cf4   0x0000000e   Code   RO          120    .text.WR_BYTE_AND_CHECK_MP_  platform_lpc55s69sdk.o
    0x00002d02   0x00002d02   0x00000002   PAD
    0x00002d04   0x00002d04   0x0000003c   Code   RO         1915    .text.__aeabi_assert  fsl_assert.o
    0x00002d40   0x00002d40   0x00000032   Code   RO          791    .text._mutex_acquire  rtx_lib.o
    0x00002d72   0x00002d72   0x00000002   PAD
    0x00002d74   0x00002d74   0x00000006   Code   RO          795    .text._mutex_free   rtx_lib.o
    0x00002d7a   0x00002d7a   0x00000002   PAD
    0x00002d7c   0x00002d7c   0x00000020   Code   RO          789    .text._mutex_initialize  rtx_lib.o
    0x00002d9c   0x00002d9c   0x0000002e   Code   RO          793    .text._mutex_release  rtx_lib.o
    0x00002dca   0x00002dca   0x00000002   PAD
    0x00002dcc   0x00002dcc   0x00000004   Code   RO          783    .text._platform_post_stackheap_init  rtx_lib.o
    0x00002dd0   0x00002dd0   0x00000002   Code   RO         1896    .text._sys_exit     fsl_debug_console.o
    0x00002dd2   0x00002dd2   0x00000002   PAD
    0x00002dd4   0x00002dd4   0x00000010   Code   RO            4    .text.app_initialize  blinky.o
    0x00002de4   0x00002de4   0x00000038   Code   RO            6    .text.app_main      blinky.o
    0x00002e1c   0x00002e1c   0x0000026c   Code   RO           72    .text.arc_index_update  stream_scheduler.o
    0x00003088   0x00003088   0x00000092   Code   RO          218    .text.arm_biquad_cascade_df1_fast_q15  arm_biquad_cascade_df1_fast_q15.o
    0x0000311a   0x0000311a   0x00000002   PAD
    0x0000311c   0x0000311c   0x0000001a   Code   RO          227    .text.arm_biquad_cascade_df1_init_q15  arm_biquad_cascade_df1_init_q15.o
    0x00003136   0x00003136   0x00000002   PAD
    0x00003138   0x00003138   0x000002f6   Code   RO           42    .text.arm_graph_interpreter  stream_graph_interpreter.o
    0x0000342e   0x0000342e   0x00000002   PAD
    0x00003430   0x00003430   0x000000c8   Code   RO          197    .text.arm_stream_detector  arm_stream_detector.o
    0x000034f8   0x000034f8   0x000001e8   Code   RO          188    .text.arm_stream_detector_process  arm_stream_detector_process.o
    0x000036e0   0x000036e0   0x000000a8   Code   RO          209    .text.arm_stream_filter  arm_stream_filter.o
    0x00003788   0x00003788   0x00000016   Code   RO           93    .text.arm_stream_services  stream_services.o
    0x0000379e   0x0000379e   0x00000002   PAD
    0x000037a0   0x000037a0   0x00000060   Code   RO         1849    .text.findPll0MMult  system_lpc55s69_cm33_core0.o
    0x00003800   0x00003800   0x0000002c   Code   RO         1847    .text.findPll0PostDiv  system_lpc55s69_cm33_core0.o
    0x0000382c   0x0000382c   0x00000020   Code   RO          128    .text.gpio_out_0_set_stream  platform_lpc55s69sdk.o
    0x0000384c   0x0000384c   0x00000044   Code   RO          130    .text.gpio_out_0_start_data_move  platform_lpc55s69sdk.o
    0x00003890   0x00003890   0x00000004   Code   RO          132    .text.gpio_out_0_stop_stream  platform_lpc55s69sdk.o
    0x00003894   0x00003894   0x00000030   Code   RO           66    .text.lin2pack      stream_scheduler.o
    0x000038c4   0x000038c4   0x00000048   Code   RO         1954    .text.lowpower_set_dcdc_power_profile  keil_lib_power_cm33_core0.lib(fsl_power_lib.o)
    0x0000390c   0x0000390c   0x000000cc   Code   RO         1968    .text.lowpower_set_system_voltage  keil_lib_power_cm33_core0.lib(fsl_power_lib.o)
    0x000039d8   0x000039d8   0x00000094   Code   RO         1956    .text.lowpower_set_voltage_for_process  keil_lib_power_cm33_core0.lib(fsl_power_lib.o)
    0x00003a6c   0x00003a6c   0x00000026   Code   RO           33    .text.main          main.o
    0x00003a92   0x00003a92   0x00000002   PAD
    0x00003a94   0x00003a94   0x00000058   Code   RO           22    .text.main_demo     main_lpc55s69sdk.o
    0x00003aec   0x00003aec   0x00000036   Code   RO          309    .text.osDelay       rtx_delay.o
    0x00003b22   0x00003b22   0x00000002   PAD
    0x00003b24   0x00003b24   0x0000003c   Code   RO          727    .text.osKernelGetState  rtx_kernel.o
    0x00003b60   0x00003b60   0x00000036   Code   RO          721    .text.osKernelInitialize  rtx_kernel.o
    0x00003b96   0x00003b96   0x00000002   PAD
    0x00003b98   0x00003b98   0x00000032   Code   RO          731    .text.osKernelStart  rtx_kernel.o
    0x00003bca   0x00003bca   0x00000002   PAD
    0x00003bcc   0x00003bcc   0x000000d4   Code   RO          896    .text.osMessageQueueGet  rtx_msgqueue.o
    0x00003ca0   0x00003ca0   0x000000a2   Code   RO          894    .text.osMessageQueuePut  rtx_msgqueue.o
    0x00003d42   0x00003d42   0x00000002   PAD
    0x00003d44   0x00003d44   0x0000003c   Code   RO          946    .text.osMutexAcquire  rtx_mutex.o
    0x00003d80   0x00003d80   0x00000038   Code   RO          952    .text.osMutexDelete  rtx_mutex.o
    0x00003db8   0x00003db8   0x00000038   Code   RO          942    .text.osMutexNew    rtx_mutex.o
    0x00003df0   0x00003df0   0x00000038   Code   RO          948    .text.osMutexRelease  rtx_mutex.o
    0x00003e28   0x00003e28   0x00000002   Code   RO         1211    .text.osRtxErrorNotify  rtx_config.o
    0x00003e2a   0x00003e2a   0x00000002   PAD
    0x00003e2c   0x00003e2c   0x00000002   Code   RO         1209    .text.osRtxIdleThread  rtx_config.o
    0x00003e2e   0x00003e2e   0x00000002   PAD
    0x00003e30   0x00003e30   0x00000016   Code   RO          719    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x00003e46   0x00003e46   0x00000002   PAD
    0x00003e48   0x00003e48   0x00000002   Code   RO          717    .text.osRtxKernelPreInit  rtx_kernel.o
    0x00003e4a   0x00003e4a   0x00000002   PAD
    0x00003e4c   0x00003e4c   0x00000080   Code   RO          822    .text.osRtxMemoryAlloc  rtx_memory.o
    0x00003ecc   0x00003ecc   0x0000005a   Code   RO          824    .text.osRtxMemoryFree  rtx_memory.o
    0x00003f26   0x00003f26   0x00000002   PAD
    0x00003f28   0x00003f28   0x00000040   Code   RO          820    .text.osRtxMemoryInit  rtx_memory.o
    0x00003f68   0x00003f68   0x00000044   Code   RO          836    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x00003fac   0x00003fac   0x00000056   Code   RO          838    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x00004002   0x00004002   0x00000002   PAD
    0x00004004   0x00004004   0x00000060   Code   RO          834    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x00004064   0x00004064   0x000001ba   Code   RO          918    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x0000421e   0x0000421e   0x00000002   PAD
    0x00004220   0x00004220   0x0000002c   Code   RO          886    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x0000424c   0x0000424c   0x00000066   Code   RO          938    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x000042b2   0x000042b2   0x00000002   PAD
    0x000042b4   0x000042b4   0x00000050   Code   RO          940    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x00004304   0x00004304   0x000000ac   Code   RO         1010    .text.osRtxPendSV_Handler  rtx_system.o
    0x000043b0   0x000043b0   0x00000076   Code   RO         1012    .text.osRtxPostProcess  rtx_system.o
    0x00004426   0x00004426   0x00000002   PAD
    0x00004428   0x00004428   0x00000164   Code   RO         1032    .text.osRtxThreadDelayTick  rtx_thread.o
    0x0000458c   0x0000458c   0x000000ea   Code   RO         1038    .text.osRtxThreadDispatch  rtx_thread.o
    0x00004676   0x00004676   0x00000002   PAD
    0x00004678   0x00004678   0x00000062   Code   RO         1116    .text.osRtxThreadFree  rtx_thread.o
    0x000046da   0x000046da   0x00000002   PAD
    0x000046dc   0x000046dc   0x00000014   Code   RO         1024    .text.osRtxThreadListGet  rtx_thread.o
    0x000046f0   0x000046f0   0x0000002c   Code   RO         1022    .text.osRtxThreadListPut  rtx_thread.o
    0x0000471c   0x0000471c   0x0000001a   Code   RO         1028    .text.osRtxThreadListRemove  rtx_thread.o
    0x00004736   0x00004736   0x00000002   PAD
    0x00004738   0x00004738   0x00000070   Code   RO         1026    .text.osRtxThreadListSort  rtx_thread.o
    0x000047a8   0x000047a8   0x0000009e   Code   RO         1094    .text.osRtxThreadPostProcess  rtx_thread.o
    0x00004846   0x00004846   0x00000002   PAD
    0x00004848   0x00004848   0x0000003c   Code   RO         1030    .text.osRtxThreadReadyPut  rtx_thread.o
    0x00004884   0x00004884   0x00000014   Code   RO         1034    .text.osRtxThreadRegPtr  rtx_thread.o
    0x00004898   0x00004898   0x00000020   Code   RO         1044    .text.osRtxThreadStackCheck  rtx_thread.o
    0x000048b8   0x000048b8   0x0000004c   Code   RO         1046    .text.osRtxThreadStartup  rtx_thread.o
    0x00004904   0x00004904   0x00000012   Code   RO         1036    .text.osRtxThreadSwitch  rtx_thread.o
    0x00004916   0x00004916   0x00000002   PAD
    0x00004918   0x00004918   0x000000d8   Code   RO         1042    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x000049f0   0x000049f0   0x000000a4   Code   RO         1040    .text.osRtxThreadWaitExit  rtx_thread.o
    0x00004a94   0x00004a94   0x00000084   Code   RO         1008    .text.osRtxTick_Handler  rtx_system.o
    0x00004b18   0x00004b18   0x00000026   Code   RO         1144    .text.osRtxTimerSetup  rtx_timer.o
    0x00004b3e   0x00004b3e   0x00000002   PAD
    0x00004b40   0x00004b40   0x0000002a   Code   RO         1148    .text.osRtxTimerThread  rtx_timer.o
    0x00004b6a   0x00004b6a   0x00000002   PAD
    0x00004b6c   0x00004b6c   0x000000c8   Code   RO         1146    .text.osRtxTimerTick  rtx_timer.o
    0x00004c34   0x00004c34   0x0000001a   Code   RO         1078    .text.osThreadExit  rtx_thread.o
    0x00004c4e   0x00004c4e   0x00000002   PAD
    0x00004c50   0x00004c50   0x00000082   Code   RO         1086    .text.osThreadFlagsSet  rtx_thread.o
    0x00004cd2   0x00004cd2   0x00000002   PAD
    0x00004cd4   0x00004cd4   0x00000040   Code   RO         1092    .text.osThreadFlagsWait  rtx_thread.o
    0x00004d14   0x00004d14   0x00000040   Code   RO         1050    .text.osThreadNew   rtx_thread.o
    0x00004d54   0x00004d54   0x0000001e   Code   RO           64    .text.pack2linaddr_ptr  stream_scheduler.o
    0x00004d72   0x00004d72   0x00000002   PAD
    0x00004d74   0x00004d74   0x000000ca   Code   RO          104    .text.platform_al   platform_al.o
    0x00004e3e   0x00004e3e   0x00000002   PAD
    0x00004e40   0x00004e40   0x0000001a   Code   RO          116    .text.platform_specific_long_offset  platform_lpc55s69sdk.o
    0x00004e5a   0x00004e5a   0x00000002   PAD
    0x00004e5c   0x00004e5c   0x0000001a   Code   RO          118    .text.platform_specific_processor_arch_iomask  platform_lpc55s69sdk.o
    0x00004e76   0x00004e76   0x00000002   PAD
    0x00004e78   0x00004e78   0x0000001a   Code   RO          122    .text.stream_in_0_set_stream  platform_lpc55s69sdk.o
    0x00004e92   0x00004e92   0x00000002   PAD
    0x00004e94   0x00004e94   0x00000058   Code   RO          124    .text.stream_in_0_start_data_move  platform_lpc55s69sdk.o
    0x00004eec   0x00004eec   0x00000004   Code   RO          126    .text.stream_in_0_stop_stream  platform_lpc55s69sdk.o
    0x00004ef0   0x00004ef0   0x00000690   Code   RO           70    .text.stream_scan_graph  stream_scheduler.o
    0x00005580   0x00005580   0x00000034   Code   RO          313    .text.svcRtxDelay   rtx_delay.o
    0x000055b4   0x000055b4   0x00000016   Code   RO          729    .text.svcRtxKernelGetState  rtx_kernel.o
    0x000055ca   0x000055ca   0x00000002   PAD
    0x000055cc   0x000055cc   0x00000150   Code   RO          759    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x0000571c   0x0000571c   0x000000b0   Code   RO          761    .text.svcRtxKernelStart  rtx_kernel.o
    0x000057cc   0x000057cc   0x000001be   Code   RO          924    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x0000598a   0x0000598a   0x00000002   PAD
    0x0000598c   0x0000598c   0x00000190   Code   RO          888    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x00005b1c   0x00005b1c   0x00000146   Code   RO          922    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x00005c62   0x00005c62   0x00000002   PAD
    0x00005c64   0x00005c64   0x000000e2   Code   RO          958    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x00005d46   0x00005d46   0x00000002   PAD
    0x00005d48   0x00005d48   0x000000cc   Code   RO          964    .text.svcRtxMutexDelete  rtx_mutex.o
    0x00005e14   0x00005e14   0x000000a8   Code   RO          954    .text.svcRtxMutexNew  rtx_mutex.o
    0x00005ebc   0x00005ebc   0x000000f4   Code   RO          960    .text.svcRtxMutexRelease  rtx_mutex.o
    0x00005fb0   0x00005fb0   0x000000b2   Code   RO         1120    .text.svcRtxThreadExit  rtx_thread.o
    0x00006062   0x00006062   0x00000002   PAD
    0x00006064   0x00006064   0x00000152   Code   RO         1128    .text.svcRtxThreadFlagsSet  rtx_thread.o
    0x000061b6   0x000061b6   0x00000002   PAD
    0x000061b8   0x000061b8   0x0000010a   Code   RO         1134    .text.svcRtxThreadFlagsWait  rtx_thread.o
    0x000062c2   0x000062c2   0x00000002   PAD
    0x000062c4   0x000062c4   0x00000242   Code   RO         1048    .text.svcRtxThreadNew  rtx_thread.o
    0x00006506   0x00006506   0x00000002   PAD
    0x00006508   0x00006508   0x0000002e   Code   RO           10    .text.thrButton     blinky.o
    0x00006536   0x00006536   0x00000002   PAD
    0x00006538   0x00006538   0x00000060   Code   RO            8    .text.thrLED        blinky.o
    0x00006598   0x00006598   0x00000010   Code   RO          134    .text.trace_set     platform_lpc55s69sdk.o
    0x000065a8   0x000065a8   0x00000010   Code   RO          136    .text.trace_start   platform_lpc55s69sdk.o
    0x000065b8   0x000065b8   0x00000004   Code   RO          138    .text.trace_stop    platform_lpc55s69sdk.o
    0x000065bc   0x000065bc   0x00000062   Code   RO         1226    .text.vioGetSignal  vio_lpcxpresso55s69.o
    0x0000661e   0x0000661e   0x00000002   PAD
    0x00006620   0x00006620   0x00000124   Code   RO         1220    .text.vioInit       vio_lpcxpresso55s69.o
    0x00006744   0x00006744   0x0000005c   Code   RO         1224    .text.vioSetSignal  vio_lpcxpresso55s69.o
    0x000067a0   0x000067a0   0x0000008c   Code   RO         2250    x$fpl$fnaninf       fz_wm.l(fnaninf.o)
    0x0000682c   0x0000682c   0x0000001a   Code   RO         2066    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00006846   0x00006846   0x00000002   PAD
    0x00006848   0x00006848   0x0000005c   Code   RO         2062    x$fpl$llufromf      fz_wm.l(ffixull.o)
    0x000068a4   0x000068a4   0x00000000   Code   RO         2260    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x000068a4   0x000068a4   0x00000070   Data   RO          801    .rodata             rtx_lib.o
    0x00006914   0x00006914   0x00000038   Data   RO          804    .rodata             rtx_lib.o
    0x0000694c   0x0000694c   0x00000018   Data   RO         1284    .rodata.EventRecorderInfo  eventrecorder.o
    0x00006964   0x00006964   0x00000020   Data   RO         1393    .rodata.cst32       fsl_adapter_usart.o
    0x00006984   0x00006984   0x00000008   Data   RO         1587    .rodata.cst8        fsl_dma.o
    0x0000698c   0x0000698c   0x00000008   Data   RO         1641    .rodata.cst8        fsl_gpio.o
    0x00006994   0x00006994   0x00000028   Data   RO          199    .rodata.detector_preset  arm_stream_detector.o
    0x000069bc   0x000069bc   0x00000270   Data   RO           24    .rodata.graph_input  main_lpc55s69sdk.o
    0x00006c2c   0x00006c2c   0x00000004   Data   RO          803    .rodata.osRtxUserSVC  rtx_lib.o
    0x00006c30   0x00006c30   0x00000024   Data   RO          798    .rodata.os_idle_thread_attr  rtx_lib.o
    0x00006c54   0x00006c54   0x00000018   Data   RO          800    .rodata.os_timer_mq_attr  rtx_lib.o
    0x00006c6c   0x00006c6c   0x00000024   Data   RO          799    .rodata.os_timer_thread_attr  rtx_lib.o
    0x00006c90   0x00006c90   0x00000006   Data   RO          146    .rodata.ptf_in_stream_in_0_data  platform_lpc55s69sdk.o
    0x00006c96   0x00006c96   0x00000002   PAD
    0x00006c98   0x00006c98   0x00000024   Data   RO         1623    .rodata.s_flexcommBaseAddrs  fsl_flexcomm.o
    0x00006cbc   0x00006cbc   0x00000012   Data   RO         1625    .rodata.s_flexcommClocks  fsl_flexcomm.o
    0x00006cce   0x00006cce   0x000000c0   Data   RO         1392    .rodata.str1.1      fsl_adapter_usart.o
    0x00006d8e   0x00006d8e   0x00000057   Data   RO         1528    .rodata.str1.1      fsl_common.o
    0x00006de5   0x00006de5   0x00000076   Data   RO         1585    .rodata.str1.1      fsl_dma.o
    0x00006e5b   0x00006e5b   0x00000086   Data   RO         1624    .rodata.str1.1      fsl_flexcomm.o
    0x00006ee1   0x00006ee1   0x00000078   Data   RO         1640    .rodata.str1.1      fsl_gpio.o
    0x00006f59   0x00006f59   0x00000063   Data   RO         1726    .rodata.str1.1      fsl_reset.o
    0x00006fbc   0x00006fbc   0x000000bb   Data   RO         1832    .rodata.str1.1      fsl_usart.o
    0x00007077   0x00007077   0x00000001   PAD
    0x00007078   0x00007078   0x0000000b   Data   RO          773    .rodata.str1.4      rtx_kernel.o
    0x00007083   0x00007083   0x00000001   PAD
    0x00007084   0x00007084   0x00000020   Data   RO         2462    Region$$Table       anon$$obj.o


    Execution Region RW_m_data (Exec base: 0x20000000, Load base: 0x000070a8, Size: 0x00006c20, Max: 0x00042700, ABSOLUTE, COMPRESSED[0x00000038])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW         1851    .data.SystemCoreClock  system_lpc55s69_cm33_core0.o
    0x20000004   COMPRESSED   0x00000050   Data   RW          165    .data.node_entry_point_table  stream_nodes.o
    0x20000054   COMPRESSED   0x000000a4   Data   RW          774    .data.os            rtx_kernel.o
    0x200000f8   COMPRESSED   0x00000084   Data   RW          145    .data.platform_io   platform_lpc55s69sdk.o
    0x2000017c   COMPRESSED   0x00000004   Data   RW         1502    .data.s_Ext_Clk_Freq  fsl_clock.o
    0x20000180   COMPRESSED   0x00000004   Data   RW           74    .graph_interpreter_section  stream_scheduler.o
    0x20000184   COMPRESSED   0x0000002c   Data   RW          108    .graph_interpreter_section  platform_al.o
    0x200001b0        -       0x00000400   Zero   RW          142    .bss.MEXT           platform_lpc55s69sdk.o
    0x200005b0        -       0x00000080   Zero   RW          143    .bss.TCM1           platform_lpc55s69sdk.o
    0x20000630        -       0x00000001   Zero   RW         1285    .bss.TS_OverflowLock  eventrecorder.o
    0x20000631   COMPRESSED   0x00000003   PAD
    0x20000634        -       0x00000010   Zero   RW           25    .bss.application_callbacks  main_lpc55s69sdk.o
    0x20000644        -       0x00000004   Zero   RW         1904    .bss.g_serialHandle  fsl_debug_console.o
    0x20000648        -       0x00000008   Zero   RW          154    .bss.long_offset    platform_lpc55s69sdk.o
    0x20000650        -       0x00005e00   Zero   RW          797    .bss.os             rtx_lib.o
    0x20006450        -       0x00000001   Zero   RW         1200    .bss.os             os_systick.o
    0x20006451   COMPRESSED   0x00000003   PAD
    0x20006454        -       0x00000034   Zero   RW          809    .bss.os.msgqueue.cb  rtx_lib.o
    0x20006488        -       0x00000050   Zero   RW          810    .bss.os.msgqueue.mem  rtx_lib.o
    0x200064d8        -       0x00000088   Zero   RW          806    .bss.os.thread.cb   rtx_lib.o
    0x20006560        -       0x00000200   Zero   RW          807    .bss.os.thread.idle.stack  rtx_lib.o
    0x20006760        -       0x00000200   Zero   RW          808    .bss.os.thread.timer.stack  rtx_lib.o
    0x20006960        -       0x00000001   Zero   RW          811    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20006961        -       0x00000001   Zero   RW          106    .bss.platform_al.stream_initialization_done  platform_al.o
    0x20006962        -       0x00000004   Zero   RW          107    .bss.platform_al.stream_mp_synchro  platform_al.o
    0x20006966        -       0x0000000b   Zero   RW          144    .bss.platform_iocontrol  platform_lpc55s69sdk.o
    0x20006971   COMPRESSED   0x00000001   PAD
    0x20006972        -       0x00000006   Zero   RW          151    .bss.ptf_in_gpio_out_data  platform_lpc55s69sdk.o
    0x20006978        -       0x00000004   Zero   RW          152    .bss.ptr_in_gpio_out_data  platform_lpc55s69sdk.o
    0x2000697c        -       0x00000004   Zero   RW          149    .bss.ptr_in_stream_in_0_data  platform_lpc55s69sdk.o
    0x20006980        -       0x00000004   Zero   RW          147    .bss.ptr_trace      platform_lpc55s69sdk.o
    0x20006984        -       0x00000004   Zero   RW          148    .bss.rx_buffer      platform_lpc55s69sdk.o
    0x20006988        -       0x000000b8   Zero   RW         1586    .bss.s_DMAHandle    fsl_dma.o
    0x20006a40        -       0x00000004   Zero   RW         1506    .bss.s_Pll0_Freq    fsl_clock.o
    0x20006a44        -       0x00000001   Zero   RW         1903    .bss.s_debugConsoleReadWaitSemaphore  fsl_debug_console.o
    0x20006a45   COMPRESSED   0x00000003   PAD
    0x20006a48        -       0x00000020   Zero   RW         1902    .bss.s_debugConsoleState  fsl_debug_console.o
    0x20006a68        -       0x00000024   Zero   RW         1627    .bss.s_flexcommHandle  fsl_flexcomm.o
    0x20006a8c        -       0x00000024   Zero   RW         1626    .bss.s_flexcommIrqHandler  fsl_flexcomm.o
    0x20006ab0        -       0x00000004   Zero   RW           13    .bss.tid_thrButton  blinky.o
    0x20006ab4        -       0x00000004   Zero   RW           12    .bss.tid_thrLED     blinky.o
    0x20006ab8        -       0x00000004   Zero   RW          153    .bss.tx_buffer      platform_lpc55s69sdk.o
    0x20006abc   COMPRESSED   0x00000004   PAD
    0x20006ac0        -       0x00000008   Zero   RW         1249    .bss.vioAddrIPv4    vio_lpcxpresso55s69.o
    0x20006ac8        -       0x00000020   Zero   RW         1250    .bss.vioAddrIPv6    vio_lpcxpresso55s69.o
    0x20006ae8        -       0x00000100   Zero   RW         1246    .bss.vioPrintMem    vio_lpcxpresso55s69.o
    0x20006be8        -       0x00000004   Zero   RW         1244    .bss.vioSignalIn    vio_lpcxpresso55s69.o
    0x20006bec        -       0x00000004   Zero   RW         1245    .bss.vioSignalOut   vio_lpcxpresso55s69.o
    0x20006bf0        -       0x0000000c   Zero   RW         1247    .bss.vioValue       vio_lpcxpresso55s69.o
    0x20006bfc        -       0x00000024   Zero   RW         1248    .bss.vioValueXYZ    vio_lpcxpresso55s69.o


    Execution Region RW_NOINIT (Exec base: 0x20006c40, Load base: 0x000070e0, Size: 0x000004a4, Max: 0xffffffff, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20006c40        -       0x000004a4   Zero   RW         1283    .bss.noinit         eventrecorder.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x200070e4, Load base: 0x000070e0, Size: 0x00001000, Max: 0x00001000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200070e4        -       0x00001000   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x20043c00, Load base: 0x000070e0, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20043c00        -       0x00000400   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


    Execution Region RW_m_usb_bdt (Exec base: 0x40100000, Load base: 0x000070e0, Size: 0x00000000, Max: 0x00000000, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region RW_m_usb_ram (Exec base: 0x40100000, Load base: 0x000070e0, Size: 0x00000000, Max: 0x00004000, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****



  Load Region LR_CORE1_IMAGE (Base: 0x00072000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    Execution Region CORE1_REGION (Exec base: 0x00072000, Load base: 0x00072000, Size: 0x00000000, Max: 0x00026000, ABSOLUTE)

    **** No section assigned to this execution region ****


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       146          0          0          0          0       2590   arm_biquad_cascade_df1_fast_q15.o
        26          0          0          0          0       1366   arm_biquad_cascade_df1_init_q15.o
       200          0         40          0          0       2856   arm_stream_detector.o
       488          0          0          0          0       1806   arm_stream_detector_process.o
       168          0          0          0          0       2916   arm_stream_filter.o
       214          0          0          0          8       3286   blinky.o
        44          0          0          0          0       8248   board.o
       244         32          0          0          0      13781   clock_config.o
      1100          0         24          0       1189      22446   eventrecorder.o
       314          8        224          0          0       7108   fsl_adapter_usart.o
        60         44          0          0          0        830   fsl_assert.o
       890          4          0          4          4      43970   fsl_clock.o
       120         40         87          0          0       2441   fsl_common.o
       164          0          0          0          0       8741   fsl_component_serial_manager.o
        52          0          0          0          0       4533   fsl_component_serial_port_uart.o
       378          0          0          0         37      11370   fsl_debug_console.o
       256          0        126          0        184      32191   fsl_dma.o
       856        252        188          0         72      15378   fsl_flexcomm.o
       130          0        128          0          0      11968   fsl_gpio.o
       148          0         99          0          0       8938   fsl_reset.o
       728          0          0          0          0      10405   fsl_str.o
       758         80        187          0          0      20195   fsl_usart.o
       264         16          0          0          0        955   irq_armv8mml.o
        38          0          0          0          0        645   main.o
        88          0        624          0         16       2266   main_lpc55s69sdk.o
       140          0          0          0          1       5017   os_systick.o
         2          0          0          0          0        555   peripherals.o
       216          0          0          0          0      14046   pin_mux.o
       202         20          0         44          5       3191   platform_al.o
       324          0          6        132       1197       4501   platform_lpc55s69sdk.o
         4          0          0          0          0        692   rtx_config.o
       106          0          0          0          0       3196   rtx_delay.o
      1224          0          0          0          0      37669   rtx_evr.o
       722          0         11        164          0      18310   rtx_kernel.o
       160          0        268          0      25357       8198   rtx_lib.o
       282          0          0          0          0       2828   rtx_memory.o
       250          0          0          0          0      19062   rtx_mempool.o
      2032          0          0          0          0      23055   rtx_msgqueue.o
      1252          0          0          0          0      10570   rtx_mutex.o
       422         36          0          0          0       6227   rtx_system.o
      3278         10          0          0          0      41672   rtx_thread.o
       280          0          0          0          0      11579   rtx_timer.o
       556        272        304          0          0       2760   startup_lpc55s69_cm33_core0.o
       758          0          0          0          0       5024   stream_graph_interpreter.o
       564          0          0          0          0       3585   stream_io.o
         0          0          0         80          0        782   stream_nodes.o
      2378          0          0          4          0      19171   stream_scheduler.o
        22          0          0          0          0       2193   stream_services.o
       940         16          0          4          0      10477   system_lpc55s69_cm33_core0.o
       482          0          0          0        352      12839   vio_lpcxpresso55s69.o

    ----------------------------------------------------------------------
     24628        830       2352        432      33556     508428   Object Totals
         0          0         32          0       5120          0   (incl. Generated)
       158          0          4          0         14          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         8          4          0          0          0          0   __rtentry7.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
       240          0          0          0          0        100   lludivv7m.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        92          4          0          0          0        132   ffixull.o
       140          4          0          0          0        132   fnaninf.o
        26          0          0          0          0        116   fpinit.o
         0          0          0          0          0          0   usenofp.o
       468         36          0          0          0        448   fsl_power_lib.o

    ----------------------------------------------------------------------
      1648         56          0          0          0       1516   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       918         12          0          0          0        688   c_w.l
       258          8          0          0          0        380   fz_wm.l
       468         36          0          0          0        448   keil_lib_power_cm33_core0.lib

    ----------------------------------------------------------------------
      1648         56          0          0          0       1516   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     26276        886       2352        432      33556     508644   Grand Totals
     26276        886       2352         56      33556     508644   ELF Image Totals (compressed)
     26276        886       2352         56          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                28628 (  27.96kB)
    Total RW  Size (RW Data + ZI Data)             33988 (  33.19kB)
    Total ROM Size (Code + RO Data + RW Data)      28684 (  28.01kB)

==============================================================================

