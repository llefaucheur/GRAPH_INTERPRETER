;===========================================================================================================================
;   TOP GRAPH
                                ; 0: destination of the binary graph is in RAM (default) 
                                ; 1: keep the graph in Flash and copy in RAM the portion starting from PIO (the end of node linked-list)
graph_location  0               ; 2: the graph is already in RAM provided by the application

                                ; LSB set means "call the debug script before each nanoAppsRT is called"
                                ; bit 1 (2) set means "call the debug script after each naonoAppsRT is called"
                                ; bit 2 (4) set means "call the debug script at the end of the loop"
                                ; bit 3 (8) set means "call the debug script is called when starting the graph scheduling"
                                ; bit 4 (16) set means "call the debug script is called when returning of the graph scheduling"
debug_script_fields 0           ; no bit is set (default) the debug script is not called    (default 0)

                                ; 1: return to caller after each SWC calls
                                ; 2: return to caller once all SWC are parsed
scheduler_return 2              ; 3: return to caller when all SWC are starving (default 3)

allowed_processors 1            ; bit-field of the processors alloed to execute this graph, (default = 1 main processor)

set_file_path 0 ./              ; index and its file path, used for sub graphs and scripts 

graph_map_hwblock       0       ; index of the memory block VID indexes where to map the graph. Default VID's is 0 (internal RAM)

;============================
;   FORMATS 
;
format                  2           ; index used to start the declaration of a new format
format_raw_data         17          ; raw data of this format  (17 : S16 is the default)
format_frame_length     160         ; frame length in number of bytes (default :1)
format_interleaving     0           ; 0 means interleaved data, 1 means deinterleaved data by packets of "frame size"
format_nbchan           1           ; number of channels in the stream (default 1)
format_time_stamp       0           ; time-stamp format 0:none, 1:absolute time-stamp, 2:relative time, 3:simple counter
format_time_stamp_size  0           ; 0:16bits 1:32bits 2:64bits  (see "STREAM_TIME16D" for example)
format_sdomain          0           ; subdomain type (for example see stream_unit_physical used for analog sensors)
format_domain           2           ; IO_DOMAIN defined in the platform IO manifest (0 means "any")
;                       general            (a)synchronous sensor + rescaling, .. remote data, compressed streams, JSON, SensorThings
;                       audio_in           microphone, line-in, I2S, PDM RX 
;                       audio_out          line-out, earphone / speaker, PDM TX, I2S, 
;                       gpio_in            generic digital IO , control of relay, 
;                       gpio_out           generic digital IO , control of relay, 
;                       motion             accelerometer, combined or not with pressure and gyroscope 
;                       2d_in              camera sensor 
;                       2d_out             display, led matrix, 
;                       analog_in          with aging control 
;                       analog_out         D/A, position piezzo, PWM converter  
;                       rtc                ticks sent from a programmable timer 
;                       user_interface_in  button, slider, rotary button 
;                       user_interface_out LED, digits, display, 
;                       platform_3                                       
;                       platform_2         platform-specific #2, decoded with callbacks
;                       platform_1         platform-specific #1, decoded with callbacks
;
;   SPECIFIC OF DOMAINS
;
format_sampling_rate    16000.0     
format_audio_mapping
format_motion_mapping
format_2d_height
format_2d_width
format_2d_border


;========================
;   MAIN IO 
;
; list of HW IOs from "stream_tools_files_manifests_PLATFORMNAME.txt" + IO arc patched with this IO.

stream_io                   2           ; index used in the graph , starts the declaration of a new IO 
stream_io_format            0           ; index to the stream format (Index of the above table) (default #0)
stream_io_hwid              0           ; ID of the interface given in "files_manifests_computer" (default #0)
stream_io_setting           0           ; setting word32 (SETTINGS_IOFMT2), the format depends on the IO domain (default #0)
stream_io_cb_setting        0           ; use a callback (stream_al_services application_callbacks[]) for the setting 

;============================
;   MAPPING (TBC)
;
;   Split the memory mapping to ease memory overlays between nodes and arcs
;   format : original memory bank ID 
;            new ID to use in the node/arc declarations  
;            start within the original ID
;            length of the new memory bank
;   
;               ORIGINAL_ID  NEW_ID    START   LENGTH
; memory_mapping      2        100      1024    32700
;

;============================
;   DEBUG TRACE 
;   top_trace_node
;   ./subgraph_name/node_name #instanceID 
;    _end_
;

;==============================
;   SUBGRAPHS
;
;   subgraph name, used for name mangling of the nodes and arcs
;   path ID (set_file_path) and file name
;   list of indexes from "top_graph_interface" (or indexes if we are already in a subgraph)
;   memory_mapping partitions, list of VIDs used in the subgraph
;
subgraph 
    sub1                        ; subgraph name, used for name mangling
    3 sub_graph_0.txt           ; path and file name
    5 i16: 0 1 2 3 4            ; 5 streaming interfaces data_in_0, data_out_0 .. 
    3 i16: 0 0 0                ; 3 partitions here assigned to VID0 : fast-working slow-working slow-static


;==============================
;   NODE IN GRAPHS 
;
node <node_name> <instance_index> ; instance index in the (sub)graph, the compilation listing gives the physical index

node_preset              1      ; parameter preset used at boot time, default = #0
node_malloc_E            12     ; "E" parameter used in "Memory Size Bytes", default = #0
node_map_hwblock         2  3   ; index of the memory block "node_mem" and the VID indexes from "procmap_manifest_xxxx.txt" 
                                ;   where to map it. Default VID's is 0.
node_map_copy            2  3   ; copy the indexed "node_mem" to VID 3 (faster memory) before run
node_map_swap            2  3   ; swap the indexed "node_mem" to VID 3 (faster memory) before run, and restored after
node_trace_id            0      ; IO port used to send the trace 
node_map_proc            0      ; execute this nanoApp on this processor (0: any possible, default)
node_map_arch            0      ; execute this nanoApp on this architecture (0: any possible, default)
node_map_rtos            0      ; execute this nanoApp on this thread index (0: any possible, default)
node_map_verbose         0      ; level of debug trace, default = #0
node_script         <0..127>    ; index of the script to call before and after execution of this node, wait in case of collision.
       
        node_parameters  0      ; node parameters example (default : no parameter) TAG= 0 "load all parameters"
                                ; Set_parameter : the array of parameters starts on 32bits-aligned addresses
                                ; The programmer must arrange the data are aligned with respect to the way parameters are read in 
                                ;   the nanoApp (using pointers to 8/16/32bits fields).
            7  i8; 2 3 4 5 6 7 8 ; parameters
include 1 filter_parameters.txt ; path + text file-name using parameter syntax 
        _end_    


;==============================
;   SCRIPTING NODE IN GRAPHS (SCHEDULED LIKE OTHER NODES)
;
;   Checks if the data it needs is available and returns to the scheduler 
;   Its single arc (TX) is always empty
node arm_stream_script 1        ; instance index of arm_stream_script
    
    script_registers   2        ; number of registers (default is max = 6)
    script_pointers    2        ; number of pointer (default is max = 6)
    script_stack      12        ; size of the stack in word64 (default = 6)
    script_mem_shared  1        ; Is it a private RAM(0) or can it be shared with other scripts(1)
    script_mem_map     0        ; Memory mapping to VID #0 (default) this declaration creates the transmit arc of the script-node pointing to the stack/buffer area
                                ; 
    script_code 0               ; code of the binary format (0 : default, or native architecture)
        2 h16; 2002 0001        ; movi int16 r0 1
        1 h16; e810             ; equ r1,r0
        1 h16; 0381             ; ccallsys 1
        1 h16; C000             ; ret
    _end_                     

    script_assembler            ; start of assembler language (@@@ TBD)
        pshc int8 1
        gtr
        cjmp #1 
        pshc int16 
        cals readparam 
        labl #1
        ret  
   _end_

   node_parameters <ID2>        ; node parameters and index to let the code addressing it
                                ; Set_parameter : the array of parameters starts on 32bits-aligned addresses
                                ; The programmer must arrange the data are aligned with respect to the way parameters are read in 
                                ;   the nanoApp (using pointers to 8/16/32bits fields).
       1  i8; 0                 ; TAG= 0 "load all parameters"
       7  i8; 2 3 4 5 6 7 8     ; parameters

   node_parameters <ID2>        ; 
       include 1 binary_code.txt ; path ID and file name
   _end_  

_end_
;==============================
;   COMMON SCRIPTS IN GRAPHS (AND SCRIPT ID IN THE NODE HEADER "SCRIPT_LW0")
;
;   script instance #0 is the "main script" of the subgraph
script  0                       ; index of the script, to be mapped to an index in the graph compiler
   script_code                  ; start of byte-codes of the script
       2 h16; 2002 0001         ;
   _end_                        ;

;==============================
;   ARCS IN GRAPHS
                                ;----ARC CONNECTED TO GRAPH INTERFACE
                                ;  in a subgraph the IDX interfaces are sequential 1,2,3.. and documented like function parameters
                                ;  in the main graph the "top_graph_interface" have the indexes to use use in the first column 

                                ;      IO-ID    NAME INST IO FORMAT
arc_input  1 node_name  2  0  0 ; input arc index #1 connected to "node_name" instance #2 and its arc index #0, Format #0
arc_output 2 node_name  3  1  0 ; output arc index #2 connected to "node_name" instance #3 and its arc index #1, Format #0
                                ;----ARC CONNECTION BETWEEN TWO NANOAPPS
                                ;     NAME INST IO FMT    NAME INST IO FMT
arc node1 1 2 0 node2 3 4 1     ; arc   node1 instance node_index1 format_index1      node2 node_index2 format_index2  
                                ; arc between node1 instance #1 arc index #2, producer format #0 to 
                                ; node2 instance #3 and its arc index #4, consumer format #1
    ;----ARC PARAMETERS
arc_flow_error      1           ; #1 do something depending on domain when a flow error occurs, default #0 (no interpolation)
arc_debug_cmd       1           ; debug action "ARC_INCREMENT_REG", default = #0 (no debug)
arc_debug_reg       3           ; index of the 64bits result, default = #0
arc_debug_page      0           ; debug registers base address + 64bits x 16 registers = 32 word32 / page, default = #0
arc_flush           0           ; control of register "MPFLUSH_ARCW1" : forced flush of data in MProcessing and shared tasks
arc_extend_addr     1           ; address range extension-mode of the arc descriptor "EXTEND_ARCW2" for large NN models, default = #0 (no extension)
arc_map_hwblock     0           ; mapping VID index from "procmap_manifest_xxxx.txt" to map the buffer, default = #0 (VID0)
arc_jitter_ctrl     1.5         ; factor to apply to the minimum size between the producer and the consumer, default = 1.0 (no jitter)
        arc_parameters  0       ; (parameter arcs) buffer preloading, or arc descriptor set with script
            7  i8; 2 3 4 5 6 7 8 ; parameters
include 1 filter_parameters.txt ; path + text file-name using parameter syntax 
        _end_  
;=============================
